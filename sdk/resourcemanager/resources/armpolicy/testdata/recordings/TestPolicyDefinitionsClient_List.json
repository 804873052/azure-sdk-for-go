{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions?api-version=2021-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        ":authority": "localhost:5001",
        ":method": "GET",
        ":path": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions?api-version=2021-06-01",
        ":scheme": "https",
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armpolicy/v0.1.1 azsdk-go-azcore/v0.20.0 (go1.17; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 06 Jan 2022 05:36:37 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d504ab9f-1500-4291-b913-6cf2be710f63",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-request-id": "d504ab9f-1500-4291-b913-6cf2be710f63",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20220106T053638Z:d504ab9f-1500-4291-b913-6cf2be710f63"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1599 - Developer Configuration Management | Software / Firmware Integrity Verification",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1599"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0004bbf0-5099-4179-869e-e9ffe5fb0945",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0004bbf0-5099-4179-869e-e9ffe5fb0945"
          },
          {
            "properties": {
              "displayName": "Audit virtual machines without disaster recovery configured",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Audit virtual machines which do not have disaster recovery configured. To learn more about disaster recovery, visit https://aka.ms/asr-doc.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.Resources/links",
                    "existenceCondition": {
                      "field": "name",
                      "like": "ASR-Protect-*"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0015ea4d-51ff-4ce3-8d8c-f3f8f0179a56",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0015ea4d-51ff-4ce3-8d8c-f3f8f0179a56"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit Web Sockets state for a Function App",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "The Web Sockets protocol is vulnerable to different types of security threats. Use of Web Sockets within an Function app must be carefully reviewed.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "functionapp"
                        },
                        {
                          "field": "kind",
                          "equals": "functionapp,linux"
                        },
                        {
                          "field": "kind",
                          "equals": "functionapp,linux,container"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "DisableWebSockets",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/001802d1-4969-4c82-a700-c29c6c6f9bbd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "001802d1-4969-4c82-a700-c29c6c6f9bbd"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1375 - Incident Response Assistance | Automation Support For Availability Of Information / Support",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1375"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/00379355-8932-4b52-b63a-3bc6daf3451a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "00379355-8932-4b52-b63a-3bc6daf3451a"
          },
          {
            "properties": {
              "displayName": "Vulnerability assessment should be enabled on your Synapse workspaces",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Discover, track, and remediate potential vulnerabilities by configuring recurring SQL vulnerability assessment scans on your Synapse workspaces.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Synapse/workspaces"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Synapse/workspaces/vulnerabilityAssessments",
                    "name": "default",
                    "existenceCondition": {
                      "field": "Microsoft.Synapse/workspaces/vulnerabilityAssessments/recurringScans.isEnabled",
                      "equals": "True"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0049a6b3-a662-4f3e-8635-39cf44ace45a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0049a6b3-a662-4f3e-8635-39cf44ace45a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1605 - Developer Security Testing And Evaluation | Static Code Analysis",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1605"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0062eb8b-dc75-4718-8ea5-9bb4a9606655",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0062eb8b-dc75-4718-8ea5-9bb4a9606655"
          },
          {
            "properties": {
              "displayName": "SQL Server Integration Services integration runtimes on Azure Data Factory should be joined to a virtual network",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Virtual Network deployment provides enhanced security and isolation for your SQL Server Integration Services integration runtimes on Azure Data Factory, as well as subnets, access control policies, and other features to further restrict access.",
              "metadata": {
                "version": "2.0.0",
                "category": "Data Factory"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DataFactory/factories/integrationRuntimes"
                    },
                    {
                      "field": "Microsoft.DataFactory/factories/integrationruntimes/type",
                      "equals": "Managed"
                    },
                    {
                      "field": "Microsoft.DataFactory/factories/integrationRuntimes/Managed.typeProperties.computeProperties.vnetProperties.vnetId",
                      "exists": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0088bc63-6dee-4a9c-9d29-91cfdc848952",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0088bc63-6dee-4a9c-9d29-91cfdc848952"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure VMSS created with Shared Image Gallery images to install the Guest Attestation extension",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure VMSS created with Shared Image Gallery images to automatically install the Guest Attestation extension to allow Azure Security Center to proactively attest and monitor the boot integrity. Boot integrity is attested via Remote Attestation.",
              "metadata": {
                "category": "Security Center",
                "version": "2.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "attestationEndpoint": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Guest attestation tenant URL",
                    "description": "The Microsoft Azure Attestation (MAA) custom tenant URL."
                  },
                  "defaultValue": ""
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.securityType",
                      "equals": "TrustedLaunch"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
                      "equals": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
                      "equals": "true"
                    },
                    {
                      "field": "Microsoft.Compute/imageid",
                      "exists": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "in": [
                            "Microsoft.Azure.Security.LinuxAttestation",
                            "Microsoft.Azure.Security.WindowsAttestation"
                          ]
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "GuestAttestation"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/provisioningState",
                          "in": [
                            "Succeeded",
                            "Provisioning succeeded"
                          ]
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "imageId": {
                            "value": "[field(\u0027Microsoft.Compute/imageid\u0027)]"
                          },
                          "attestationEndpoint": {
                            "value": "[parameters(\u0027attestationEndpoint\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "imageId": {
                              "type": "string"
                            },
                            "attestationEndpoint": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "extensionName": "GuestAttestation",
                            "extensionPublisherPrefix": "Microsoft.Azure.Security.",
                            "extensionPublisherSuffix": "Attestation",
                            "extensionVersion": "1.0",
                            "maaTenantName": "GuestAttestation",
                            "ascReportingEndpoint": ""
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                              "apiVersion": "2018-10-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027extensionName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "[concat(variables(\u0027extensionPublisherPrefix\u0027), reference(split(parameters(\u0027imageId\u0027), \u0027/versions\u0027)[0], \u00272021-07-01\u0027).osType, variables(\u0027extensionPublisherSuffix\u0027))]",
                                "type": "[variables(\u0027extensionName\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027extensionVersion\u0027)]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "AttestationConfig": {
                                    "MaaSettings": {
                                      "maaEndpoint": "[parameters(\u0027attestationEndpoint\u0027)]",
                                      "maaTenantName": "[variables(\u0027maaTenantName\u0027)]"
                                    },
                                    "AscSettings": {
                                      "ascReportingEndpoint": "[variables(\u0027ascReportingEndpoint\u0027)]",
                                      "ascReportingFrequency": ""
                                    },
                                    "useCustomToken": "false",
                                    "disableAlerts": "false"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/009259b0-12e8-42c9-94e7-7af86aa58d13",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "009259b0-12e8-42c9-94e7-7af86aa58d13"
          },
          {
            "properties": {
              "displayName": "Private endpoint connections on Batch accounts should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoint connections allow secure communication by enabling private connectivity to Batch accounts without a need for public IP addresses at the source or destination. Learn more about private endpoints in Batch at https://docs.microsoft.com/azure/batch/private-connectivity.",
              "metadata": {
                "version": "1.0.0",
                "category": "Batch"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Batch/batchAccounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Batch/batchAccounts/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Batch/batchAccounts/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/009a0c92-f5b4-4776-9b66-4ed2b4775563",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "009a0c92-f5b4-4776-9b66-4ed2b4775563"
          },
          {
            "properties": {
              "displayName": "Azure Backup should be enabled for Virtual Machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Ensure protection of your Azure Virtual Machines by enabling Azure Backup. Azure Backup is a secure and cost effective data protection solution for Azure.",
              "metadata": {
                "version": "3.0.0",
                "category": "Backup"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "id",
                      "notContains": "/resourceGroups/databricks-rg-"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "azureopenshift"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "AzureDatabricks"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.RecoveryServices/backupprotecteditems"
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/013e242c-8828-4970-87b3-ab247555486d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "013e242c-8828-4970-87b3-ab247555486d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1142 - Security Assessment And Authorization Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1142"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/01524fa8-4555-48ce-ba5f-c3b8dcef5147",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "01524fa8-4555-48ce-ba5f-c3b8dcef5147"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1099 - Security Training Records",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Awareness and Training control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1099"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/01910bab-8639-4bd0-84ef-cc53b24d79ba",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "01910bab-8639-4bd0-84ef-cc53b24d79ba"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1285 - Telecommunications Services | Provider Contingency Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1285"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/01f7726b-db54-45c2-bcb5-9bd7a43796ee",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "01f7726b-db54-45c2-bcb5-9bd7a43796ee"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1709 - Security Function Verification",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1709"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/025992d6-7fee-4137-9bbf-2ffc39c0686c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "025992d6-7fee-4137-9bbf-2ffc39c0686c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1052 - Session Lock",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1052"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/027cae1c-ec3e-4492-9036-4168d540c42a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "027cae1c-ec3e-4492-9036-4168d540c42a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1034 - Least Privilege",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1034"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/02a5ed00-6d2e-4e97-9a98-46c32c057329",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "02a5ed00-6d2e-4e97-9a98-46c32c057329"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs on which the remote connection status does not match the specified one",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines on which the remote host connection status does not match the specified one. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsRemoteConnection",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/02a84be7-c304-421f-9bb7-5d2c26af54ad",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "02a84be7-c304-421f-9bb7-5d2c26af54ad"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1623 - Boundary Protection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1623"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/02ce1b22-412a-4528-8630-c42146f917ed",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "02ce1b22-412a-4528-8630-c42146f917ed"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1515 - Personnel Termination",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Personnel Security control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1515"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/02dd141a-a2b2-49a7-bcbd-ca31142f6211",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "02dd141a-a2b2-49a7-bcbd-ca31142f6211"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1327 - Authenticator Management | Password-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1327"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/03188d8f-1ae5-4fe1-974d-2d7d32ef937d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "03188d8f-1ae5-4fe1-974d-2d7d32ef937d"
          },
          {
            "properties": {
              "displayName": "[Preview]: Azure Security agent should be installed on your Windows Arc machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Install the Azure Security agent on your Windows Arc machines in order to monitor your machines for security configurations and vulnerabilities. Results of the assessments can seen and managed in Azure Security Center.",
              "metadata": {
                "category": "Security Center",
                "version": "1.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/imageOffer",
                      "like": "windows*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.HybridCompute/machines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/type",
                          "equals": "AzureSecurityWindowsAgent"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/Publisher",
                          "equals": "Microsoft.Azure.Security.Monitoring"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0367cfc4-90b3-46ba-a8a6-ddd5d3514878",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0367cfc4-90b3-46ba-a8a6-ddd5d3514878"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1229 - Information System Component Inventory | No Duplicate Accounting Of Components",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1229"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/03752212-103c-4ab8-a306-7e813022ca9d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "03752212-103c-4ab8-a306-7e813022ca9d"
          },
          {
            "properties": {
              "displayName": "Cognitive Services accounts should restrict network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Network access to Cognitive Services accounts should be restricted. Configure network rules so only applications from allowed networks can access the Cognitive Services account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges.",
              "metadata": {
                "version": "2.0.0",
                "category": "Cognitive Services"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/networkAcls.defaultAction",
                      "notEquals": "Deny"
                    },
                    {
                      "count": {
                        "field": "Microsoft.CognitiveServices/accounts/capabilities[*]",
                        "where": {
                          "field": "Microsoft.CognitiveServices/accounts/capabilities[*].name",
                          "equals": "VirtualNetworks"
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "037eea7a-bd0a-46c5-9a66-03aea78705d3"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1123 - Audit Review, Analysis, And Reporting | Audit Level Adjustment",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1123"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/03996055-37a4-45a5-8b70-3f1caa45f87d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "03996055-37a4-45a5-8b70-3f1caa45f87d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1474 - Emergency Power | Long-Term Alternate Power Supply - Minimal Operational Capability",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1474"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/03ad326e-d7a1-44b1-9a76-e17492efc9e4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "03ad326e-d7a1-44b1-9a76-e17492efc9e4"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1227 - Information System Component Inventory | Automated Unauthorized Component Detection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1227"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/03b78f5e-4877-4303-b0f4-eb6583f25768",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "03b78f5e-4877-4303-b0f4-eb6583f25768"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1361 - Incident Handling",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1361"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/03ed3be1-7276-4452-9a5d-e4168565ac67",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "03ed3be1-7276-4452-9a5d-e4168565ac67"
          },
          {
            "properties": {
              "displayName": "Azure Kubernetes Service Private Clusters should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable the private cluster feature for your Azure Kubernetes Service cluster to ensure network traffic between your API server and your node pools remains on the private network only. This is a common requirement in many regulatory and industry compliance standards.",
              "metadata": {
                "version": "1.0.0",
                "category": "Kubernetes"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "040732e8-d947-40b8-95d6-854c95024bf8"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1594 - Developer Configuration Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1594"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/042ba2a1-8bb8-45f4-b080-c78cf62b90e9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "042ba2a1-8bb8-45f4-b080-c78cf62b90e9"
          },
          {
            "properties": {
              "displayName": "Audit Linux machines that have the specified applications installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the Chef InSpec resource indicates that one or more of the packages provided by the parameter are installed.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "3.2.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "not_installed_application_linux",
                  "version": "1.*",
                  "configurationParameter": {
                    "ApplicationName": "[ChefInSpec]NotInstalledApplicationLinuxResource1;AttributesYmlContent"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                    "portalReview": "true"
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "ApplicationName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Application names",
                    "description": "A semicolon-separated list of the names of the applications that should not be installed. e.g. \u0027python; powershell\u0027"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "microsoft-aks",
                                "qubole-inc",
                                "datastax",
                                "couchbase",
                                "scalegrid",
                                "checkpoint",
                                "paloaltonetworks",
                                "debian"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "OpenLogic"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "CentOS*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Oracle"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Oracle-Linux"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "RHEL",
                                    "RHEL-HA",
                                    "RHEL-SAP",
                                    "RHEL-SAP-APPS",
                                    "RHEL-SAP-HA",
                                    "RHEL-SAP-HANA"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "osa",
                                    "rhel-byos"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "cis-centos-7-l1",
                                    "cis-centos-7-v2-1-1-l1",
                                    "cis-centos-8-l1",
                                    "cis-debian-linux-8-l1",
                                    "cis-debian-linux-9-l1",
                                    "cis-nginx-centos-7-v1-1-0-l1",
                                    "cis-oracle-linux-7-v2-0-0-l1",
                                    "cis-oracle-linux-8-l1",
                                    "cis-postgresql-11-centos-linux-7-level-1",
                                    "cis-rhel-7-l2",
                                    "cis-rhel-7-v2-2-0-l1",
                                    "cis-rhel-8-l1",
                                    "cis-suse-linux-12-v2-0-0-l1",
                                    "cis-ubuntu-linux-1604-v1-0-0-l1",
                                    "cis-ubuntu-linux-1804-l1"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "credativ"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Debian"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "7*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Suse"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "SLES*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "11*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Canonical"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "contains": "Ubuntu"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "12*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "linux-data-science-vm-ubuntu",
                                    "azureml",
                                    "ubuntu-hpc",
                                    "ubuntu-1804"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-centos-os"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-altus-centos-os"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "linux*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Linux*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "exists": "false"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "notIn": [
                                        "OpenLogic",
                                        "RedHat",
                                        "credativ",
                                        "Suse",
                                        "Canonical",
                                        "microsoft-dsvm",
                                        "cloudera",
                                        "microsoft-ads",
                                        "center-for-internet-security-inc",
                                        "Oracle",
                                        "AzureDatabricks"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "linux*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "not_installed_application_linux",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027[ChefInSpec]NotInstalledApplicationLinuxResource1;AttributesYmlContent\u0027, \u0027=\u0027, parameters(\u0027ApplicationName\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0447bc18-e2f7-4c0d-aa20-bff034275be1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0447bc18-e2f7-4c0d-aa20-bff034275be1"
          },
          {
            "properties": {
              "displayName": "Storage account keys should not be expired",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Ensure the user storage account keys are not expired when key expiration policy is set, for improving security of account keys by taking action when the keys are expired.",
              "metadata": {
                "version": "3.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Audit allows a non-compliant resource to be created, but flags it as non-compliant. Deny blocks the resource creation and update. Disable turns off the policy."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "value": "[utcNow()]",
                          "greater": "[if(and(not(empty(coalesce(field(\u0027Microsoft.Storage/storageAccounts/keyCreationTime.key1\u0027), \u0027\u0027))), not(empty(string(coalesce(field(\u0027Microsoft.Storage/storageAccounts/keyPolicy.keyExpirationPeriodInDays\u0027), \u0027\u0027))))), addDays(field(\u0027Microsoft.Storage/storageAccounts/keyCreationTime.key1\u0027), field(\u0027Microsoft.Storage/storageAccounts/keyPolicy.keyExpirationPeriodInDays\u0027)), utcNow())]"
                        },
                        {
                          "value": "[utcNow()]",
                          "greater": "[if(and(not(empty(coalesce(field(\u0027Microsoft.Storage/storageAccounts/keyCreationTime.key2\u0027), \u0027\u0027))), not(empty(string(coalesce(field(\u0027Microsoft.Storage/storageAccounts/keyPolicy.keyExpirationPeriodInDays\u0027), \u0027\u0027))))), addDays(field(\u0027Microsoft.Storage/storageAccounts/keyCreationTime.key2\u0027), field(\u0027Microsoft.Storage/storageAccounts/keyPolicy.keyExpirationPeriodInDays\u0027)), utcNow())]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/044985bb-afe1-42cd-8a36-9d5d42424537",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "044985bb-afe1-42cd-8a36-9d5d42424537"
          },
          {
            "properties": {
              "displayName": "Azure Cosmos DB allowed locations",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy enables you to restrict the locations your organization can specify when deploying Azure Cosmos DB resources. Use to enforce your geo-compliance requirements.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cosmos DB"
              },
              "parameters": {
                "listOfAllowedLocations": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Allowed locations",
                    "description": "The list of locations that can be specified when deploying Azure Cosmos DB resources.",
                    "strongType": "location"
                  }
                },
                "policyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Policy Effect",
                    "description": "The desired effect of the policy."
                  },
                  "allowedValues": [
                    "deny",
                    "audit",
                    "disabled"
                  ],
                  "defaultValue": "deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DocumentDB/databaseAccounts"
                    },
                    {
                      "count": {
                        "field": "Microsoft.DocumentDB/databaseAccounts/Locations[*]",
                        "where": {
                          "value": "[replace(toLower(first(field(\u0027Microsoft.DocumentDB/databaseAccounts/Locations[*].locationName\u0027))), \u0027 \u0027, \u0027\u0027)]",
                          "in": "[parameters(\u0027listOfAllowedLocations\u0027)]"
                        }
                      },
                      "notEquals": "[length(field(\u0027Microsoft.DocumentDB/databaseAccounts/Locations[*]\u0027))]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027policyEffect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0473574d-2d43-4217-aefe-941fcdf7e684",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0473574d-2d43-4217-aefe-941fcdf7e684"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: SQL managed instances should use customer-managed keys to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy is deprecated. Please use /providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2 instead",
              "metadata": {
                "version": "1.0.2-deprecated",
                "category": "SQL",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/managedInstances"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/managedInstances/encryptionProtector",
                    "name": "current",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/encryptionProtector/serverKeyType",
                          "equals": "AzureKeyVault"
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/encryptionProtector/uri",
                          "notEquals": ""
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/encryptionProtector/uri",
                          "exists": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/048248b0-55cd-46da-b1ff-39efd52db260",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "048248b0-55cd-46da-b1ff-39efd52db260"
          },
          {
            "properties": {
              "displayName": "[Preview]: Network traffic data collection agent should be installed on Linux virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Security Center uses the Microsoft Dependency agent to collect network traffic data from your Azure virtual machines to enable advanced network protection features such as traffic visualization on the network map, network hardening recommendations and specific network threats.",
              "metadata": {
                "version": "1.0.1-preview",
                "category": "Monitoring",
                "preview": "true"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable Dependency Agent for Linux VMs monitoring"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "UbuntuServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "14.04.0-LTS",
                                    "14.04.1-LTS",
                                    "14.04.5-LTS"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "16.04-LTS",
                                    "16.04.0-LTS"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "18.04-LTS"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "12-SP2",
                                    "12-SP3",
                                    "12-SP4"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "DependencyAgentLinux"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/04c4380f-3fae-46e8-96c9-30193528f602",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "04c4380f-3fae-46e8-96c9-30193528f602"
          },
          {
            "properties": {
              "displayName": "Shared dashboards should not have markdown tiles with inline content",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disallow creating a shared dashboard that has inline content in markdown tiles and enforce that the content should be stored as a markdown file that\u0027s hosted online. If you use inline content in the markdown tile, you cannot manage encryption of the content. By configuring your own storage, you can encrypt, double encrypt and even bring your own keys. Enabling this policy restricts users to use 2020-09-01-preview or above version of shared dashboards REST API.",
              "metadata": {
                "version": "1.0.0",
                "category": "Portal"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Portal/dashboards"
                    },
                    {
                      "anyof": [
                        {
                          "not": {
                            "value": "[requestContext().apiVersion]",
                            "greaterOrEquals": "2020-09-01-alpha"
                          }
                        },
                        {
                          "count": {
                            "field": "Microsoft.Portal/dashboards/lenses[*].parts[*]",
                            "where": {
                              "allOf": [
                                {
                                  "field": "Microsoft.Portal/dashboards/lenses[*].parts[*].metadata.type",
                                  "equals": "Extension/HubsExtension/PartType/MarkdownPart"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Portal/dashboards/lenses[*].parts[*].metadata.Extension-HubsExtension-PartType-MarkdownPart.settings.content.settings.markdownUri",
                                      "exists": "false"
                                    },
                                    {
                                      "field": "Microsoft.Portal/dashboards/lenses[*].parts[*].metadata.Extension-HubsExtension-PartType-MarkdownPart.settings.content.settings.markdownSource",
                                      "exists": "false"
                                    },
                                    {
                                      "field": "Microsoft.Portal/dashboards/lenses[*].parts[*].metadata.Extension-HubsExtension-PartType-MarkdownPart.settings.content.settings.markdownSource",
                                      "equals": "1"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          "greater": 0
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/04c655fe-0ac7-48ae-9a32-3a2e208c7624",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "04c655fe-0ac7-48ae-9a32-3a2e208c7624"
          },
          {
            "properties": {
              "displayName": "Deploy Diagnostic Settings for Service Bus to Log Analytics workspace",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Service Bus to stream to a regional Log Analytics workspace when any Service Bus which is missing this diagnostic settings is created or updated.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy_logAnalytics"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "False"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.ServiceBus/namespaces"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters(\u0027profileName\u0027)]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters(\u0027metricsEnabled\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            },
                            "metricsEnabled": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            },
                            "profileName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.ServiceBus/namespaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, parameters(\u0027profileName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters(\u0027logAnalytics\u0027)]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters(\u0027metricsEnabled\u0027)]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "OperationalLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "VNetAndIPFilteringLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters(\u0027metricsEnabled\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          },
                          "profileName": {
                            "value": "[parameters(\u0027profileName\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "04d53d87-841c-4f23-8a5b-21564380b55e"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1572 - Acquisition Process",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1572"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/04f5fb00-80bb-48a9-a75b-4cb4d4c97c36",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "04f5fb00-80bb-48a9-a75b-4cb4d4c97c36"
          },
          {
            "properties": {
              "displayName": "Azure API for FHIR should use a customer-managed key to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use a customer-managed key to control the encryption at rest of the data stored in Azure API for FHIR when this is a regulatory or compliance requirement. Customer-managed keys also deliver double encryption by adding a second layer of encryption on top of the default one done with service-managed keys.",
              "metadata": {
                "version": "1.0.1",
                "category": "API for FHIR"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "audit",
                    "disabled"
                  ],
                  "defaultValue": "audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HealthcareApis/services"
                    },
                    {
                      "field": "Microsoft.HealthcareApis/services/cosmosDbConfiguration.keyVaultKeyUri",
                      "exists": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "051cba44-2429-45b9-9649-46cec11c7119"
          },
          {
            "properties": {
              "displayName": "Deploy Log Analytics extension for Linux VMs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Log Analytics extension for Linux VMs if the VM Image (OS) is in the list defined and the extension is not installed.",
              "metadata": {
                "version": "2.0.1",
                "category": "Monitoring"
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "listOfImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of VM images that have supported Linux OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "anyOf": [
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "in": [
                                        "SLES",
                                        "SLES-HPC",
                                        "SLES-HPC-Priority",
                                        "SLES-SAP",
                                        "SLES-SAP-BYOS",
                                        "SLES-Priority",
                                        "SLES-BYOS",
                                        "SLES-SAPCAL",
                                        "SLES-Standard"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "like": "12*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "like": "15*"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "like": "sles-12-sp*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "like": "sles-15-sp*"
                                        }
                                      ]
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "in": [
                                        "gen1",
                                        "gen2"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "UbuntuServer",
                                "0001-com-ubuntu-server-focal"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "16_04*lts-gen2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "18.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "18_04*lts-gen2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "20_04*lts"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "20_04*lts-gen2"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Debian"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "9*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7.*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "OmsAgentForLinux"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.EnterpriseCloud.Monitoring"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "OMSAgentForLinux",
                            "vmExtensionPublisher": "Microsoft.EnterpriseCloud.Monitoring",
                            "vmExtensionType": "OmsAgentForLinux",
                            "vmExtensionTypeHandlerVersion": "1.13"
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2018-06-01",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "workspaceId": "[reference(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).customerId]",
                                  "stopOnMultipleConnections": "true"
                                },
                                "protectedSettings": {
                                  "workspaceKey": "[listKeys(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).primarySharedKey]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled extension for VM\u0027, \u0027: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/053d3325-282c-4e5c-b944-24faffd30d77",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "053d3325-282c-4e5c-b944-24faffd30d77"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1331 - Authenticator Management | Password-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1331"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/05460fe2-301f-4ed1-8174-d62c8bb92ff4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "05460fe2-301f-4ed1-8174-d62c8bb92ff4"
          },
          {
            "properties": {
              "displayName": "Azure Web Application Firewall should be enabled for Azure Front Door entry-points",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
              "metadata": {
                "version": "1.0.2",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/frontdoors"
                    },
                    {
                      "field": "Microsoft.Network/frontdoors/frontendEndpoints[*].webApplicationFirewallPolicyLink.id",
                      "exists": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "055aa869-bc98-4af8-bafc-23f1ab6ffe2c"
          },
          {
            "properties": {
              "displayName": "Private endpoint should be enabled for PostgreSQL servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for PostgreSQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
              "metadata": {
                "version": "1.0.2",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0564d078-92f5-4f97-8398-b9f58a51f70b"
          },
          {
            "properties": {
              "displayName": "Vulnerability Assessment settings for SQL server should contain an email address to receive scan reports",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Ensure that an email address is provided for the \u0027Send scan reports to\u0027 field in the Vulnerability Assessment settings. This email address receives scan result summary after a periodic scan runs on SQL servers.",
              "metadata": {
                "version": "2.0.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
                    "name": "default",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/vulnerabilityAssessments/default.recurringScans.emails[*]",
                          "notEquals": ""
                        },
                        {
                          "count": {
                            "field": "Microsoft.Sql/servers/vulnerabilityAssessments/default.recurringScans.emails[*]"
                          },
                          "notEquals": 0
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/057d6cfe-9c4f-4a6d-bc60-14420ea1f1a9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "057d6cfe-9c4f-4a6d-bc60-14420ea1f1a9"
          },
          {
            "properties": {
              "displayName": "Resource logs in Azure Data Lake Store should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
              "metadata": {
                "version": "5.0.0",
                "category": "Data Lake"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "requiredRetentionDays": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Required retention (days)",
                    "description": "The required resource logs retention in days"
                  },
                  "defaultValue": "365"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DataLakeStore/accounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "existenceCondition": {
                      "count": {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                        "where": {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                      "equals": "0"
                                    },
                                    {
                                      "value": "[padLeft(current(\u0027Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days\u0027), 3, \u00270\u0027)]",
                                      "greaterOrEquals": "[padLeft(parameters(\u0027requiredRetentionDays\u0027), 3, \u00270\u0027)]"
                                    }
                                  ]
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                      "notEquals": "true"
                                    },
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                      "exists": false
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "057ef27e-665e-4328-8ea3-04b3122bd9fb"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1132 - Protection Of Audit Information | Audit Backup On Separate Physical Systems / Components",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1132"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/05938e10-cdbd-4a54-9b2b-1cbcfc141ad0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "05938e10-cdbd-4a54-9b2b-1cbcfc141ad0"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1223 - Information System Component Inventory",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1223"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/05a1bb01-ad5a-49c1-aad3-b0c893b2ec3a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "05a1bb01-ad5a-49c1-aad3-b0c893b2ec3a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1640 - Transmission Confidentiality And Integrity",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1640"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/05a289ce-6a20-4b75-a0f3-dc8601b6acd0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "05a289ce-6a20-4b75-a0f3-dc8601b6acd0"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1420 - Maintenance Personnel",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1420"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/05ae08cc-a282-413b-90c7-21a2c60b8404",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "05ae08cc-a282-413b-90c7-21a2c60b8404"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1658 - Secure Name / Address Resolution Service (Recursive Or Caching Resolver)",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1658"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/063b540e-4bdc-4e7a-a569-3a42ddf22098",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "063b540e-4bdc-4e7a-a569-3a42ddf22098"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1688 - Information System Monitoring",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1688"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/063c3f09-e0f0-4587-8fd5-f4276fae675f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "063c3f09-e0f0-4587-8fd5-f4276fae675f"
          },
          {
            "properties": {
              "displayName": "Configure Azure File Sync to use private DNS zones",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "To access the private endpoint(s) for Storage Sync Service resource interfaces from a registered server, you need to configure your DNS to resolve the correct names to your private endpoint\u0027s private IP addresses. This policy creates the requisite Azure Private DNS Zone and A records for the interfaces of your Storage Sync Service private endpoint(s).",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "privateDnsZoneId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "privateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "where": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "equals": "afs"
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f",
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027privateEndpointName\u0027), \u0027/deployedByPolicy\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "privatelink-afs",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId\u0027)]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId": {
                            "value": "[parameters(\u0027privateDnsZoneId\u0027)]"
                          },
                          "privateEndpointName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/06695360-db88-47f6-b976-7500d4297475",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "06695360-db88-47f6-b976-7500d4297475"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1332 - Authenticator Management | Password-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1332"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/068260be-a5e6-4b0a-a430-cd27071c226a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "068260be-a5e6-4b0a-a430-cd27071c226a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1455 - Physical Access Control",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1455"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/068a88d4-e520-434e-baf0-9005a8164e6a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "068a88d4-e520-434e-baf0-9005a8164e6a"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit SQL DB Level Audit Setting",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Audit DB level audit setting for SQL databases",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "SQL",
                "deprecated": true
              },
              "parameters": {
                "setting": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Setting"
                  },
                  "allowedValues": [
                    "enabled",
                    "disabled"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "field": "name",
                      "notEquals": "master"
                    }
                  ]
                },
                "then": {
                  "effect": "AuditIfNotExists",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/auditingSettings",
                    "name": "default",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/auditingSettings.state",
                          "equals": "[parameters(\u0027setting\u0027)]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a12",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "06a78e20-9358-41c9-923c-fb736d382a12"
          },
          {
            "properties": {
              "displayName": "Audit VMs that do not use managed disks",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy audits VMs that do not use managed disks",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/osDisk.uri",
                          "exists": "True"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/VirtualMachineScaleSets"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/VirtualMachineScaleSets/osDisk.vhdContainers",
                              "exists": "True"
                            },
                            {
                              "field": "Microsoft.Compute/VirtualMachineScaleSets/osdisk.imageUrl",
                              "exists": "True"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "06a78e20-9358-41c9-923c-fb736d382a4d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1366 - Incident Handling | Information Correlation",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1366"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/06c45c30-ae44-4f0f-82be-41331da911cc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "06c45c30-ae44-4f0f-82be-41331da911cc"
          },
          {
            "properties": {
              "displayName": "Cognitive Services accounts should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that Cognitive Services account isn\u0027t exposed on the public internet. Creating private endpoints can limit exposure of Cognitive Services account. Learn more at: https://go.microsoft.com/fwlink/?linkid=2129800. ",
              "metadata": {
                "version": "2.0.0",
                "category": "Cognitive Services"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/publicNetworkAccess",
                      "notEquals": "Disabled"
                    },
                    {
                      "count": {
                        "field": "Microsoft.CognitiveServices/accounts/capabilities[*]",
                        "where": {
                          "field": "Microsoft.CognitiveServices/accounts/capabilities[*].name",
                          "equals": "VirtualNetworks"
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0725b4dd-7e76-479c-a735-68e7ee23d5ca"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1633 - Boundary Protection | Route Traffic To Authenticated Proxy Servers",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1633"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/07557aa0-e02f-4460-9a81-8ecd2fed601a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "07557aa0-e02f-4460-9a81-8ecd2fed601a"
          },
          {
            "properties": {
              "displayName": "CORS should not allow every resource to access your Function Apps",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your Function app. Allow only required domains to interact with your Function app.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "functionapp*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                      "notEquals": "*"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0820b7b9-23aa-4725-a1ce-ae4558f718e5"
          },
          {
            "properties": {
              "displayName": "Deploy - Configure Log Analytics extension to be enabled on Windows virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Log Analytics extension for Windows virtual machines if the virtual machine image is in the list defined and the extension is not installed.",
              "metadata": {
                "version": "2.0.1",
                "category": "Monitoring"
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Log Analytics workspace is used to receive performance data. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "listOfImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Windows OS to add to scope",
                    "description": "Example values: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-V4"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "MicrosoftMonitoringAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.EnterpriseCloud.Monitoring"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "MicrosoftMonitoringAgent",
                            "vmExtensionPublisher": "Microsoft.EnterpriseCloud.Monitoring",
                            "vmExtensionType": "MicrosoftMonitoringAgent",
                            "vmExtensionTypeHandlerVersion": "1.0"
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2018-06-01",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "workspaceId": "[reference(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).customerId]",
                                  "stopOnMultipleConnections": "true"
                                },
                                "protectedSettings": {
                                  "workspaceKey": "[listKeys(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).primarySharedKey]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled extension for VM\u0027, \u0027: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0868462e-646c-4fe3-9ced-a733534b6a2c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0868462e-646c-4fe3-9ced-a733534b6a2c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1583 - Information System Documentation",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1583"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0882d488-8e80-4466-bc0f-0cd15b6cb66d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0882d488-8e80-4466-bc0f-0cd15b6cb66d"
          },
          {
            "properties": {
              "displayName": "Audit Windows machines on which the DSC configuration is not compliant",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the Windows PowerShell command Get-DSCConfigurationStatus returns that the DSC configuration for the machine is not compliant.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "WindowsDscConfiguration",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsDscConfiguration",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/08a2f2d2-94b2-4a7b-aa3b-bb3f523ee6fd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "08a2f2d2-94b2-4a7b-aa3b-bb3f523ee6fd"
          },
          {
            "properties": {
              "displayName": "Azure Edge Hardware Center devices should have double encryption support enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Ensure that devices ordered from Azure Edge Hardware Center have double encryption support enabled, to secure the data at rest on the device. This option adds a second layer of data encryption.",
              "metadata": {
                "version": "1.0.0",
                "category": "Azure Edge Hardware Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The desired effect of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EdgeOrder/orderItems"
                    },
                    {
                      "field": "Microsoft.EdgeOrder/orderItems/orderItemDetails.preferences.encryptionPreferences.doubleEncryptionStatus",
                      "notEquals": "Enabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/08a6b96f-576e-47a2-8511-119a212d344d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "08a6b96f-576e-47a2-8511-119a212d344d"
          },
          {
            "properties": {
              "displayName": "Configure Data Factories to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for your Data Factory so that it is not accessible over the public internet. This can reduce data leakage risks. Learn more at: https://docs.microsoft.com/azure/data-factory/data-factory-private-link.",
              "metadata": {
                "version": "1.0.0",
                "category": "Data Factory"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DataFactory/factories"
                    },
                    {
                      "field": "Microsoft.DataFactory/factories/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/673868aa-7521-48a0-acc6-0f60742d39f5"
                    ],
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272018-06-01\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.DataFactory/factories/publicNetworkAccess",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/08b1442b-7789-4130-8506-4f99a97226a7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "08b1442b-7789-4130-8506-4f99a97226a7"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit Web Applications that are not using latest supported PHP Framework",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use the latest supported PHP version for the latest security classes. Using older classes and types can make your application vulnerable.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "app"
                        },
                        {
                          "field": "kind",
                          "equals": "WebApp"
                        },
                        {
                          "field": "kind",
                          "equals": "app,linux"
                        },
                        {
                          "field": "kind",
                          "equals": "app,linux,container"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "UseLatestPHP",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/08b17839-76c6-4015-90e0-33d9d54d219c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "08b17839-76c6-4015-90e0-33d9d54d219c"
          },
          {
            "properties": {
              "displayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Search Services to stream to a regional Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy_logAnalytics"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "False"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Search/searchServices"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters(\u0027profileName\u0027)]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters(\u0027metricsEnabled\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            },
                            "metricsEnabled": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            },
                            "profileName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Search/searchServices/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, parameters(\u0027profileName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters(\u0027logAnalytics\u0027)]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters(\u0027metricsEnabled\u0027)]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "OperationLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters(\u0027metricsEnabled\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          },
                          "profileName": {
                            "value": "[parameters(\u0027profileName\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/08ba64b8-738f-4918-9686-730d2ed79c7d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "08ba64b8-738f-4918-9686-730d2ed79c7d"
          },
          {
            "properties": {
              "displayName": "Adaptive network hardening recommendations should be applied on internet facing virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Security Center analyzes the traffic patterns of Internet facing virtual machines and provides Network Security Group rule recommendations that reduce the potential attack surface",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "f9f0eed0-f143-47bf-b856-671ea2eeed62",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "08e6af2d-db70-460a-bfe9-d5bd474ba9d6"
          },
          {
            "properties": {
              "displayName": "There should be more than one owner assigned to your subscription",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "It is recommended to designate more than one subscription owner in order to have administrator access redundancy.",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "2c79b4af-f830-b61e-92b9-63dfa30f16e4",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "09024ccc-0c5f-475e-9457-b7c0d9ed487b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1159 - Security Authorization",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1159"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0925f098-7877-450b-8ba4-d1e55f2d8795",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0925f098-7877-450b-8ba4-d1e55f2d8795"
          },
          {
            "properties": {
              "displayName": "Virtual machines should encrypt temp disks, caches, and data flows between Compute and Storage resources",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "By default, a virtual machine\u0027s OS and data disks are encrypted-at-rest using platform-managed keys. Temp disks, data caches and data flowing between compute and storage aren\u0027t encrypted. Disregard this recommendation if: 1. using encryption-at-host, or 2. server-side encryption on Managed Disks meets your security requirements. Learn more in: Server-side encryption of Azure Disk Storage: https://aka.ms/disksse, Different disk encryption offerings: https://aka.ms/diskencryptioncomparison",
              "metadata": {
                "version": "2.0.3",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.Compute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "d57a4221-a804-52ca-3dea-768284f06bb7",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0961003e-5a0a-4549-abde-af6a37f2724d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1302 - Identification And Authentication (Org. Users) | Network Access To Non-Privileged Accounts",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1302"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/09828c65-e323-422b-9774-9d5c646124da",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "09828c65-e323-422b-9774-9d5c646124da"
          },
          {
            "properties": {
              "displayName": "Configure backup on virtual machines without a given tag to an existing recovery services vault in the same location",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enforce backup for all virtual machines by backing them up to an existing central recovery services vault in the same location and subscription as the virtual machine. Doing this is useful when there is a central team in your organization managing backups for all resources in a subscription. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMCentralBackupExcludeTag.",
              "metadata": {
                "version": "5.0.0",
                "category": "Backup"
              },
              "parameters": {
                "vaultLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Location (Specify the location of the VMs that you want to protect)",
                    "description": "Specify the location of the VMs that you want to protect. VMs should be backed up to a vault in the same location. For example - southeastasia.",
                    "strongType": "location"
                  }
                },
                "backupPolicyId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Backup Policy (of type Azure VM from a vault in the location chosen above)",
                    "description": "Specify the id of the Azure backup policy to configure backup of the virtual machines. The selected Azure backup policy should be of type Azure virtual machine. This policy needs to be in a vault that is present in the location chosen above. For example - /subscriptions/\u003CSubscriptionId\u003E/resourceGroups/\u003CresourceGroupName\u003E/providers/Microsoft.RecoveryServices/vaults/\u003CVaultName\u003E/backupPolicies/\u003CBackupPolicyName\u003E.",
                    "strongType": "Microsoft.RecoveryServices/vaults/backupPolicies"
                  }
                },
                "exclusionTagName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Exclusion Tag Name",
                    "description": "Name of the tag to use for excluding VMs from the scope of this policy. This should be used along with the Exclusion Tag Value parameter. Learn more at https://aka.ms/AppCentricVMBackupPolicy."
                  },
                  "defaultValue": ""
                },
                "exclusionTagValue": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Exclusion Tag Values",
                    "description": "Value of the tag to use for excluding VMs from the scope of this policy (in case of multiple values, use a comma-separated list). This should be used along with the Exclusion Tag Name parameter. Learn more at https://aka.ms/AppCentricVMBackupPolicy."
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "deployIfNotExists",
                    "auditIfNotExists",
                    "disabled"
                  ],
                  "defaultValue": "deployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters(\u0027vaultLocation\u0027)]"
                    },
                    {
                      "field": "id",
                      "notContains": "/resourceGroups/databricks-rg-"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "azureopenshift"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "AzureDatabricks"
                    },
                    {
                      "anyOf": [
                        {
                          "not": {
                            "field": "[concat(\u0027tags[\u0027, parameters(\u0027exclusionTagName\u0027), \u0027]\u0027)]",
                            "in": "[parameters(\u0027exclusionTagValue\u0027)]"
                          }
                        },
                        {
                          "value": "[empty(parameters(\u0027exclusionTagValue\u0027))]",
                          "equals": "true"
                        },
                        {
                          "value": "[empty(parameters(\u0027exclusionTagName\u0027))]",
                          "equals": "true"
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn",
                                "2019-datacenter-gensecond"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "12*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "contains": "ubuntu"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "18.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "*20_04-lts"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "20_04-lts*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7.*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                      "/providers/microsoft.authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
                    ],
                    "type": "Microsoft.RecoveryServices/backupprotecteditems",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "backupPolicyId": {
                              "type": "String"
                            },
                            "fabricName": {
                              "type": "String"
                            },
                            "protectionContainers": {
                              "type": "String"
                            },
                            "protectedItems": {
                              "type": "String"
                            },
                            "sourceResourceId": {
                              "type": "String"
                            }
                          },
                          "resources": [
                            {
                              "apiVersion": "2017-05-10",
                              "name": "[concat(\u0027DeployProtection-\u0027,uniqueString(parameters(\u0027protectedItems\u0027)))]",
                              "type": "Microsoft.Resources/deployments",
                              "resourceGroup": "[first(skip(split(parameters(\u0027backupPolicyId\u0027), \u0027/\u0027), 4))]",
                              "subscriptionId": "[first(skip(split(parameters(\u0027backupPolicyId\u0027), \u0027/\u0027), 2))]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "backupPolicyId": {
                                      "type": "String"
                                    },
                                    "fabricName": {
                                      "type": "String"
                                    },
                                    "protectionContainers": {
                                      "type": "String"
                                    },
                                    "protectedItems": {
                                      "type": "String"
                                    },
                                    "sourceResourceId": {
                                      "type": "String"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                      "name": "[concat(first(skip(split(parameters(\u0027backupPolicyId\u0027), \u0027/\u0027), 8)), \u0027/\u0027, parameters(\u0027fabricName\u0027), \u0027/\u0027,parameters(\u0027protectionContainers\u0027), \u0027/\u0027, parameters(\u0027protectedItems\u0027))]",
                                      "apiVersion": "2016-06-01",
                                      "properties": {
                                        "protectedItemType": "Microsoft.Compute/virtualMachines",
                                        "policyId": "[parameters(\u0027backupPolicyId\u0027)]",
                                        "sourceResourceId": "[parameters(\u0027sourceResourceId\u0027)]"
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "backupPolicyId": {
                                    "value": "[parameters(\u0027backupPolicyId\u0027)]"
                                  },
                                  "fabricName": {
                                    "value": "[parameters(\u0027fabricName\u0027)]"
                                  },
                                  "protectionContainers": {
                                    "value": "[parameters(\u0027protectionContainers\u0027)]"
                                  },
                                  "protectedItems": {
                                    "value": "[parameters(\u0027protectedItems\u0027)]"
                                  },
                                  "sourceResourceId": {
                                    "value": "[parameters(\u0027sourceResourceId\u0027)]"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "backupPolicyId": {
                            "value": "[parameters(\u0027backupPolicyId\u0027)]"
                          },
                          "fabricName": {
                            "value": "Azure"
                          },
                          "protectionContainers": {
                            "value": "[concat(\u0027iaasvmcontainer;iaasvmcontainerv2;\u0027, resourceGroup().name, \u0027;\u0027 ,field(\u0027name\u0027))]"
                          },
                          "protectedItems": {
                            "value": "[concat(\u0027vm;iaasvmcontainerv2;\u0027, resourceGroup().name, \u0027;\u0027 ,field(\u0027name\u0027))]"
                          },
                          "sourceResourceId": {
                            "value": "[concat(\u0027/subscriptions/\u0027, subscription().subscriptionId, \u0027/resourceGroups/\u0027, resourceGroup().name, \u0027/providers/Microsoft.Compute/virtualMachines/\u0027,field(\u0027name\u0027))]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/09ce66bc-1220-4153-8104-e3f51c936913",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "09ce66bc-1220-4153-8104-e3f51c936913"
          },
          {
            "properties": {
              "displayName": "Private endpoint should be enabled for MariaDB servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MariaDB. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
              "metadata": {
                "version": "1.0.2",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforMariaDB/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.DBforMariaDB/servers/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.DBforMariaDB/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a1302fb-a631-4106-9753-f3d494733990"
          },
          {
            "properties": {
              "displayName": "Azure Policy Add-on for Kubernetes service (AKS) should be installed and enabled on your clusters",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Policy Add-on for Kubernetes service (AKS) extends Gatekeeper v3, an admission controller webhook for Open Policy Agent (OPA), to apply at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.",
              "metadata": {
                "version": "1.0.2",
                "category": "Kubernetes"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurePolicy.enabled",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurePolicy.enabled",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a15ec92-a229-4763-bb14-0ea34a568f8d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1654 - Voice Over Internet Protocol",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1654"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a2ee16e-ab1f-414a-800b-d1608835862b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a2ee16e-ab1f-414a-800b-d1608835862b"
          },
          {
            "properties": {
              "displayName": "SQL server should use customer-managed keys to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.",
              "metadata": {
                "version": "2.0.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Sql/servers"
                        },
                        {
                          "value": "[resourcegroup().managedBy]",
                          "notContains": "/providers/Microsoft.Synapse/"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Sql/servers/keyid",
                              "exists": false
                            },
                            {
                              "field": "Microsoft.Sql/servers/keyid",
                              "equals": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Sql/servers/encryptionProtector"
                        },
                        {
                          "value": "[resourcegroup().managedBy]",
                          "notContains": "/providers/Microsoft.Synapse/"
                        },
                        {
                          "field": "Microsoft.Sql/servers/encryptionProtector/serverKeyType",
                          "notequals": "AzureKeyVault"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a370ff3-6cab-4e85-8995-295fd854c5b8"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1402 - Controlled Maintenance | Automated Maintenance Activities",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1402"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a560d32-8075-4fec-9615-9f7c853f4ea9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a560d32-8075-4fec-9615-9f7c853f4ea9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1428 - Media Access",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1428"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a77fcc7-b8d8-451a-ab52-56197913c0c7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a77fcc7-b8d8-451a-ab52-56197913c0c7"
          },
          {
            "properties": {
              "displayName": "Audit resource location matches resource group location",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit that the resource location matches its resource group location",
              "metadata": {
                "version": "2.0.0",
                "category": "General"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "location",
                      "notEquals": "[resourcegroup().location]"
                    },
                    {
                      "field": "location",
                      "notEquals": "global"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a914e76-4921-4c19-b460-a2d36003525a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a914e76-4921-4c19-b460-a2d36003525a"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027System Audit Policies - Account Management\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027System Audit Policies - Account Management\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesAccountManagement",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SystemAuditPoliciesAccountManagement"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a9991e6-21be-49f9-8916-a06d934bcf29",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a9991e6-21be-49f9-8916-a06d934bcf29"
          },
          {
            "properties": {
              "displayName": "Azure Defender for open-source relational databases should be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for open-source relational databases detects anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. Learn more about the capabilities of Azure Defender for open-source relational databases at https://aka.ms/AzDforOpenSourceDBsDocu. Important: Enabling this plan will result in charges for protecting your open-source relational databases. Learn about the pricing on Security Center\u0027s pricing page: https://aka.ms/pricing-security-center",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "OpenSourceRelationalDatabases",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0a9fbe0d-c5c4-4da8-87d8-f4fd77338835"
          },
          {
            "properties": {
              "displayName": "Azure Container Instance container group should use customer-managed key for encryption",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Secure your containers with greater flexibility using customer-managed keys. When you specify a customer-managed key, that key is used to protect and control access to the key that encrypts your data. Using customer-managed keys provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.",
              "metadata": {
                "version": "1.0.0",
                "category": "Container Instance"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerInstance/containerGroups"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.ContainerInstance/containerGroups/encryptionProperties.vaultBaseUrl",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.ContainerInstance/containerGroups/encryptionProperties.keyName",
                          "exists": false
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0aa61e00-0a01-4a3c-9945-e93cffedf0e6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0aa61e00-0a01-4a3c-9945-e93cffedf0e6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1044 - Unsuccessful Logon Attempts",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1044"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0abbac52-57cf-450d-8408-1208d0dd9e90",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0abbac52-57cf-450d-8408-1208d0dd9e90"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure Azure Arc enabled Kubernetes clusters to install the Azure Policy extension",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Azure Policy\u0027s extension for Azure Arc to provide at-scale enforcements and safeguard your Arc enabled Kubernetes clusters in a centralized, consistent manner. Learn more at https://aka.ms/akspolicydoc.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Kubernetes",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Kubernetes/connectedClusters"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.KubernetesConfiguration/extensions",
                    "existenceCondition": {
                      "field": "Microsoft.KubernetesConfiguration/extensions/extensionType",
                      "equals": "microsoft.policyinsights"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/85cb6faf-e071-4c9b-8136-154b5a04f717"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "clusterRegion": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "clusterResourceId": {
                            "value": "[field(\u0027id\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "clusterRegion": {
                              "type": "string"
                            },
                            "clusterResourceId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KubernetesConfiguration/extensions",
                              "apiVersion": "2021-09-01",
                              "name": "azurepolicy",
                              "location": "[parameters(\u0027clusterRegion\u0027)]",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "properties": {
                                "extensionType": "microsoft.policyinsights",
                                "configurationSettings": {},
                                "configurationProtectedSettings": {},
                                "autoUpgradeMinorVersion": true,
                                "releaseTrain": "Stable",
                                "scope": {
                                  "Cluster": {
                                    "releaseNamespace": "kube-system"
                                  }
                                }
                              },
                              "scope": "[concat(\u0027Microsoft.Kubernetes/connectedClusters/\u0027, split(parameters(\u0027clusterResourceId\u0027),\u0027/\u0027)[8])]"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0adc5395-9169-4b9b-8687-af838d69410a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0adc5395-9169-4b9b-8687-af838d69410a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1253 - Contingency Plan | Resume Essential Missions / Business Functions",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1253"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0afce0b3-dd9f-42bb-af28-1e4284ba8311",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0afce0b3-dd9f-42bb-af28-1e4284ba8311"
          },
          {
            "properties": {
              "displayName": "Configure Azure Web PubSub Service to use private DNS zones",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use private DNS zones to override the DNS resolution for a private endpoint. A private DNS zone links to your virtual network to resolve to Azure Web PubSub service. Learn more at: https://aka.ms/awps/privatelink.",
              "metadata": {
                "version": "1.0.0",
                "category": "Web PubSub"
              },
              "parameters": {
                "privateDnsZoneId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone Id",
                    "description": "Private DNS zone to integrate with private endpoint.",
                    "strongType": "Microsoft.Network/privateDnsZones"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "where": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "equals": "webpubsub"
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027privateEndpointName\u0027), \u0027/deployedByPolicy\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "privatelink-webpubsub-azure-com",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId\u0027)]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId": {
                            "value": "[parameters(\u0027privateDnsZoneId\u0027)]"
                          },
                          "privateEndpointName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b026355-49cb-467b-8ac4-f777874e175a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b026355-49cb-467b-8ac4-f777874e175a"
          },
          {
            "properties": {
              "displayName": "Email notification to subscription owner for high severity alerts should be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "To ensure your subscription owners are notified when there is a potential security breach in their subscription, set email notifications to subscription owners for high severity alerts in Security Center.",
              "metadata": {
                "version": "2.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/securityContacts",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "not": {
                        "allOf": [
                          {
                            "field": "Microsoft.Security/securityContacts/alertsToAdmins",
                            "equals": "Off"
                          },
                          {
                            "field": "Microsoft.Security/securityContacts/alertNotifications.minimalSeverity",
                            "equals": "High"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b15565f-aa9e-48ba-8619-45960f2c314d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b15565f-aa9e-48ba-8619-45960f2c314d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1046 - Automatic Account Lock | Purge / Wipe Mobile Device",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1046"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b1aa965-7502-41f9-92be-3e2fe7cc392a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b1aa965-7502-41f9-92be-3e2fe7cc392a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1020 - Account Management | Role-Based Schemes",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1020"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b291ee8-3140-4cad-beb7-568c077c78ce",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b291ee8-3140-4cad-beb7-568c077c78ce"
          },
          {
            "properties": {
              "displayName": "Key vaults should have purge protection enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Malicious deletion of a key vault can lead to permanent data loss. A malicious insider in your organization can potentially delete and purge key vaults. Purge protection protects you from insider attacks by enforcing a mandatory retention period for soft deleted key vaults. No one inside your organization or Microsoft will be able to purge your key vaults during the soft delete retention period.",
              "metadata": {
                "version": "2.0.0",
                "category": "Key Vault"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.KeyVault/vaults"
                    },
                    {
                      "not": {
                        "field": "Microsoft.KeyVault/vaults/createMode",
                        "equals": "recover"
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enablePurgeProtection",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "equals": "false"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enablePurgeProtection",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b60c0b2-2dc2-4e1c-b5c9-abbed971de53"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1115 - Audit Review, Analysis, And Reporting",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1115"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b653845-2ad9-4e09-a4f3-5a7c1d78353d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b653845-2ad9-4e09-a4f3-5a7c1d78353d"
          },
          {
            "properties": {
              "displayName": "Azure Cosmos DB throughput should be limited",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy enables you to restrict the maximum throughput your organization can specify when creating Azure Cosmos DB databases and containers through the resource provider. It blocks the creation of autoscale resources.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cosmos DB"
              },
              "parameters": {
                "throughputMax": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Max RUs",
                    "description": "The maximum throughput (RU/s) that can be assigned to a container via the Resource Provider during create or update."
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Policy Effect",
                    "description": "The desired effect of the policy."
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "field": "type",
                          "like": "Microsoft.DocumentDB/databaseAccounts/*/throughputSettings"
                        },
                        {
                          "field": "type",
                          "in": [
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
                            "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
                            "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases",
                            "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs",
                            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces",
                            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables",
                            "Microsoft.DocumentDB/databaseAccounts/tables"
                          ]
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "less": "2019-08-01"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/sqlDatabases/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/sqlDatabases/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        },
                        {
                          "value": "[if(equals(field(\u0027Microsoft.DocumentDB/databaseAccounts/tables/options.throughput\u0027), \u0027\u0027), 0, int(field(\u0027Microsoft.DocumentDB/databaseAccounts/tables/options.throughput\u0027)))]",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/tables/options",
                          "containsKey": "ProvisionedThroughputSettings"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings/default.resource.throughput",
                          "greater": "[parameters(\u0027throughputMax\u0027)]"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings/default.resource.provisionedThroughputSettings",
                          "exists": "true"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0b7ef78e-a035-4f23-b9bd-aff122a1b1cf",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0b7ef78e-a035-4f23-b9bd-aff122a1b1cf"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1239 - User-Installed Software",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1239"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0be51298-f643-4556-88af-d7db90794879",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0be51298-f643-4556-88af-d7db90794879"
          },
          {
            "properties": {
              "displayName": "Ensure API app has \u0027Client Certificates (Incoming client certificates)\u0027 set to \u0027On\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients that have a valid certificate will be able to reach the app.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "*api"
                    },
                    {
                      "field": "Microsoft.Web/sites/clientCertEnabled",
                      "equals": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0c192fe8-9cbb-4516-85b3-0ade8bd03886",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0c192fe8-9cbb-4516-85b3-0ade8bd03886"
          },
          {
            "properties": {
              "displayName": "Private endpoint connections on Automation Accounts should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoint connections allow secure communication by enabling private connectivity to Automation accounts without a need for public IP addresses at the source or destination. Learn more about private endpoints in Azure Automation at https://docs.microsoft.com/azure/automation/how-to/private-link-security",
              "metadata": {
                "version": "1.0.0",
                "category": "Automation"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Automation/automationAccounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Automation/automationAccounts/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Automation/automationAccounts/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0c2b3618-68a8-4034-a150-ff4abc873462",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0c2b3618-68a8-4034-a150-ff4abc873462"
          },
          {
            "properties": {
              "displayName": "Application Insights components with Private Link enabled should use Bring Your Own Storage accounts for profiler and debugger.",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "To support private link and customer-managed key policies, create your own storage account for profiler and debugger. Learn more in https://docs.microsoft.com/azure/azure-monitor/app/profiler-bring-your-own-storage",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Deny",
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Insights/components"
                    },
                    {
                      "field": "Microsoft.Insights/components/ForceCustomerStorageForProfiler",
                      "notEquals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0c4bd2e8-8872-4f37-a654-03f6f38ddc76",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0c4bd2e8-8872-4f37-a654-03f6f38ddc76"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1496 - System Security Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1496"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0ca96127-2f87-46ab-a4fc-0d2a786df1c8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0ca96127-2f87-46ab-a4fc-0d2a786df1c8"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: SQL servers should use customer-managed keys to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy is deprecated. Please use /providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8 instead.",
              "metadata": {
                "version": "2.0.1-deprecated",
                "category": "SQL",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "field": "kind",
                      "notContains": "analytics"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/servers/encryptionProtector",
                    "name": "current",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/encryptionProtector/serverKeyType",
                          "equals": "AzureKeyVault"
                        },
                        {
                          "field": "Microsoft.Sql/servers/encryptionProtector/uri",
                          "notEquals": ""
                        },
                        {
                          "field": "Microsoft.Sql/servers/encryptionProtector/uri",
                          "exists": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0d134df8-db83-46fb-ad72-fe0c9428c8dd"
          },
          {
            "properties": {
              "displayName": "Private endpoint should be enabled for IoT Hub",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoint connections enforce secure communication by enabling private connectivity to IoT Hub. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
              "metadata": {
                "version": "1.0.0",
                "category": "Internet of Things"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Devices/IotHubs"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*]",
                        "where": {
                          "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                          "equals": "Approved"
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0d40b058-9f95-4a19-93e3-9b0330baa2a3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0d40b058-9f95-4a19-93e3-9b0330baa2a3"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1518 - Personnel Termination",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Personnel Security control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1518"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0d58f734-c052-40e9-8b2f-a1c2bff0b815",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0d58f734-c052-40e9-8b2f-a1c2bff0b815"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1713 - Software, Firmware, And Information Integrity | Integrity Checks",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1713"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0d87c70b-5012-48e9-994b-e70dd4b8def0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0d87c70b-5012-48e9-994b-e70dd4b8def0"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1466 - Visitor Access Records",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1466"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0d943a9c-a6f1-401f-a792-740cdb09c451",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0d943a9c-a6f1-401f-a792-740cdb09c451"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs on which Windows Defender Exploit Guard is not enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines on which Windows Defender Exploit Guard is not enabled. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsDefenderExploitGuard",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0d9b45ff-9ddd-43fc-bf59-fbd1c8423053",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0d9b45ff-9ddd-43fc-bf59-fbd1c8423053"
          },
          {
            "properties": {
              "displayName": "Managed identity should be used in your Function App",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use a managed identity for enhanced authentication security",
              "metadata": {
                "version": "2.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "functionapp*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/sites/config/managedServiceIdentityId",
                          "exists": "true"
                        },
                        {
                          "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId",
                          "exists": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0da106f2-4ca3-48e8-bc85-c638fe6aea8f"
          },
          {
            "properties": {
              "displayName": "Deploy a flow log resource with target network security group",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configures flow log for specific network security group. It will allow to log information about IP traffic flowing through an network security group. Flow log helps to identify unknown or undesired traffic, verify network isolation and compliance with enterprise access rules, analyze network flows from compromised IPs and network interfaces.",
              "metadata": {
                "version": "1.0.1",
                "category": "Network"
              },
              "parameters": {
                "nsgRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "NSG Region",
                    "description": "This Policy will review NSGs only in the selected region. You can create other assignments to include other regions.",
                    "strongType": "location"
                  }
                },
                "storageId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Storage id",
                    "description": "A string with the storage id for the flowlogs to be sent to. It will be used for deployment purposes only. Make sure this storage account is located in the same region as the NSG. The format must be: \u0027/subscriptions/{subscription id}/resourceGroups/{resourceGroup name}/providers/Microsoft.Storage/storageAccounts/{storage account name}",
                    "assignPermissions": true
                  }
                },
                "networkWatcherRG": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network Watchers RG",
                    "description": "The name of the resource group where the flowLog resources will be created. This will be used only if a deployment is required. This is the resource group where the Network Watchers are located.",
                    "strongType": "existingResourceGroups"
                  }
                },
                "networkWatcherName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network Watcher name",
                    "description": "The name of the network watcher under which the flowLog resources will be created. Make sure it belongs to the same region as the NSG."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters(\u0027nsgRegion\u0027)]"
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Network/networkWatchers/flowlogs",
                    "resourceGroupName": "[if(empty(coalesce(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs\u0027))), parameters(\u0027networkWatcherRG\u0027), split(first(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027)), \u0027/\u0027)[4])]",
                    "name": "[if(empty(coalesce(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027))), \u0027null/null\u0027, concat(split(first(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027)), \u0027/\u0027)[8], \u0027/\u0027, split(first(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027)), \u0027/\u0027)[10]))]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/storageId",
                          "equals": "[parameters(\u0027storageId\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "storageId": {
                              "type": "String"
                            },
                            "networkWatcherRG": {
                              "type": "String"
                            },
                            "networkWatcherName": {
                              "type": "String"
                            },
                            "flowlogName": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "targetResource": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[concat(\u0027flowlogDeployment-\u0027, uniqueString(parameters(\u0027flowlogName\u0027)))]",
                              "apiVersion": "2019-10-01",
                              "resourceGroup": "[parameters(\u0027networkWatcherRG\u0027)]",
                              "properties": {
                                "mode": "incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/networkWatchers/flowLogs",
                                      "name": "[concat(parameters(\u0027networkWatcherName\u0027), \u0027/\u0027, parameters(\u0027flowlogName\u0027))]",
                                      "apiVersion": "2019-11-01",
                                      "location": "[parameters(\u0027location\u0027)]",
                                      "properties": {
                                        "targetResourceId": "[parameters(\u0027targetResource\u0027)]",
                                        "storageId": "[parameters(\u0027storageId\u0027)]",
                                        "enabled": "true",
                                        "retentionPolicy": {
                                          "days": "0",
                                          "enabled": "false"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "storageId": {
                            "value": "[parameters(\u0027storageId\u0027)]"
                          },
                          "networkWatcherRG": {
                            "value": "[if(empty(coalesce(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs\u0027))), parameters(\u0027networkWatcherRG\u0027), split(first(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027)), \u0027/\u0027)[4])]"
                          },
                          "networkWatcherName": {
                            "value": "[if(empty(coalesce(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs\u0027))), parameters(\u0027networkWatcherName\u0027), split(first(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027)), \u0027/\u0027)[8])]"
                          },
                          "flowlogName": {
                            "value": "[if(empty(coalesce(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs\u0027))), concat(field(\u0027name\u0027), \u0027-\u0027, resourceGroup().name, \u0027-\u0027, \u0027flowlog\u0027), split(first(field(\u0027Microsoft.Network/networkSecurityGroups/flowLogs[*].id\u0027)), \u0027/\u0027)[10])]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "targetResource": {
                            "value": "[concat(resourceGroup().id, \u0027/providers/Microsoft.Network/networkSecurityGroups/\u0027, field(\u0027name\u0027))]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0db34a60-64f4-4bf6-bd44-f95c16cf34b9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0db34a60-64f4-4bf6-bd44-f95c16cf34b9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1718 - Software, Firmware, And Information Integrity | Binary Or Machine Executable Code",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1718"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0dced7ab-9ce5-4137-93aa-14c13e06ab17",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0dced7ab-9ce5-4137-93aa-14c13e06ab17"
          },
          {
            "properties": {
              "displayName": "Modify - Configure Azure File Sync to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "The Azure File Sync\u0027s internet-accessible public endpoint are disabled by your organizational policy. You may still access the Storage Sync Service via its private endpoint(s).",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.StorageSync/storageSyncServices"
                    },
                    {
                      "field": "Microsoft.StorageSync/storageSyncServices/incomingTrafficPolicy",
                      "notEquals": "AllowVirtualNetworksOnly"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "conflictEffect": "Audit",
                    "operations": [
                      {
                        "condition": "[greater(requestContext().apiVersion, \u00272019-10-01\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.StorageSync/storageSyncServices/incomingTrafficPolicy",
                        "value": "AllowVirtualNetworksOnly"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0e07b2e9-6cd9-4c40-9ccb-52817b95133b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0e07b2e9-6cd9-4c40-9ccb-52817b95133b"
          },
          {
            "properties": {
              "displayName": "Authorized IP ranges should be defined on Kubernetes Services",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Restrict access to the Kubernetes Service Management API by granting API access only to IP addresses in specific ranges. It is recommended to limit access to authorized IP ranges to ensure that only applications from allowed networks can access the cluster.",
              "metadata": {
                "version": "2.0.1",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.authorizedIPRanges",
                      "exists": "false"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0e246bcf-5f6f-4f87-bc6f-775d4712c7ea"
          },
          {
            "properties": {
              "displayName": "Remote debugging should be turned off for Function Apps",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Remote debugging requires inbound ports to be opened on function apps. Remote debugging should be turned off.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "functionapp*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/web.remoteDebuggingEnabled",
                      "equals": "false"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0e60b895-3786-45da-8377-9c6b4b6ac5f9"
          },
          {
            "properties": {
              "displayName": "Azure Defender for Key Vault should be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for Key Vault provides an additional layer of protection and security intelligence by detecting unusual and potentially harmful attempts to access or exploit key vault accounts.",
              "metadata": {
                "version": "1.0.3",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "KeyVaults",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0e6763cc-5078-4e64-889d-ff4d9a839047",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0e6763cc-5078-4e64-889d-ff4d9a839047"
          },
          {
            "properties": {
              "displayName": "Geo-redundant backup should be enabled for Azure Database for MariaDB",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Database for MariaDB allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
              "metadata": {
                "version": "1.0.1",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforMariaDB/servers"
                    },
                    {
                      "field": "Microsoft.DBforMariaDB/servers/storageProfile.geoRedundantBackup",
                      "notEquals": "Enabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0ec47710-77ff-4a3d-9181-6aa50af424d0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0ec47710-77ff-4a3d-9181-6aa50af424d0"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to enable Guest Configuration Policy on Windows VMs.",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a system-assigned managed identity and deploys the VM extension for Guest Configuration on Windows VMs. This is a prerequisite for Guest Configuration Policy and must be assigned to the scope before using any Guest Configuration policy. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol.",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "dsvm-windows"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "AzurePolicyforWindows",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.GuestConfiguration"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "ConfigurationforWindows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0ecd903d-91e7-4726-83d3-a229d7f2e293",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0ecd903d-91e7-4726-83d3-a229d7f2e293"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1601 - Developer Security Testing And Evaluation",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1601"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0ee79a0c-addf-4ce9-9b3c-d9576ed5e20e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0ee79a0c-addf-4ce9-9b3c-d9576ed5e20e"
          },
          {
            "properties": {
              "displayName": "Configure Batch accounts with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to Batch accounts, you can reduce data leakage risks. Learn more about private links at: https://docs.microsoft.com/azure/batch/private-connectivity.",
              "metadata": {
                "version": "1.0.0",
                "category": "Batch"
              },
              "parameters": {
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private endpoint subnet id",
                    "description": "A subnet with private endpoint network policies disabled",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Batch/batchAccounts"
                    },
                    {
                      "field": "Microsoft.Batch/batchAccounts/publicNetworkAccess",
                      "equals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Batch/batchAccounts/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Batch/batchAccounts/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "serviceId": {
                              "type": "string"
                            },
                            "privateEndpointSubnetId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "privateEndpointName": "[concat(\u0027pe-\u0027,substring(parameters(\u0027name\u0027),0,min(length(parameters(\u0027name\u0027)),50)),\u0027-\u0027,uniquestring(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027privateEndpointName\u0027)]",
                              "apiVersion": "2020-06-01",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "serviceId": {
                                      "type": "string"
                                    },
                                    "privateEndpointSubnetId": {
                                      "type": "string"
                                    },
                                    "subnetLocation": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "privateEndpointName": "[deployment().name]"
                                  },
                                  "resources": [
                                    {
                                      "name": "[variables(\u0027privateEndpointName\u0027)]",
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2020-07-01",
                                      "location": "[parameters(\u0027subnetLocation\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "subnet": {
                                          "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                        },
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[variables(\u0027privateEndpointName\u0027)]",
                                            "properties": {
                                              "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                              "groupIds": [
                                                "batchAccount"
                                              ],
                                              "requestMessage": "autoapprove"
                                            }
                                          }
                                        ],
                                        "manualPrivateLinkServiceConnections": []
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "serviceId": {
                                    "value": "[parameters(\u0027serviceId\u0027)]"
                                  },
                                  "privateEndpointSubnetId": {
                                    "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                  },
                                  "subnetLocation": {
                                    "value": "[reference(first(take(split(parameters(\u0027privateEndpointSubnetId\u0027),\u0027/subnets\u0027),1)),\u00272020-07-01\u0027,\u0027Full\u0027).location]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0ef5aac7-c064-427a-b87b-d47b3ddcaf73",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0ef5aac7-c064-427a-b87b-d47b3ddcaf73"
          },
          {
            "properties": {
              "displayName": "[Preview]: Audit Azure Spring Cloud instances where distributed tracing is not enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Distributed tracing tools in Azure Spring Cloud allow debugging and monitoring the complex interconnections between microservices in an application. Distributed tracing tools should be enabled and in a healthy state.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "App Platform",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.AppPlatform/Spring"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.AppPlatform/Spring/trace.enabled",
                          "notEquals": "true"
                        },
                        {
                          "field": "Microsoft.AppPlatform/Spring/trace.state",
                          "notEquals": "Succeeded"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0f2d8593-4667-4932-acca-6a9f187af109",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0f2d8593-4667-4932-acca-6a9f187af109"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1476 - Fire Protection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1476"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0f3c4ac2-3e35-4906-a80b-473b12a622d7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0f3c4ac2-3e35-4906-a80b-473b12a622d7"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1204 - Access Restrictions For Change | Review System Changes",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1204"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0f4f6750-d1ab-4a4c-8dfd-af3237682665",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0f4f6750-d1ab-4a4c-8dfd-af3237682665"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1430 - Media Marking",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1430"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0f559588-5e53-4b14-a7c4-85d28ebc2234",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0f559588-5e53-4b14-a7c4-85d28ebc2234"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1574 - Acquisition Process",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1574"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0f935dab-83d6-47b8-85ef-68b8584161b9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0f935dab-83d6-47b8-85ef-68b8584161b9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1164 - Continuous Monitoring",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1164"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fb8d3ce-9e96-481c-9c68-88d4e3019310",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fb8d3ce-9e96-481c-9c68-88d4e3019310"
          },
          {
            "properties": {
              "displayName": "Vulnerabilities in running images should be remediated",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Container image vulnerability assessment scans container images running on your Kubernetes clusters for security vulnerabilities and exposes detailed findings for each image. Resolving the vulnerabilities can greatly improve your containers\u0027 security posture and protect them from attacks",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.ContainerService/managedClusters"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "41503391-efa5-47ee-9282-4eff6131462c",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fc39691-5a3f-4e3e-94ee-2e6447309ad9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1017 - Account Management | Inactivity Logout",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1017"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fc3db37-e59a-48c1-84e9-1780cedb409e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fc3db37-e59a-48c1-84e9-1780cedb409e"
          },
          {
            "properties": {
              "displayName": "Azure Monitor Private Link Scope should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual networks to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Monitor Private Links Scope, you can reduce data leakage risks. Learn more about private links at: https://docs.microsoft.com/azure/azure-monitor/logs/private-link-security.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Insights/privateLinkScopes"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/privateLinkScopes/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Insights/privateLinkScopes/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fc55270-f8bf-4feb-b7b8-5e7e7eacc6a6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fc55270-f8bf-4feb-b7b8-5e7e7eacc6a6"
          },
          {
            "properties": {
              "displayName": "Azure Cognitive Search services should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Cognitive Search, data leakage risks are reduced. Learn more about private links at: https://aka.ms/azure-cognitive-search/inbound-private-endpoints.",
              "metadata": {
                "version": "1.0.0",
                "category": "Search"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Search/searchServices"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Search/searchServices/privateEndpointConnections[*]",
                        "where": {
                          "field": "Microsoft.Search/searchServices/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                          "equals": "Approved"
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fda3595-9f2b-4592-8675-4231d6fa82fe",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fda3595-9f2b-4592-8675-4231d6fa82fe"
          },
          {
            "properties": {
              "displayName": "Public network access should be disabled for Container registries",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that container registries are not exposed on the public internet. Creating private endpoints can limit exposure of container registry resources. Learn more at: https://aka.ms/acr/portal/public-network and https://aka.ms/acr/private-link.",
              "metadata": {
                "version": "1.0.0",
                "category": "Container Registry"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerRegistry/registries"
                    },
                    {
                      "field": "Microsoft.ContainerRegistry/registries/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fdf0491-d080-4575-b627-ad0e843cba0f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fdf0491-d080-4575-b627-ad0e843cba0f"
          },
          {
            "properties": {
              "displayName": "CORS should not allow every domain to access your API for FHIR",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your API for FHIR. To protect your API for FHIR, remove access for all domains and explicitly define the domains allowed to connect.",
              "metadata": {
                "version": "1.0.0",
                "category": "API for FHIR"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "audit",
                    "disabled"
                  ],
                  "defaultValue": "audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HealthcareApis/services"
                    },
                    {
                      "not": {
                        "field": "Microsoft.HealthcareApis/services/corsConfiguration.origins[*]",
                        "notEquals": "*"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0fea8f8a-4169-495d-8307-30ec335f387d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0fea8f8a-4169-495d-8307-30ec335f387d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1087 - Security Awareness And Training Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Awareness and Training control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1087"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/100c82ba-42e9-4d44-a2ba-94b209248583",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "100c82ba-42e9-4d44-a2ba-94b209248583"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs that do not contain the specified certificates in Trusted Root",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows VMs that do not contain the specified certificates in the Trusted Root Certification Authorities certificate store (Cert:\\LocalMachine\\Root). It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "CertificateThumbprints": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Certificate thumbprints",
                    "description": "A semicolon-separated list of certificate thumbprints that should exist under the Trusted Root certificate store (Cert:\\LocalMachine\\Root). e.g. THUMBPRINT1;THUMBPRINT2;THUMBPRINT3"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsCertificateInTrustedRoot",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027[CertificateStore]CertificateStore1;CertificateThumbprintsToInclude\u0027, \u0027=\u0027, parameters(\u0027CertificateThumbprints\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "WindowsCertificateInTrustedRoot"
                          },
                          "CertificateThumbprints": {
                            "value": "[parameters(\u0027CertificateThumbprints\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "CertificateThumbprints": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[CertificateStore]CertificateStore1;CertificateThumbprintsToInclude",
                                      "value": "[parameters(\u0027CertificateThumbprints\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[CertificateStore]CertificateStore1;CertificateThumbprintsToInclude",
                                      "value": "[parameters(\u0027CertificateThumbprints\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/106ccbe4-a791-4f33-a44a-06796944b8d5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "106ccbe4-a791-4f33-a44a-06796944b8d5"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1554 - Vulnerability Scanning | Discoverable Information",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1554"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/10984b4e-c93e-48d7-bf20-9c03b04e9eca",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "10984b4e-c93e-48d7-bf20-9c03b04e9eca"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Ensure that \u0027.NET Framework\u0027 version is the latest, if used as a part of the Function App",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy is not required since Azure App Service automatically updates and maintains the .NET Framework versions installed on the platform.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "App Service",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "functionapp*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/web.netFrameworkVersion",
                      "in": [
                        "v3.0",
                        "v4.0"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/10c1859c-e1a7-4df3-ab97-a487fa8059f6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "10c1859c-e1a7-4df3-ab97-a487fa8059f6"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure ChangeTracking Extension for Linux Arc machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure Linux Arc machines to automatically install the ChangeTracking Extension to enable File Integrity Monitoring(FIM) in Azure Security Center. FIM examines operating system files, Windows registries, application software, Linux system files, and more, for changes that might indicate an attack. The extension can be installed in virtual machines and locations supported by Azure Monitor Agent.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Security Center",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "listOfApplicableLocations": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Applicable Locations",
                    "description": "The list of locations where the policy should be applied.",
                    "strongType": "location"
                  },
                  "allowedValues": [
                    "australiasoutheast",
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus2euap",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "japaneast",
                    "koreacentral",
                    "northcentralus",
                    "northeurope",
                    "norwayeast",
                    "southcentralus",
                    "southeastasia",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westcentralus",
                    "westeurope",
                    "westus",
                    "westus2"
                  ],
                  "defaultValue": [
                    "australiasoutheast",
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus2euap",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "japaneast",
                    "koreacentral",
                    "northcentralus",
                    "northeurope",
                    "norwayeast",
                    "southcentralus",
                    "southeastasia",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westcentralus",
                    "westeurope",
                    "westus",
                    "westus2"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "location",
                      "in": "[parameters(\u0027listOfApplicableLocations\u0027)]"
                    },
                    {
                      "field": "Microsoft.HybridCompute/imageOffer",
                      "like": "linux*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.HybridCompute/machines/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/type",
                          "equals": "ChangeTracking-Linux"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/Publisher",
                          "equals": "Microsoft.Azure.ChangeTrackingAndInventory"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "ChangeTracking-Linux",
                            "vmExtensionPublisher": "Microsoft.Azure.ChangeTrackingAndInventory",
                            "vmExtensionType": "ChangeTracking-Linux",
                            "vmExtensionTypeHandlerVersion": "1.0"
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "type": "Microsoft.HybridCompute/machines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2021-06-10-preview",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/10caed8a-652c-4d1d-84e4-2805b7c07278",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "10caed8a-652c-4d1d-84e4-2805b7c07278"
          },
          {
            "properties": {
              "displayName": "Custom subscription owner roles should not exist",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy ensures that no custom subscription owner roles exist.",
              "metadata": {
                "version": "2.0.0",
                "category": "General"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Authorization/roleDefinitions"
                    },
                    {
                      "field": "Microsoft.Authorization/roleDefinitions/type",
                      "equals": "CustomRole"
                    },
                    {
                      "anyOf": [
                        {
                          "not": {
                            "field": "Microsoft.Authorization/roleDefinitions/permissions[*].actions[*]",
                            "notEquals": "*"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Authorization/roleDefinitions/permissions.actions[*]",
                            "notEquals": "*"
                          }
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "not": {
                            "field": "Microsoft.Authorization/roleDefinitions/assignableScopes[*]",
                            "notIn": [
                              "[concat(subscription().id,\u0027/\u0027)]",
                              "[subscription().id]",
                              "/"
                            ]
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Authorization/roleDefinitions/assignableScopes[*]",
                            "notLike": "/providers/Microsoft.Management/*"
                          }
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/10ee2ea2-fb4d-45b8-a7e9-a2e770044cd9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "10ee2ea2-fb4d-45b8-a7e9-a2e770044cd9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1230 - Configuration Management Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1230"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/11158848-f679-4e9b-aa7b-9fb07d945071",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "11158848-f679-4e9b-aa7b-9fb07d945071"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1432 - Media Storage",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1432"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1140e542-b80d-4048-af45-3f7245be274b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1140e542-b80d-4048-af45-3f7245be274b"
          },
          {
            "properties": {
              "displayName": "Modify - Configure Azure IoT Hubs to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling the public network access property improves security by ensuring your Azure IoT Hub can only be accessed from a private endpoint. This policy disables public network access on IoT Hub resources.",
              "metadata": {
                "version": "1.0.0",
                "category": "Internet of Things"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Devices/IotHubs"
                    },
                    {
                      "field": "Microsoft.Devices/IotHubs/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272020-03-01\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.Devices/IotHubs/publicNetworkAccess",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/114eec6e-5e59-4bad-999d-6eceeb39d582",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "114eec6e-5e59-4bad-999d-6eceeb39d582"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Cognitive Services accounts should use customer owned storage or enable data encryption.",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy is deprecated. Cognitive Services have data encryption enforced.",
              "metadata": {
                "version": "2.0.0-deprecated",
                "category": "Cognitive Services",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "count": {
                        "field": "Microsoft.CognitiveServices/accounts/userOwnedStorage[*]"
                      },
                      "less": 1
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/encryption.keySource",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/encryption",
                      "exists": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/11566b39-f7f7-4b82-ab06-68d8700eb0a4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "11566b39-f7f7-4b82-ab06-68d8700eb0a4"
          },
          {
            "properties": {
              "displayName": "Dependency agent should be enabled for listed virtual machine images",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Reports virtual machines as non-compliant if the virtual machine image is not in the list defined and the agent is not installed. The list of OS images is updated over time as support is updated.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "listOfImageIdToInclude_windows": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Windows OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "listOfImageIdToInclude_linux": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Linux OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "not": {
                        "anyOf": [
                          {
                            "field": "Microsoft.Compute/imageId",
                            "in": "[parameters(\u0027listOfImageIdToInclude_windows\u0027)]"
                          },
                          {
                            "field": "Microsoft.Compute/imageId",
                            "in": "[parameters(\u0027listOfImageIdToInclude_linux\u0027)]"
                          },
                          {
                            "anyOf": [
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "WindowsServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "2008-R2-SP1",
                                      "2008-R2-SP1-smalldisk",
                                      "2012-Datacenter",
                                      "2012-Datacenter-smalldisk",
                                      "2012-R2-Datacenter",
                                      "2012-R2-Datacenter-smalldisk",
                                      "2016-Datacenter",
                                      "2016-Datacenter-Server-Core",
                                      "2016-Datacenter-Server-Core-smalldisk",
                                      "2016-Datacenter-smalldisk",
                                      "2016-Datacenter-with-Containers",
                                      "2016-Datacenter-with-RDSH",
                                      "2019-Datacenter",
                                      "2019-Datacenter-Core",
                                      "2019-Datacenter-Core-smalldisk",
                                      "2019-Datacenter-Core-with-Containers",
                                      "2019-Datacenter-Core-with-Containers-smalldisk",
                                      "2019-Datacenter-smalldisk",
                                      "2019-Datacenter-with-Containers",
                                      "2019-Datacenter-with-Containers-smalldisk",
                                      "2019-Datacenter-zhcn"
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "WindowsServerSemiAnnual"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "Datacenter-Core-1709-smalldisk",
                                      "Datacenter-Core-1709-with-Containers-smalldisk",
                                      "Datacenter-Core-1803-with-Containers-smalldisk"
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsServerHPCPack"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "WindowsServerHPCPack"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftSQLServer"
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2016"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2016-BYOL"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2012R2"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2012R2-BYOL"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftRServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "MLServer-WS2016"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftVisualStudio"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "in": [
                                      "VisualStudio",
                                      "Windows"
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftDynamicsAX"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "Dynamics"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "equals": "Pre-Req-AX7-Onebox-U8"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftDynamicsAX"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "Dynamics"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "equals": "Pre-Req-AX7-Onebox-V4"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "microsoft-ads"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "windows-data-science-vm"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsDesktop"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "Windows-10"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "RedHat"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "RHEL",
                                  "RHEL-SAP-HANA"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "SUSE"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "SLES",
                                  "SLES-HPC",
                                  "SLES-HPC-Priority",
                                  "SLES-SAP",
                                  "SLES-SAP-BYOS",
                                  "SLES-Priority",
                                  "SLES-BYOS",
                                  "SLES-SAPCAL",
                                  "SLES-Standard"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "12-SP2",
                                      "12-SP3",
                                      "12-SP4"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Canonical"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "UbuntuServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "14.04.0-LTS",
                                      "14.04.1-LTS",
                                      "14.04.5-LTS"
                                    ]
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "16.04-LTS",
                                      "16.04.0-LTS"
                                    ]
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "18.04-LTS"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "OpenLogic"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "Centos",
                                  "Centos-LVM",
                                  "CentOS-SRIOV"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "cloudera"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "cloudera-centos-os"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "like": "7*"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/11ac78e3-31bc-4f0c-8434-37ab963cea07",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "11ac78e3-31bc-4f0c-8434-37ab963cea07"
          },
          {
            "properties": {
              "displayName": "[Preview]: Recovery Services vaults should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Recovery Services vaults, data leakage risks are reduced. Learn more about private links for Azure Site Recovery at: https://aka.ms/HybridScenarios-PrivateLink and https://aka.ms/AzureToAzure-PrivateLink.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Site Recovery",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.RecoveryServices/vaults"
                    },
                    {
                      "count": {
                        "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                              "equals": "Approved"
                            },
                            {
                              "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*].provisioningState",
                              "equals": "Succeeded"
                            },
                            {
                              "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*].id",
                              "contains": "SiteRecovery"
                            }
                          ]
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/11e3da8c-1d68-4392-badd-0ff3c43ab5b0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "11e3da8c-1d68-4392-badd-0ff3c43ab5b0"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Security Options - System settings\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Security Options - System settings\u0027 for certificate rules on executables for SRP and optional subsystems. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SecurityOptionsSystemsettings",
                  "version": "1.*",
                  "configurationParameter": {
                    "SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies": "System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies": {
                  "type": "String",
                  "metadata": {
                    "displayName": "System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies",
                    "description": "Specifies whether digital certificates are processed when software restriction policies are enabled and a user or process attempts to run software with an .exe file name extension. It enables or disables certificate rules (a type of software restriction policies rule). For certificate rules to take effect in software restriction policies, you must enable this policy setting."
                  },
                  "defaultValue": "1"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsSystemsettings",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/12017595-5a75-4bb1-9d97-4c2c939ea3c3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "12017595-5a75-4bb1-9d97-4c2c939ea3c3"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1655 - Voice Over Internet Protocol",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1655"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/121eab72-390e-4629-a7e2-6d6184f57c6b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "121eab72-390e-4629-a7e2-6d6184f57c6b"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Security Options - Network Security\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Security Options - Network Security\u0027 for including Local System behavior, PKU2U, LAN Manager, LDAP client, and NTLM SSP. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SecurityOptionsNetworkSecurity",
                  "version": "1.*",
                  "configurationParameter": {
                    "NetworkSecurityConfigureEncryptionTypesAllowedForKerberos": "Network Security: Configure encryption types allowed for Kerberos;ExpectedValue",
                    "NetworkSecurityLANManagerAuthenticationLevel": "Network security: LAN Manager authentication level;ExpectedValue",
                    "NetworkSecurityLDAPClientSigningRequirements": "Network security: LDAP client signing requirements;ExpectedValue",
                    "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients": "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients;ExpectedValue",
                    "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers": "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "NetworkSecurityConfigureEncryptionTypesAllowedForKerberos": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network Security: Configure encryption types allowed for Kerberos",
                    "description": "Specifies the encryption types that Kerberos is allowed to use."
                  },
                  "defaultValue": "2147483644"
                },
                "NetworkSecurityLANManagerAuthenticationLevel": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: LAN Manager authentication level",
                    "description": "Specify which challenge-response authentication protocol is used for network logons. This choice affects the level of authentication protocol used by clients, the level of session security negotiated, and the level of authentication accepted by servers."
                  },
                  "defaultValue": "5"
                },
                "NetworkSecurityLDAPClientSigningRequirements": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: LDAP client signing requirements",
                    "description": "Specify the level of data signing that is requested on behalf of clients that issue LDAP BIND requests."
                  },
                  "defaultValue": "1"
                },
                "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients",
                    "description": "Specifies which behaviors are allowed by clients for applications using the NTLM Security Support Provider (SSP). The SSP Interface (SSPI) is used by applications that need authentication services. See https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-minimum-session-security-for-ntlm-ssp-based-including-secure-rpc-servers for more information."
                  },
                  "defaultValue": "537395200"
                },
                "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers",
                    "description": "Specifies which behaviors are allowed by servers for applications using the NTLM Security Support Provider (SSP). The SSP Interface (SSPI) is used by applications that need authentication services."
                  },
                  "defaultValue": "537395200"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsNetworkSecurity",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Network Security: Configure encryption types allowed for Kerberos;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityConfigureEncryptionTypesAllowedForKerberos\u0027), \u0027,\u0027, \u0027Network security: LAN Manager authentication level;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityLANManagerAuthenticationLevel\u0027), \u0027,\u0027, \u0027Network security: LDAP client signing requirements;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityLDAPClientSigningRequirements\u0027), \u0027,\u0027, \u0027Network security: Minimum session security for NTLM SSP based (including secure RPC) clients;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients\u0027), \u0027,\u0027, \u0027Network security: Minimum session security for NTLM SSP based (including secure RPC) servers;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1221c620-d201-468c-81e7-2817e6107e84",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1221c620-d201-468c-81e7-2817e6107e84"
          },
          {
            "properties": {
              "displayName": "Allowlist rules in your adaptive application control policy should be updated",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Monitor for changes in behavior on groups of machines configured for auditing by Azure Security Center\u0027s adaptive application controls. Security Center uses machine learning to analyze the running processes on your machines and suggest a list of known-safe applications. These are presented as recommended apps to allow in adaptive application control policies.",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "1234abcd-1b53-4fd4-9835-2c2fa3935313",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "123a3936-f020-408a-ba0c-47873faf1534"
          },
          {
            "properties": {
              "displayName": "Web Application Firewall (WAF) should use the specified mode for Application Gateway",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Mandates the use of \u0027Detection\u0027 or \u0027Prevention\u0027 mode to be active on all Web Application Firewall policies for Application Gateway.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "modeRequirement": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Mode Requirement",
                    "description": "Mode required for all WAF policies"
                  },
                  "allowedValues": [
                    "Prevention",
                    "Detection"
                  ],
                  "defaultValue": "Detection"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies"
                    },
                    {
                      "field": "Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies/policySettings.mode",
                      "notEquals": "[parameters(\u0027modeRequirement\u0027)]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/12430be1-6cc8-4527-a9a8-e3d38f250096",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "12430be1-6cc8-4527-a9a8-e3d38f250096"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1681 - Malicious Code Protection | Automatic Updates",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1681"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/12623e7e-4736-4b2e-b776-c1600f35f93a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "12623e7e-4736-4b2e-b776-c1600f35f93a"
          },
          {
            "properties": {
              "displayName": "[Preview]: Azure Data Factory linked services should use Key Vault for storing secrets",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "To ensure secrets (such as connection strings) are managed securely, require users to provide secrets using an Azure Key Vault instead of specifying them inline in linked services.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Data Factory",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DataFactory/factories/linkedservices"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString",
                              "exists": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString",
                                  "contains": "AccountKey="
                                },
                                {
                                  "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString",
                                  "contains": "PWD="
                                },
                                {
                                  "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString",
                                  "contains": "Password="
                                },
                                {
                                  "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString",
                                  "contains": "CredString="
                                },
                                {
                                  "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString",
                                  "contains": "pwd="
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password.type",
                          "equals": "SecureString"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password.type",
                              "exists": "false"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/AzureSqlDW.typeProperties.servicePrincipalKey.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/AzureSearch.typeProperties.key.type",
                          "equals": "SecureString"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri.type",
                              "notEquals": "AzureKeyVaultSecret"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.servicePrincipalKey",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.servicePrincipalKey.type",
                              "notEquals": "AzureKeyVaultSecret"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.accountKey",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/CosmosDb.typeProperties.accountKey.type",
                              "notEquals": "AzureKeyVaultSecret"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.encryptedCredential",
                          "exists": "true"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/AmazonMWS.typeProperties.mwsAuthToken.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/AmazonMWS.typeProperties.secretKey.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/AmazonS3.typeProperties.secretAccessKey.type",
                          "equals": "SecureString"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/Dynamics.typeProperties.servicePrincipalCredential",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/Dynamics.typeProperties.servicePrincipalCredential.type",
                              "equals": "SecureString"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken.type",
                              "equals": "SecureString"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/Odbc.typeProperties.credential.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/GoogleAdWords.typeProperties.developerToken.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/GoogleBigQuery.typeProperties.clientSecret.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/GoogleBigQuery.typeProperties.refreshToken.type",
                          "equals": "SecureString"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/type",
                              "in": [
                                "MongoDbAtlas",
                                "MongoDbV2"
                              ]
                            },
                            {
                              "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString.type",
                              "notEquals": "AzureKeyVaultSecret"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/OData.typeProperties.servicePrincipalEmbeddedCert.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/OData.typeProperties.servicePrincipalEmbeddedCertPassword.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/Sftp.typeProperties.privateKeyContent.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/Sftp.typeProperties.passPhrase.type",
                          "equals": "SecureString"
                        },
                        {
                          "field": "Microsoft.DataFactory/factories/linkedservices/Salesforce.typeProperties.securityToken.type",
                          "equals": "SecureString"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/127ef6d7-242f-43b3-9eef-947faf1725d0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "127ef6d7-242f-43b3-9eef-947faf1725d0"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure ChangeTracking Extension for Linux virtual machine scale sets",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure Linux virtual machine scale sets to automatically install the ChangeTracking Extension to enable File Integrity Monitoring(FIM) in Azure Security Center. FIM examines operating system files, Windows registries, application software, Linux system files, and more, for changes that might indicate an attack. The extension can be installed in virtual machines and locations supported by Azure Monitor Agent.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Security Center",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "listOfApplicableLocations": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Applicable Locations",
                    "description": "The list of locations where the policy should be applied.",
                    "strongType": "location"
                  },
                  "allowedValues": [
                    "australiasoutheast",
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus2euap",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "japaneast",
                    "koreacentral",
                    "northcentralus",
                    "northeurope",
                    "norwayeast",
                    "southcentralus",
                    "southeastasia",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westcentralus",
                    "westeurope",
                    "westus",
                    "westus2"
                  ],
                  "defaultValue": [
                    "australiasoutheast",
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus2euap",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "japaneast",
                    "koreacentral",
                    "northcentralus",
                    "northeurope",
                    "norwayeast",
                    "southcentralus",
                    "southeastasia",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westcentralus",
                    "westeurope",
                    "westus",
                    "westus2"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "location",
                      "in": "[parameters(\u0027listOfApplicableLocations\u0027)]"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "15*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "UbuntuServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "18.04*LTS"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "0001-com-ubuntu-server-focal"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "20_04-lts*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "8"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "9"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian-10"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "ChangeTracking-Linux"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.Azure.ChangeTrackingAndInventory"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "ChangeTracking-Linux",
                            "vmExtensionPublisher": "Microsoft.Azure.ChangeTrackingAndInventory",
                            "vmExtensionType": "ChangeTracking-Linux",
                            "vmExtensionTypeHandlerVersion": "1.0"
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2019-03-01",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1288c8d7-4b05-4e3a-bc88-9053caefc021",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1288c8d7-4b05-4e3a-bc88-9053caefc021"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1240 - User-Installed Software",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1240"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/129eb39f-d79a-4503-84cd-92f036b5e429",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "129eb39f-d79a-4503-84cd-92f036b5e429"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027Security Options - System objects\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - System objects\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsSystemobjects",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SecurityOptionsSystemobjects"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/12ae2d24-3805-4b37-9fa9-465968bfbcfa",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "12ae2d24-3805-4b37-9fa9-465968bfbcfa"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1666 - System And Information Integrity Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1666"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/12e30ee3-61e6-4509-8302-a871e8ebb91e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "12e30ee3-61e6-4509-8302-a871e8ebb91e"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs that do not have the specified applications installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines that do not have the specified applications installed. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "installedApplication": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Application names (supports wildcards)",
                    "description": "A semicolon-separated list of the names of the applications that should be installed. e.g. \u0027Microsoft SQL Server 2014 (64-bit); Microsoft Visual Studio Code\u0027 or \u0027Microsoft SQL Server 2014*\u0027 (to match any application starting with \u0027Microsoft SQL Server 2014\u0027)"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WhitelistedApplication",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027[InstalledApplication]bwhitelistedapp;Name\u0027, \u0027=\u0027, parameters(\u0027installedApplication\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "WhitelistedApplication"
                          },
                          "installedApplication": {
                            "value": "[parameters(\u0027installedApplication\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "installedApplication": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[InstalledApplication]bwhitelistedapp;Name",
                                      "value": "[parameters(\u0027installedApplication\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[InstalledApplication]bwhitelistedapp;Name",
                                      "value": "[parameters(\u0027installedApplication\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/12f7e5d0-42a7-4630-80d8-54fb7cff9bd6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "12f7e5d0-42a7-4630-80d8-54fb7cff9bd6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1347 - Identification And Authentication (Non-Org. Users) | Acceptance Of PIV Creds. From Other Agys.",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1347"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/131a2706-61e9-4916-a164-00e052056462",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "131a2706-61e9-4916-a164-00e052056462"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Configure Azure Defender for Kubernetes to be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for Kubernetes provides real-time threat protection for containerized environments and generates alerts for suspicious activities.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "KubernetesService",
                    "deploymentScope": "subscription",
                    "existenceScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ],
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    },
                    "deployment": {
                      "location": "westeurope",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {},
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {},
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Security/pricings",
                              "apiVersion": "2018-06-01",
                              "name": "KubernetesService",
                              "properties": {
                                "pricingTier": "Standard"
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/133047bf-1369-41e3-a3be-74a11ed1395a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "133047bf-1369-41e3-a3be-74a11ed1395a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1450 - Physical Access Authorizations",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1450"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/134d7a13-ba3e-41e2-b236-91bfcfa24e01",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "134d7a13-ba3e-41e2-b236-91bfcfa24e01"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1184 - Configuration Change Control",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1184"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/13579d0e-0ab0-4b26-b0fb-d586f6d7ed20",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "13579d0e-0ab0-4b26-b0fb-d586f6d7ed20"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure machines to receive a vulnerability assessment provider",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Defender includes vulnerability scanning for your machines at no extra cost. You don\u0027t need a Qualys license or even a Qualys account - everything\u0027s handled seamlessly inside Security Center. When you enable this policy, Azure Defender automatically deploys the Qualys vulnerability assessment provider to all supported machines that don\u0027t already have it installed.",
              "metadata": {
                "category": "Security Center",
                "preview": true,
                "version": "2.2.0-preview"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "vaType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Vulnerability assessment provider type",
                    "description": "Select the vulnerability assessment solution to provision to machines."
                  },
                  "allowedValues": [
                    "default",
                    "mdeTvm"
                  ],
                  "defaultValue": "default"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "ffff0522-1e88-47fc-8382-2a80ba848f5d",
                    "evaluationDelay": "AfterProvisioningSuccess",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "contentVersion": "1.0.0.0",
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "parameters": {
                            "vmName": {
                              "type": "String"
                            },
                            "resourceType": {
                              "type": "string"
                            },
                            "vaType": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "resourceNameAndVaType": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.Security/\u0027, parameters(\u0027vaType\u0027))]"
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027resourceType\u0027)), toLower(\u0027microsoft.compute/virtualmachines\u0027))]",
                              "type": "Microsoft.Compute/virtualMachines/providers/serverVulnerabilityAssessments",
                              "name": "[variables(\u0027resourceNameAndVaType\u0027)]",
                              "apiVersion": "2020-01-01"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027resourceType\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "type": "Microsoft.HybridCompute/machines/providers/serverVulnerabilityAssessments",
                              "name": "[variables(\u0027resourceNameAndVaType\u0027)]",
                              "apiVersion": "2020-01-01"
                            }
                          ]
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "resourceType": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "vaType": {
                            "value": "[parameters(\u0027vaType\u0027)]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/13ce0167-8ca6-4048-8e6b-f996402e3c1b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "13ce0167-8ca6-4048-8e6b-f996402e3c1b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1085 - Publicly Accessible Content",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1085"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/13d117e0-38b0-4bbb-aaab-563be5dd10ba",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "13d117e0-38b0-4bbb-aaab-563be5dd10ba"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1404 - Maintenance Tools",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1404"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/13d8f903-0cd6-449f-a172-50f6579c182b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "13d8f903-0cd6-449f-a172-50f6579c182b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1695 - Information System Monitoring | Wireless Intrusion Detection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1695"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/13fcf812-ec82-4eda-9b89-498de9efd620",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "13fcf812-ec82-4eda-9b89-498de9efd620"
          },
          {
            "properties": {
              "displayName": "Audit Windows machines that contain certificates expiring within the specified number of days",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if certificates in the specified store have an expiration date out of range for the number of days given as parameter. The policy also provides the option to only check for specific certificates or exclude specific certificates, and whether to report on expired certificates.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "CertificateExpiration",
                  "version": "1.*",
                  "configurationParameter": {
                    "CertificateStorePath": "[CertificateStore]CertificateStore1;CertificateStorePath",
                    "ExpirationLimitInDays": "[CertificateStore]CertificateStore1;ExpirationLimitInDays",
                    "CertificateThumbprintsToInclude": "[CertificateStore]CertificateStore1;CertificateThumbprintsToInclude",
                    "CertificateThumbprintsToExclude": "[CertificateStore]CertificateStore1;CertificateThumbprintsToExclude",
                    "IncludeExpiredCertificates": "[CertificateStore]CertificateStore1;IncludeExpiredCertificates"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "CertificateStorePath": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Certificate store path",
                    "description": "The path to the certificate store containing the certificates to check the expiration dates of. Default value is \u0027Cert:\u0027 which is the root certificate store path, so all certificates on the machine will be checked. Other example paths: \u0027Cert:\\LocalMachine\u0027, \u0027Cert:\\LocalMachine\\TrustedPublisher\u0027, \u0027Cert:\\CurrentUser\u0027"
                  },
                  "defaultValue": "Cert:"
                },
                "ExpirationLimitInDays": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Expiration limit in days",
                    "description": "An integer indicating the number of days within which to check for certificates that are expiring. For example, if this value is 30, any certificate expiring within the next 30 days will cause this policy to be non-compliant."
                  },
                  "defaultValue": "30"
                },
                "CertificateThumbprintsToInclude": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Certificate thumbprints to include",
                    "description": "A semicolon-separated list of certificate thumbprints to check under the specified path. If a value is not specified, all certificates under the certificate store path will be checked. If a value is specified, no certificates other than those with the thumbprints specified will be checked. e.g. THUMBPRINT1;THUMBPRINT2;THUMBPRINT3"
                  },
                  "defaultValue": ""
                },
                "CertificateThumbprintsToExclude": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Certificate thumbprints to exclude",
                    "description": "A semicolon-separated list of certificate thumbprints to ignore. e.g. THUMBPRINT1;THUMBPRINT2;THUMBPRINT3"
                  },
                  "defaultValue": ""
                },
                "IncludeExpiredCertificates": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include expired certificates",
                    "description": "Must be \u0027true\u0027 or \u0027false\u0027. True indicates that any found certificates that have already expired will also make this policy non-compliant. False indicates that certificates that have expired will be be ignored."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "CertificateExpiration",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027[CertificateStore]CertificateStore1;CertificateStorePath\u0027, \u0027=\u0027, parameters(\u0027CertificateStorePath\u0027), \u0027,\u0027, \u0027[CertificateStore]CertificateStore1;ExpirationLimitInDays\u0027, \u0027=\u0027, parameters(\u0027ExpirationLimitInDays\u0027), \u0027,\u0027, \u0027[CertificateStore]CertificateStore1;CertificateThumbprintsToInclude\u0027, \u0027=\u0027, parameters(\u0027CertificateThumbprintsToInclude\u0027), \u0027,\u0027, \u0027[CertificateStore]CertificateStore1;CertificateThumbprintsToExclude\u0027, \u0027=\u0027, parameters(\u0027CertificateThumbprintsToExclude\u0027), \u0027,\u0027, \u0027[CertificateStore]CertificateStore1;IncludeExpiredCertificates\u0027, \u0027=\u0027, parameters(\u0027IncludeExpiredCertificates\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1417908b-4bff-46ee-a2a6-4acc899320ab",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1417908b-4bff-46ee-a2a6-4acc899320ab"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs if the Administrators group contains any of the specified members",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines in which the Administrators group contains any of the specified members. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "MembersToExclude": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Members to exclude",
                    "description": "A semicolon-separated list of members that should be excluded in the Administrators local group. Ex: Administrator; myUser1; myUser2"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AdministratorsGroupMembersToExclude",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027[LocalGroup]AdministratorsGroup;MembersToExclude\u0027, \u0027=\u0027, parameters(\u0027MembersToExclude\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AdministratorsGroupMembersToExclude"
                          },
                          "MembersToExclude": {
                            "value": "[parameters(\u0027MembersToExclude\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "MembersToExclude": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[LocalGroup]AdministratorsGroup;MembersToExclude",
                                      "value": "[parameters(\u0027MembersToExclude\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[LocalGroup]AdministratorsGroup;MembersToExclude",
                                      "value": "[parameters(\u0027MembersToExclude\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/144f1397-32f9-4598-8c88-118decc3ccba",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "144f1397-32f9-4598-8c88-118decc3ccba"
          },
          {
            "properties": {
              "displayName": "Configure Cognitive Services accounts to disable local authentication methods",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable local authentication methods so that your Cognitive Services accounts require Azure Active Directory identities exclusively for authentication. Learn more at: https://aka.ms/cs/auth.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cognitive Services"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/disableLocalAuth",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272021-04-30\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.CognitiveServices/accounts/disableLocalAuth",
                        "value": true
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/14de9e63-1b31-492e-a5a3-c3f7fd57f555",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "14de9e63-1b31-492e-a5a3-c3f7fd57f555"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure supported Windows machines to automatically install the Azure Security agent",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure supported Windows machines to automatically install the Azure Security agent. Security Center collects events from the agent and uses them to provide security alerts and tailored hardening tasks (recommendations). Target virtual machines must be in a supported location.",
              "metadata": {
                "category": "Security Center",
                "version": "4.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "AzureSecurityWindowsAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/Publisher",
                          "equals": "Microsoft.Azure.Security.Monitoring"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "in": [
                            "Succeeded",
                            "Provisioning succeeded"
                          ]
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, \u0027AzureSecurityWindowsAgent\u0027)]",
                              "apiVersion": "2019-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.Azure.Security.Monitoring",
                                "type": "AzureSecurityWindowsAgent",
                                "typeHandlerVersion": "1.0",
                                "autoUpgradeMinorVersion": "true",
                                "settings": {},
                                "protectedsettings": {}
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1537496a-b1e8-482b-a06a-1cc2415cdc7b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1537496a-b1e8-482b-a06a-1cc2415cdc7b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1157 - Plan Of Action And Milestones",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1157"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/15495367-cf68-464c-bbc3-f53ca5227b7a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "15495367-cf68-464c-bbc3-f53ca5227b7a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1491 - Security Planning Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1491"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1571dd40-dafc-4ef4-8f55-16eba27efc7b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1571dd40-dafc-4ef4-8f55-16eba27efc7b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1564 - System Development Life Cycle",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1564"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/157f0ef9-143f-496d-b8f9-f8c8eeaad801",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "157f0ef9-143f-496d-b8f9-f8c8eeaad801"
          },
          {
            "properties": {
              "displayName": "Log Analytics agent should be installed on your Cloud Services (extended support) role instances",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Security Center collects data from your Cloud Services (extended support) role instances to monitor for security vulnerabilities and threats.",
              "metadata": {
                "version": "2.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/cloudServices"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "45cfe080-ceb1-a91e-9743-71551ed24e94",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/15fdbc87-8a47-4ee9-a2aa-9a2ea1f37554",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "15fdbc87-8a47-4ee9-a2aa-9a2ea1f37554"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs that do not have a minimum password age of 1 day",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines that do not have a minimum password age of 1 day. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "2.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "MinimumPasswordAge",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "MinimumPasswordAge"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/16390df4-2f73-4b42-af13-c801066763df",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "16390df4-2f73-4b42-af13-c801066763df"
          },
          {
            "properties": {
              "displayName": "Video Analyzer accounts should use customer-managed keys to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer-managed keys to manage the encryption at rest of your Video Analyzer accounts. By default, customer data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/videoanalyzerscmkdocs.",
              "metadata": {
                "version": "1.0.0",
                "category": "Video Analyzers"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Media/videoanalyzers"
                    },
                    {
                      "field": "Microsoft.Media/videoanalyzers/encryption.type",
                      "notEquals": "CustomerKey"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/165a4137-c3ed-4fd0-a17f-1c8a80266580",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "165a4137-c3ed-4fd0-a17f-1c8a80266580"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1662 - Fail In Known State",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1662"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/165cb91f-7ea8-4ab7-beaf-8636b98c9d15",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "165cb91f-7ea8-4ab7-beaf-8636b98c9d15"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1684 - Information System Monitoring",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1684"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/16bfdb59-db38-47a5-88a9-2e9371a638cf",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "16bfdb59-db38-47a5-88a9-2e9371a638cf"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs that do not have the specified Windows PowerShell modules installed",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines that do not have the specified Windows PowerShell modules installed. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsPowerShellModules",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/16f9b37c-4408-4c30-bc17-254958f2e2d6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "16f9b37c-4408-4c30-bc17-254958f2e2d6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1103 - Audit Events",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1103"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/16feeb31-6377-437e-bbab-d7f73911896d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "16feeb31-6377-437e-bbab-d7f73911896d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1007 - Account Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1007"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/17200329-bf6c-46d8-ac6d-abf4641c2add",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "17200329-bf6c-46d8-ac6d-abf4641c2add"
          },
          {
            "properties": {
              "displayName": "Azure Batch pools should have disk encryption enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Enabling Azure Batch disk encryption ensures that data is always encrypted at rest on your Azure Batch compute node. Learn more about disk encryption in Batch at https://docs.microsoft.com/azure/batch/disk-encryption.",
              "metadata": {
                "version": "1.0.0",
                "category": "Batch"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Batch/batchAccounts/pools"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Batch/batchAccounts/pools/deploymentConfiguration.virtualMachineConfiguration.diskEncryptionConfiguration.targets[*]",
                        "where": {
                          "field": "Microsoft.Batch/batchAccounts/pools/deploymentConfiguration.virtualMachineConfiguration.diskEncryptionConfiguration.targets[*]",
                          "contains": "TemporaryDisk"
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1760f9d4-7206-436e-a28f-d9f3a5c8a227",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1760f9d4-7206-436e-a28f-d9f3a5c8a227"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1349 - Identification And Authentication (Non-Org. Users) | Use Of FICAM-Approved Products",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1349"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/17641f70-94cd-4a5d-a613-3d1143e20e34",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "17641f70-94cd-4a5d-a613-3d1143e20e34"
          },
          {
            "properties": {
              "displayName": "Deploy associations for a managed application",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys an association resource that associates selected resource types to the specified managed application.  This policy deployment does not support nested resource types.",
              "metadata": {
                "version": "1.0.0",
                "category": "Managed Application"
              },
              "parameters": {
                "targetManagedApplicationId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Managed application ID",
                    "description": "Resource ID of the managed application to which resources need to be associated."
                  }
                },
                "resourceTypesToAssociate": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Resource types to associate",
                    "description": "The list of resource types to be associated to the managed application.",
                    "strongType": "resourceTypes"
                  }
                },
                "associationNamePrefix": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Association name prefix",
                    "description": "Prefix to be added to the name of the association resource being created."
                  },
                  "defaultValue": "DeployedByPolicy"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": "[parameters(\u0027resourceTypesToAssociate\u0027)]"
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.CustomProviders/Associations",
                    "name": "[concat(parameters(\u0027associationNamePrefix\u0027), \u0027-\u0027, uniqueString(parameters(\u0027targetManagedApplicationId\u0027)))]",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "associatedResourceName": {
                              "type": "string"
                            },
                            "resourceTypesToAssociate": {
                              "type": "string"
                            },
                            "targetManagedApplicationId": {
                              "type": "string"
                            },
                            "associationNamePrefix": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "resourceType": "[concat(parameters(\u0027resourceTypesToAssociate\u0027), \u0027/providers/associations\u0027)]",
                            "resourceName": "[concat(parameters(\u0027associatedResourceName\u0027), \u0027/microsoft.customproviders/\u0027, parameters(\u0027associationNamePrefix\u0027), \u0027-\u0027, uniqueString(parameters(\u0027targetManagedApplicationId\u0027)))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2017-05-10",
                              "name": "[concat(deployment().Name, \u0027-2\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "resources": [
                                    {
                                      "type": "[variables(\u0027resourceType\u0027)]",
                                      "name": "[variables(\u0027resourceName\u0027)]",
                                      "apiVersion": "2018-09-01-preview",
                                      "properties": {
                                        "targetResourceId": "[parameters(\u0027targetManagedApplicationId\u0027)]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "resourceTypesToAssociate": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "associatedResourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "targetManagedApplicationId": {
                            "value": "[parameters(\u0027targetManagedApplicationId\u0027)]"
                          },
                          "associationNamePrefix": {
                            "value": "[parameters(\u0027associationNamePrefix\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/17763ad9-70c0-4794-9397-53d765932634",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "17763ad9-70c0-4794-9397-53d765932634"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure system-assigned managed identity to enable Azure Monitor assignments on VMs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure system-assigned managed identity to virtual machines hosted in Azure that are supported by Azure Monitor and do not have a system-assigned managed identity. A system-assigned managed identity is a prerequisite for all Azure Monitor assignments and must be added to machines before using any Azure Monitor extension. Target virtual machines must be in a supported location.",
              "metadata": {
                "category": "Monitoring",
                "version": "4.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        }
                      ]
                    },
                    {
                      "field": "location",
                      "in": [
                        "australiacentral",
                        "australiaeast",
                        "australiasoutheast",
                        "brazilsouth",
                        "canadacentral",
                        "canadaeast",
                        "centralindia",
                        "centralus",
                        "eastasia",
                        "eastus2euap",
                        "eastus",
                        "eastus2",
                        "francecentral",
                        "germanywestcentral",
                        "japaneast",
                        "japanwest",
                        "jioindiawest",
                        "koreacentral",
                        "koreasouth",
                        "northcentralus",
                        "northeurope",
                        "norwayeast",
                        "southafricanorth",
                        "southcentralus",
                        "southeastasia",
                        "southindia",
                        "switzerlandnorth",
                        "uaenorth",
                        "uksouth",
                        "ukwest",
                        "westcentralus",
                        "westeurope",
                        "westindia",
                        "westus",
                        "westus2"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "12*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "15*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "UbuntuServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "18.04*LTS"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "0001-com-ubuntu-server-focal"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "20_04-lts*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "like": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "9"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian-10"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "like": "10"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                          "exists": "true"
                        }
                      ]
                    },
                    {
                      "value": "[requestContext().apiVersion]",
                      "greaterOrEquals": "2018-10-01"
                    },
                    {
                      "field": "identity.type",
                      "notContains": "SystemAssigned"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                      "/providers/microsoft.authorization/roleDefinitions/e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
                      "/providers/microsoft.authorization/roleDefinitions/f1a07417-d97a-45cb-824c-7a7467783830"
                    ],
                    "operations": [
                      {
                        "operation": "addOrReplace",
                        "field": "identity.type",
                        "value": "[if(contains(field(\u0027identity.type\u0027), \u0027UserAssigned\u0027), concat(field(\u0027identity.type\u0027), \u0027,SystemAssigned\u0027), \u0027SystemAssigned\u0027)]"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/17b3de92-f710-4cf4-aa55-0e7859f1ed7b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "17b3de92-f710-4cf4-aa55-0e7859f1ed7b"
          },
          {
            "properties": {
              "displayName": "Transparent Data Encryption on SQL databases should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Transparent data encryption should be enabled to protect data-at-rest and meet compliance requirements",
              "metadata": {
                "version": "2.0.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "field": "name",
                      "notEquals": "master"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                    "name": "current",
                    "existenceCondition": {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/transparentDataEncryption.status",
                          "equals": "enabled"
                        },
                        {
                          "field": "Microsoft.Sql/servers/databases/transparentDataEncryption/state",
                          "equals": "enabled"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "17k78e20-9358-41c9-923c-fb736d382a12"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1325 - Authenticator Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1325"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1845796a-7581-49b2-ae20-443121538e19",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1845796a-7581-49b2-ae20-443121538e19"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1480 - Temperature And Humidity Controls",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1480"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/18a767cc-1947-4338-a240-bc058c81164f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "18a767cc-1947-4338-a240-bc058c81164f"
          },
          {
            "properties": {
              "displayName": "PostgreSQL servers should use customer-managed keys to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
              "metadata": {
                "version": "1.0.4",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.DBforPostgreSQL/servers/keys",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/keys/serverKeyType",
                          "equals": "AzureKeyVault"
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/keys/uri",
                          "notEquals": ""
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/keys/uri",
                          "exists": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "18adea5e-f416-4d0f-8aa8-d24321e3e274"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1369 - Incident Monitoring",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1369"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/18cc35ed-a429-486d-8d59-cb47e87304ed",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "18cc35ed-a429-486d-8d59-cb47e87304ed"
          },
          {
            "properties": {
              "displayName": "Application Insights components should block non-Azure Active Directory based ingestion.",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enforcing log ingestion to require Azure Active Directory authentication prevents unauthenticated logs from an attacker which could lead to incorrect status, false alerts, and incorrect logs stored in the system.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Deny",
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Insights/components"
                    },
                    {
                      "field": "Microsoft.Insights/components/DisableLocalAuth",
                      "notEquals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/199d5677-e4d9-4264-9465-efe1839c06bd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "199d5677-e4d9-4264-9465-efe1839c06bd"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1269 - Alternate Storage Site | Separation From Primary Site",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1269"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/19b9439d-865d-4474-b17d-97d2702fdb66",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "19b9439d-865d-4474-b17d-97d2702fdb66"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027System Audit Policies - Logon-Logoff\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027System Audit Policies - Logon-Logoff\u0027 for auditing IPSec, network policy, claims, account lockout, group membership, and logon/logoff events. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SystemAuditPoliciesLogonLogoff",
                  "version": "1.*",
                  "configurationParameter": {
                    "AuditGroupMembership": "Audit Group Membership;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "AuditGroupMembership": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Group Membership",
                    "description": "Specifies whether audit events are generated when group memberships are enumerated on the client computer."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "Success"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesLogonLogoff",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Audit Group Membership;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditGroupMembership\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/19be9779-c776-4dfa-8a15-a2fd5dc843d6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "19be9779-c776-4dfa-8a15-a2fd5dc843d6"
          },
          {
            "properties": {
              "displayName": "[Preview]: Azure Key Vault Managed HSM should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for your Azure Key Vault Managed HSM so that it\u0027s not accessible over the public internet. This can reduce data leakage risks. Learn more at: https://docs.microsoft.com/azure/key-vault/managed-hsm/private-link#allow-trusted-services-to-access-managed-hsm.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Key Vault",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.KeyVault/managedHSMs"
                    },
                    {
                      "field": "Microsoft.KeyVault/managedHSMs/createMode",
                      "notEquals": "recover"
                    },
                    {
                      "field": "Microsoft.KeyVault/managedHSMs/networkAcls.defaultAction",
                      "notEquals": "Deny"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/19ea9d63-adee-4431-a95e-1913c6c1c75f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "19ea9d63-adee-4431-a95e-1913c6c1c75f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1071 - Wireless Access | Restrict Configurations By Users",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1071"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1a437f5b-9ad6-4f28-8861-de404d511ae4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1a437f5b-9ad6-4f28-8861-de404d511ae4"
          },
          {
            "properties": {
              "displayName": "Azure Monitor log profile should collect logs for categories \u0027write,\u0027 \u0027delete,\u0027 and \u0027action\u0027",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy ensures that a log profile collects logs for categories \u0027write,\u0027 \u0027delete,\u0027 and \u0027action\u0027",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/logprofiles",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/categories[*]",
                            "notEquals": "Write"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/categories[*]",
                            "notEquals": "Delete"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/categories[*]",
                            "notEquals": "Action"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1a4e592a-6a6e-44a5-9814-e36264ca96e7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1a4e592a-6a6e-44a5-9814-e36264ca96e7"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Access to App Services should be restricted",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure security center has discovered that the networking configuration of some of your app services are overly permissive and allow inbound traffic from ranges that are too broad",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "restrictAccessToAppServices",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1a833ff1-d297-4a0f-9944-888428f8e0ff",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1a833ff1-d297-4a0f-9944-888428f8e0ff"
          },
          {
            "properties": {
              "displayName": "Azure Event Grid topics should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that the resource isn\u0027t exposed on the public internet. You can limit exposure of your resources by creating private endpoints instead. Learn more at: https://aka.ms/privateendpoints.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Grid"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/topics"
                    },
                    {
                      "field": "kind",
                      "notEquals": "AzureArc"
                    },
                    {
                      "field": "Microsoft.EventGrid/topics/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1adadefe-5f21-44f7-b931-a59b54ccdb45",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1adadefe-5f21-44f7-b931-a59b54ccdb45"
          },
          {
            "properties": {
              "displayName": "Linux virtual machines should have Azure Monitor Agent installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Linux virtual machines should be monitored and secured through the deployed Azure Monitor Agent. The Azure Monitor Agent collects telemetry data from the guest OS. This policy will audit virtual machines with supported OS images in supported regions. Learn more: https://aka.ms/AMAOverview.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "listOfLinuxImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Additional Virtual Machine Images",
                    "description": "List of virtual machine images that have supported Linux OS to add to scope. Example values: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "location",
                      "in": [
                        "australiacentral",
                        "australiaeast",
                        "australiasoutheast",
                        "brazilsouth",
                        "canadacentral",
                        "canadaeast",
                        "centralindia",
                        "centralus",
                        "eastasia",
                        "eastus2euap",
                        "eastus",
                        "eastus2",
                        "francecentral",
                        "germanywestcentral",
                        "japaneast",
                        "japanwest",
                        "jioindiawest",
                        "koreacentral",
                        "koreasouth",
                        "northcentralus",
                        "northeurope",
                        "norwayeast",
                        "southafricanorth",
                        "southcentralus",
                        "southeastasia",
                        "southindia",
                        "switzerlandnorth",
                        "uaenorth",
                        "uksouth",
                        "ukwest",
                        "westcentralus",
                        "westeurope",
                        "westindia",
                        "westus",
                        "westus2"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfLinuxImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "12*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "15*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "UbuntuServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "18.04*LTS"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "0001-com-ubuntu-server-focal"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "20_04-lts*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "like": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "9"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian-10"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "like": "10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "AzureMonitorLinuxAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitor"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1afdc4b6-581a-45fb-b630-f1e6051e3e7a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1afdc4b6-581a-45fb-b630-f1e6051e3e7a"
          },
          {
            "properties": {
              "displayName": "Vulnerability assessment should be enabled on SQL Managed Instance",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit each SQL Managed Instance which doesn\u0027t have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
              "metadata": {
                "version": "1.0.1",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/managedInstances"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/managedInstances/vulnerabilityAssessments",
                    "name": "default",
                    "existenceCondition": {
                      "field": "Microsoft.Sql/managedInstances/vulnerabilityAssessments/recurringScans.isEnabled",
                      "equals": "True"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1b7aa243-30e4-4c9e-bca8-d0d3022b634a"
          },
          {
            "properties": {
              "displayName": "Public network access on Azure SQL Database should be disabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling the public network access property improves security by ensuring your Azure SQL Database can only be accessed from a private endpoint. This configuration denies all logins that match IP or virtual network based firewall rules.",
              "metadata": {
                "version": "1.1.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "field": "Microsoft.Sql/servers/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1b8ca024-1d5c-4dec-8995-b1a932b41780"
          },
          {
            "properties": {
              "displayName": "Configure Azure Web PubSub Service with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints connect your virtual networks to Azure services without a public IP address at the source or destination. By mapping private endpoints to Azure Web PubSub service, you can reduce data leakage risks. Learn more about private links at: https://aka.ms/awps/privatelink. ",
              "metadata": {
                "version": "1.0.0",
                "category": "Web PubSub"
              },
              "parameters": {
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private Endpoint Subnet ID",
                    "description": "A subnet with private endpoint network policies disabled.",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.SignalRService/webPubSub"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.SignalRService/webPubSub/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.SignalRService/webPubSub/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                      "/providers/Microsoft.Authorization/roleDefinitions/8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "serviceId": {
                              "type": "string"
                            },
                            "privateEndpointSubnetId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "privateEndpointName": "[concat(\u0027pe-\u0027,substring(parameters(\u0027name\u0027),0,min(length(parameters(\u0027name\u0027)),50)),\u0027-\u0027,uniquestring(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027privateEndpointName\u0027)]",
                              "apiVersion": "2020-06-01",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "serviceId": {
                                      "type": "string"
                                    },
                                    "privateEndpointSubnetId": {
                                      "type": "string"
                                    },
                                    "subnetLocation": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "privateEndpointName": "[deployment().name]"
                                  },
                                  "resources": [
                                    {
                                      "name": "[variables(\u0027privateEndpointName\u0027)]",
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2020-07-01",
                                      "location": "[parameters(\u0027subnetLocation\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "subnet": {
                                          "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                        },
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[variables(\u0027privateEndpointName\u0027)]",
                                            "properties": {
                                              "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                              "groupIds": [
                                                "webpubsub"
                                              ],
                                              "requestMessage": "autoapprove"
                                            }
                                          }
                                        ],
                                        "manualPrivateLinkServiceConnections": []
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "serviceId": {
                                    "value": "[parameters(\u0027serviceId\u0027)]"
                                  },
                                  "privateEndpointSubnetId": {
                                    "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                  },
                                  "subnetLocation": {
                                    "value": "[reference(first(take(split(parameters(\u0027privateEndpointSubnetId\u0027),\u0027/subnets\u0027),1)),\u00272020-07-01\u0027,\u0027Full\u0027).location]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1b9c0b58-fc7b-42c8-8010-cdfa1d1b8544",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1b9c0b58-fc7b-42c8-8010-cdfa1d1b8544"
          },
          {
            "properties": {
              "displayName": "Application Insights components should block log ingestion and querying from public networks",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Improve Application Insights security by blocking log ingestion and querying from public networks. Only private-link connected networks will be able to ingest and query logs of this component. Learn more at https://aka.ms/AzMonPrivateLink#configure-application-insights.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Insights/components"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Insights/components/publicNetworkAccessForIngestion",
                          "notEquals": "disabled"
                        },
                        {
                          "field": "Microsoft.Insights/components/publicNetworkAccessForQuery",
                          "notEquals": "disabled"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1bc02227-0cb6-4e11-8f53-eb0b22eab7e8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1bc02227-0cb6-4e11-8f53-eb0b22eab7e8"
          },
          {
            "properties": {
              "displayName": "Ensure that \u0027PHP version\u0027 is the latest, if used as a part of the API app",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Periodically, newer versions are released for PHP software either due to security flaws or to include additional functionality. Using the latest PHP version for API apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
              "metadata": {
                "version": "2.1.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "PHPLatestVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Latest PHP version",
                    "description": "Latest supported PHP version for App Services"
                  },
                  "defaultValue": "7.4"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "*api"
                    },
                    {
                      "field": "kind",
                      "contains": "linux"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                          "notContains": "PHP"
                        },
                        {
                          "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                          "equals": "[concat(\u0027PHP|\u0027, parameters(\u0027PHPLatestVersion\u0027))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1bc1795e-d44a-4d48-9b3b-6fff0fd5f9ba",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1bc1795e-d44a-4d48-9b3b-6fff0fd5f9ba"
          },
          {
            "properties": {
              "displayName": "Azure Service Bus namespaces should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Service Bus namespaces, data leakage risks are reduced. Learn more at: https://docs.microsoft.com/azure/service-bus-messaging/private-link-service.",
              "metadata": {
                "version": "1.0.0",
                "category": "Service Bus"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ServiceBus/namespaces"
                    },
                    {
                      "field": "Microsoft.ServiceBus/namespaces/sku.tier",
                      "equals": "Premium"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.ServiceBus/namespaces/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.ServiceBus/namespaces/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1c06e275-d63d-4540-b761-71f364c2111d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1c06e275-d63d-4540-b761-71f364c2111d"
          },
          {
            "properties": {
              "displayName": "Deploy - Configure Dependency agent to be enabled on Windows virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Dependency agent for Windows virtual machines if the virtual machine image is in the list defined and the agent is not installed.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "listOfImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Windows OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-V4"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "DependencyAgentWindows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "DependencyAgentWindows",
                            "vmExtensionPublisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                            "vmExtensionType": "DependencyAgentWindows",
                            "vmExtensionTypeHandlerVersion": "9.6"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "apiVersion": "2018-06-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled extension for VM\u0027, \u0027: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1c210e94-a481-4beb-95fa-1571b434fb04",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1c210e94-a481-4beb-95fa-1571b434fb04"
          },
          {
            "properties": {
              "displayName": "[Preview]: vTPM should be enabled on supported virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable virtual TPM device on supported virtual machines to facilitate Measured Boot and other OS security features that require a TPM. Once enabled, vTPM can be used to attest boot integrity. This assessment only applies to trusted launch enabled virtual machines.",
              "metadata": {
                "category": "Security Center",
                "version": "2.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                      "equals": "TrustedLaunch"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                      "notequals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1c30f9cd-b84c-49cc-aa2c-9288447cc3b3"
          },
          {
            "properties": {
              "displayName": "Configure Azure Event Grid topics to disable local authentication",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable local authentication methods so that your Azure Event Grid topics exclusively require Azure Active Directory identities for authentication. Learn more at: https://aka.ms/aeg-disablelocalauth.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Grid"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/topics"
                    },
                    {
                      "field": "Microsoft.EventGrid/topics/disableLocalAuth",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/1e241071-0855-49ea-94dc-649edcd759de"
                    ],
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272021-06-01-preview\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.EventGrid/topics/disableLocalAuth",
                        "value": true
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1c8144d9-746a-4501-b08c-093c8d29ad04",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1c8144d9-746a-4501-b08c-093c8d29ad04"
          },
          {
            "properties": {
              "displayName": "Microsoft Defender for Containers should be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Microsoft Defender for Containers provides hardening, vulnerability assessment and run-time protections for your Azure, hybrid, and multi-cloud Kubernetes environments.",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "Containers",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1c988dd6-ade4-430f-a608-2a3e5b0a6d38"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1072 - Wireless Access | Antennas / Transmission Power Levels",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1072"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1ca29e41-34ec-4e70-aba9-6248aca18c31",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1ca29e41-34ec-4e70-aba9-6248aca18c31"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1656 - Secure Name / Address Resolution Service (Authoritative Source)",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1656"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1cb067d5-c8b5-4113-a7ee-0a493633924b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1cb067d5-c8b5-4113-a7ee-0a493633924b"
          },
          {
            "properties": {
              "displayName": "[Preview]: Guest Attestation extension should be installed on supported Windows virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Install Guest Attestation extension on supported virtual machines to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled virtual machines.",
              "metadata": {
                "category": "Security Center",
                "version": "3.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.offer",
                          "like": "windows*"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                          "like": "Windows*"
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                      "equals": "TrustedLaunch"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                      "equals": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Security.WindowsAttestation"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "GuestAttestation"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "in": [
                            "Succeeded",
                            "Provisioning succeeded"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1cb4d9c2-f88f-4069-bee0-dba239a57b09"
          },
          {
            "properties": {
              "displayName": "Public network access on Azure Data Factory should be disabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling the public network access property improves security by ensuring your Azure Data Factory can only be accessed from a private endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Data Factory"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DataFactory/factories"
                    },
                    {
                      "field": "Microsoft.DataFactory/factories/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1cf164be-6819-4a50-b8fa-4bcaa4f98fb6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1cf164be-6819-4a50-b8fa-4bcaa4f98fb6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1592 - External Information System Services | Consistent Interests Of Consumers And Providers",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1592"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d01ba6c-289f-42fd-a408-494b355b6222",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d01ba6c-289f-42fd-a408-494b355b6222"
          },
          {
            "properties": {
              "displayName": "Azure File Sync should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Creating a private endpoint for the indicated Storage Sync Service resource allows you to address your Storage Sync Service resource from within the private IP address space of your organization\u0027s network, rather than through the internet-accessible public endpoint. Creating a private endpoint by itself does not disable the public endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.StorageSync/storageSyncServices"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.StorageSync/storageSyncServices/privateEndpointConnections",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.StorageSync/storageSyncServices/privateEndpointConnections/privateEndpoint",
                          "exists": "true"
                        },
                        {
                          "field": "Microsoft.StorageSync/storageSyncServices/privateEndpointConnections/provisioningState",
                          "equals": "Succeeded"
                        },
                        {
                          "field": "Microsoft.StorageSync/storageSyncServices/privateEndpointConnections/privateLinkServiceConnectionState.status",
                          "equals": "Approved"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d320205-c6a1-4ac6-873d-46224024e8e2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d320205-c6a1-4ac6-873d-46224024e8e2"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1088 - Security Awareness And Training Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Awareness and Training control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1088"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d50f99d-1356-49c0-934a-45f742ba7783",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d50f99d-1356-49c0-934a-45f742ba7783"
          },
          {
            "properties": {
              "displayName": "Configure Kubernetes clusters with specified GitOps configuration using no secrets",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy a \u0027sourceControlConfiguration\u0027 to Kubernetes clusters to assure that the clusters get their source of truth for workloads and configurations from the defined git repo. This definition requires no secrets. For instructions, visit https://aka.ms/K8sGitOpsPolicy.",
              "metadata": {
                "version": "1.0.0",
                "category": "Kubernetes"
              },
              "parameters": {
                "configurationResourceName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Configuration resource name",
                    "description": "The name for the sourceControlConfiguration.  Learn more about setting up GitOps configuration: https://aka.ms/AzureArcK8sUsingGitOps."
                  }
                },
                "operatorInstanceName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Operator instance name",
                    "description": "Name used in the operator instances. Maximum of 23 lowercase alphanumeric characters or hyphen. Must start and end with an alphanumeric character."
                  }
                },
                "operatorNamespace": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Operator namespace",
                    "description": "Namespace within which the operators will be installed. Maximum of 23 lowercase alphanumeric characters or hyphen. Must start and end with an alphanumeric character."
                  }
                },
                "operatorScope": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Operator scope",
                    "description": "The permission scope for the operator. Possible values are \u0027cluster\u0027 (full access) or \u0027namespace\u0027 (restricted access)."
                  },
                  "allowedValues": [
                    "cluster",
                    "namespace"
                  ],
                  "defaultValue": "namespace"
                },
                "operatorType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Operator type",
                    "description": "The type of operator to install. Currently, \u0027Flux\u0027 is supported."
                  },
                  "allowedValues": [
                    "Flux"
                  ],
                  "defaultValue": "Flux"
                },
                "operatorParams": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Operator parameters",
                    "description": "Parameters to set on the Flux operator, separated by spaces.  For example, --git-readonly --sync-garbage-collection.  Learn more: http://aka.ms/AzureArcK8sFluxOperatorParams."
                  },
                  "defaultValue": ""
                },
                "repositoryUrl": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Repository Url",
                    "description": "The URL for the source control repository. Learn more about URL formats: https://aka.ms/GitOpsRepoUrlParameters"
                  }
                },
                "enableHelmOperator": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable Helm",
                    "description": "Indicate whether to enable Helm for this instance of Flux. Learn more: http://aka.ms/AzureArcK8sGitOpsWithHelm."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "true"
                },
                "chartVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Helm chart version for installing Flux Helm",
                    "description": "The version of the Helm chart for installing Flux Helm. For example, 1.2.0"
                  },
                  "defaultValue": "1.2.0"
                },
                "chartValues": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Helm chart parameters for installing Flux Helm",
                    "description": "Parameters for the Helm chart for installing Flux Helm, separated by spaces. For example, --set helm.versions=v3"
                  },
                  "defaultValue": ""
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "deployIfNotExists",
                    "auditIfNotExists",
                    "disabled"
                  ],
                  "defaultValue": "deployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Kubernetes/connectedClusters",
                    "Microsoft.ContainerService/managedClusters"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.KubernetesConfiguration/sourceControlConfigurations",
                    "name": "[parameters(\u0027configurationResourceName\u0027)]",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deploymentScope": "ResourceGroup",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.KubernetesConfiguration/sourceControlConfigurations/operatorParams",
                          "in": [
                            "[parameters(\u0027operatorParams\u0027)]",
                            "[concat(\u0027--git-readonly \u0027,parameters(\u0027operatorParams\u0027))]"
                          ]
                        },
                        {
                          "field": "Microsoft.KubernetesConfiguration/sourceControlConfigurations/repositoryUrl",
                          "equals": "[parameters(\u0027repositoryUrl\u0027)]"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.KubernetesConfiguration/sourceControlConfigurations/enableHelmOperator",
                              "equals": "false"
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.KubernetesConfiguration/sourceControlConfigurations/enableHelmOperator",
                                  "equals": "true"
                                },
                                {
                                  "field": "Microsoft.KubernetesConfiguration/sourceControlConfigurations/helmOperatorProperties.chartVersion",
                                  "equals": "[parameters(\u0027chartVersion\u0027)]"
                                },
                                {
                                  "field": "Microsoft.KubernetesConfiguration/sourceControlConfigurations/helmOperatorProperties.chartValues",
                                  "equals": "[parameters(\u0027chartValues\u0027)]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "configurationResourceName": {
                              "type": "string"
                            },
                            "clusterLocation": {
                              "type": "string"
                            },
                            "clusterName": {
                              "type": "string"
                            },
                            "operatorInstanceName": {
                              "type": "string"
                            },
                            "operatorNamespace": {
                              "type": "string"
                            },
                            "operatorScope": {
                              "type": "string"
                            },
                            "operatorType": {
                              "type": "string"
                            },
                            "operatorParams": {
                              "type": "string"
                            },
                            "repositoryUrl": {
                              "type": "string"
                            },
                            "enableHelmOperator": {
                              "type": "string"
                            },
                            "chartVersion": {
                              "type": "string"
                            },
                            "chartValues": {
                              "type": "string"
                            },
                            "clusterResourceType": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[contains(toLower(parameters(\u0027clusterResourceType\u0027)), toLower(\u0027connectedclusters\u0027))]",
                              "type": "Microsoft.Kubernetes/connectedClusters/providers/sourceControlConfigurations",
                              "name": "[concat(parameters(\u0027clusterName\u0027), \u0027/Microsoft.KubernetesConfiguration/\u0027, parameters(\u0027configurationResourceName\u0027))]",
                              "apiVersion": "2021-03-01",
                              "properties": {
                                "operatorInstanceName": "[parameters(\u0027operatorInstanceName\u0027)]",
                                "operatorNamespace": "[parameters(\u0027operatorNamespace\u0027)]",
                                "operatorScope": "[parameters(\u0027operatorScope\u0027)]",
                                "operatorType": "[parameters(\u0027operatorType\u0027)]",
                                "operatorParams": "[parameters(\u0027operatorParams\u0027)]",
                                "repositoryUrl": "[parameters(\u0027repositoryUrl\u0027)]",
                                "enableHelmOperator": "[parameters(\u0027enableHelmOperator\u0027)]",
                                "helmOperatorProperties": {
                                  "chartVersion": "[parameters(\u0027chartVersion\u0027)]",
                                  "chartValues": "[parameters(\u0027chartValues\u0027)]"
                                }
                              }
                            },
                            {
                              "condition": "[contains(toLower(parameters(\u0027clusterResourceType\u0027)), toLower(\u0027managedclusters\u0027))]",
                              "type": "Microsoft.ContainerService/managedClusters/providers/sourceControlConfigurations",
                              "name": "[concat(parameters(\u0027clusterName\u0027), \u0027/Microsoft.KubernetesConfiguration/\u0027, parameters(\u0027configurationResourceName\u0027))]",
                              "apiVersion": "2021-03-01",
                              "properties": {
                                "operatorInstanceName": "[parameters(\u0027operatorInstanceName\u0027)]",
                                "operatorNamespace": "[parameters(\u0027operatorNamespace\u0027)]",
                                "operatorScope": "[parameters(\u0027operatorScope\u0027)]",
                                "operatorType": "[parameters(\u0027operatorType\u0027)]",
                                "operatorParams": "[parameters(\u0027operatorParams\u0027)]",
                                "repositoryUrl": "[parameters(\u0027repositoryUrl\u0027)]",
                                "enableHelmOperator": "[parameters(\u0027enableHelmOperator\u0027)]",
                                "helmOperatorProperties": {
                                  "chartVersion": "[parameters(\u0027chartVersion\u0027)]",
                                  "chartValues": "[parameters(\u0027chartValues\u0027)]"
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "clusterLocation": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "clusterName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "configurationResourceName": {
                            "value": "[parameters(\u0027configurationResourceName\u0027)]"
                          },
                          "operatorInstanceName": {
                            "value": "[parameters(\u0027operatorInstanceName\u0027)]"
                          },
                          "operatorNamespace": {
                            "value": "[parameters(\u0027operatorNamespace\u0027)]"
                          },
                          "operatorScope": {
                            "value": "[parameters(\u0027operatorScope\u0027)]"
                          },
                          "operatorType": {
                            "value": "[parameters(\u0027operatorType\u0027)]"
                          },
                          "operatorParams": {
                            "value": "[parameters(\u0027operatorParams\u0027)]"
                          },
                          "repositoryUrl": {
                            "value": "[parameters(\u0027repositoryUrl\u0027)]"
                          },
                          "enableHelmOperator": {
                            "value": "[parameters(\u0027enableHelmOperator\u0027)]"
                          },
                          "chartVersion": {
                            "value": "[parameters(\u0027chartVersion\u0027)]"
                          },
                          "chartValues": {
                            "value": "[parameters(\u0027chartValues\u0027)]"
                          },
                          "clusterResourceType": {
                            "value": "[field(\u0027type\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d61c4d2-aef2-432b-87fc-7f96b019b7e1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d61c4d2-aef2-432b-87fc-7f96b019b7e1"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1538 - Security Categorization",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1538"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d7658b2-e827-49c3-a2ae-6d2bd0b45874",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d7658b2-e827-49c3-a2ae-6d2bd0b45874"
          },
          {
            "properties": {
              "displayName": "Virtual machines should be migrated to new Azure Resource Manager resources",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use new Azure Resource Manager for your virtual machines to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.Compute/virtualMachines"
                      ]
                    },
                    {
                      "value": "[field(\u0027type\u0027)]",
                      "equals": "Microsoft.ClassicCompute/virtualMachines"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d84d5fb-01f6-4d12-ba4f-4a26081d403d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1298 - Identification And Authentication Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1298"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1dc784b5-4895-4d27-9d40-a06b032bd1ee",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1dc784b5-4895-4d27-9d40-a06b032bd1ee"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit API Applications that are not using latest supported .NET Framework",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use the latest supported .NET Framework version for the latest security classes. Using older classes and types can make your application vulnerable.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "api"
                        },
                        {
                          "field": "kind",
                          "equals": "apiApp"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "UseLatestDotNet",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1de7b11d-1870-41a5-8181-507e7c663cfb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1de7b11d-1870-41a5-8181-507e7c663cfb"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1595 - Developer Configuration Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1595"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1e0414e7-6ef5-4182-8076-aa82fbb53341",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1e0414e7-6ef5-4182-8076-aa82fbb53341"
          },
          {
            "properties": {
              "displayName": "Require a tag and its value on resources",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enforces a required tag and its value. Does not apply to resource groups.",
              "metadata": {
                "version": "1.0.1",
                "category": "Tags"
              },
              "parameters": {
                "tagName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Name",
                    "description": "Name of the tag, such as \u0027environment\u0027"
                  }
                },
                "tagValue": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Value",
                    "description": "Value of the tag, such as \u0027production\u0027"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "not": {
                    "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                    "equals": "[parameters(\u0027tagValue\u0027)]"
                  }
                },
                "then": {
                  "effect": "deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1e30110a-5ceb-460c-a204-c1c3969c6d62",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1e30110a-5ceb-460c-a204-c1c3969c6d62"
          },
          {
            "properties": {
              "displayName": "Cloud Services (extended support) role instances should have an endpoint protection solution installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Protect your Cloud Services (extended support) role instances from threats and vulnerabilities by ensuring an endpoint protection solution is installed on them.",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/cloudServices"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "e71020c2-860c-3235-cd39-04f3f8c936d2",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1e378679-f122-4a96-a739-a7729c46e1aa",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1e378679-f122-4a96-a739-a7729c46e1aa"
          },
          {
            "properties": {
              "displayName": "Configure Azure Synapse workspaces to use private DNS zones",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use private DNS zones to override the DNS resolution for a private endpoint. A private DNS zone links to your virtual network to resolve to Azure Synapse workspace. Learn more at: https://docs.microsoft.com/azure/synapse-analytics/security/how-to-connect-to-workspace-from-restricted-network#appendix-dns-registration-for-private-endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "privateDnsZoneId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone id",
                    "description": "A private DNS zone Id",
                    "strongType": "Microsoft.Network/privateDnsZones"
                  }
                },
                "targetSubResource": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Target sub-resource",
                    "description": "Target sub resource the private endpoint connects to"
                  },
                  "allowedValues": [
                    "Dev",
                    "Sql",
                    "SqlOnDemand"
                  ],
                  "defaultValue": "Dev"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "where": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "equals": "[parameters(\u0027targetSubResource\u0027)]"
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027privateEndpointName\u0027), \u0027/deployedByPolicy\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "synapse-privateDnsZone",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId\u0027)]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId": {
                            "value": "[parameters(\u0027privateDnsZoneId\u0027)]"
                          },
                          "privateEndpointName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1e5ed725-f16c-478b-bd4b-7bfa2f7940b9"
          },
          {
            "properties": {
              "displayName": "Key vaults should have soft delete enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deleting a key vault without soft delete enabled permanently deletes all secrets, keys, and certificates stored in the key vault. Accidental deletion of a key vault can lead to permanent data loss. Soft delete allows you to recover an accidentally deleted key vault for a configurable retention period.",
              "metadata": {
                "version": "2.0.0",
                "category": "Key Vault"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.KeyVault/vaults"
                    },
                    {
                      "not": {
                        "field": "Microsoft.KeyVault/vaults/createMode",
                        "equals": "recover"
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d"
          },
          {
            "properties": {
              "displayName": "Linux machines should have Log Analytics agent installed on Azure Arc",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Machines are non-compliant if Log Analytics agent is not installed on Azure Arc enabled Linux server.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.1.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "LinuxLogAnalyticsAgentInstalled",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                    "portalReview": "true"
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                      "equals": "true"
                    },
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/imageOffer",
                      "like": "linux*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "LinuxLogAnalyticsAgentInstalled",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1e7fed80-8321-4605-b42c-65fc300f23a3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1e7fed80-8321-4605-b42c-65fc300f23a3"
          },
          {
            "properties": {
              "displayName": "Azure API for FHIR should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure API for FHIR should have at least one approved private endpoint connection. Clients in a virtual network can securely access resources that have private endpoint connections through private links. For more information, visit: https://aka.ms/fhir-privatelink.",
              "metadata": {
                "version": "1.0.0",
                "category": "API for FHIR"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HealthcareApis/services"
                    },
                    {
                      "count": {
                        "field": "Microsoft.HealthcareApis/services/privateEndpointConnections[*]",
                        "where": {
                          "field": "Microsoft.HealthcareApis/services/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                          "equals": "Approved"
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1ee56206-5dd1-42ab-b02d-8aae8b1634ce",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1ee56206-5dd1-42ab-b02d-8aae8b1634ce"
          },
          {
            "properties": {
              "displayName": "[Preview]: Azure Security agent should be installed on your Linux Arc machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Install the Azure Security agent on your Linux Arc machines in order to monitor your machines for security configurations and vulnerabilities. Results of the assessments can seen and managed in Azure Security Center.",
              "metadata": {
                "category": "Security Center",
                "version": "1.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/imageOffer",
                      "like": "linux*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.HybridCompute/machines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/type",
                          "equals": "AzureSecurityLinuxAgent"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/Publisher",
                          "equals": "Microsoft.Azure.Security.Monitoring"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f300abb-f5a0-41c3-a163-91bd3ed35de7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f300abb-f5a0-41c3-a163-91bd3ed35de7"
          },
          {
            "properties": {
              "displayName": "An Azure Active Directory administrator should be provisioned for SQL servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit provisioning of an Azure Active Directory administrator for your SQL server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/servers/administrators"
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f314764-cb73-4fc9-b863-8eca98ac36e9"
          },
          {
            "properties": {
              "displayName": "Azure Monitor Logs clusters should be encrypted with customer-managed key",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Create Azure Monitor logs cluster with customer-managed keys encryption. By default, the log data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance. Customer-managed key in Azure Monitor gives you more control over the access to you data, see https://docs.microsoft.com/azure/azure-monitor/platform/customer-managed-keys.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.OperationalInsights/clusters"
                    },
                    {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.OperationalInsights/clusters/keyVaultProperties.keyVaultUri",
                              "equals": ""
                            },
                            {
                              "field": "Microsoft.OperationalInsights/clusters/keyVaultProperties.keyVaultUri",
                              "exists": "false"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.OperationalInsights/clusters/keyVaultProperties.keyName",
                              "equals": ""
                            },
                            {
                              "field": "Microsoft.OperationalInsights/clusters/keyVaultProperties.keyName",
                              "exists": "false"
                            }
                          ]
                        },
                        {
                          "not": {
                            "field": "Microsoft.OperationalInsights/clusters/keyVaultProperties.keyVersion",
                            "exists": "true"
                          }
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f68a601-6e6d-4e42-babf-3f643a047ea2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f68a601-6e6d-4e42-babf-3f643a047ea2"
          },
          {
            "properties": {
              "displayName": "Deploy Diagnostic Settings for Event Hub to Log Analytics workspace",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Event Hub to stream to a regional Log Analytics workspace when any Event Hub which is missing this diagnostic settings is created or updated.",
              "metadata": {
                "version": "1.1.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy_logAnalytics"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "False"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.EventHub/namespaces"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters(\u0027profileName\u0027)]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters(\u0027metricsEnabled\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            },
                            "metricsEnabled": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            },
                            "profileName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.EventHub/namespaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, parameters(\u0027profileName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters(\u0027logAnalytics\u0027)]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters(\u0027metricsEnabled\u0027)]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "ArchiveLogs",
                                    "enabled": true,
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  },
                                  {
                                    "category": "OperationalLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "AutoScaleLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "KafkaCoordinatorLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "KafkaUserErrorLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "EventHubVNetConnectionEvent",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "CustomerManagedKeyUserLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters(\u0027metricsEnabled\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          },
                          "profileName": {
                            "value": "[parameters(\u0027profileName\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f6e93e8-6b31-41b1-83f6-36e449a42579",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f6e93e8-6b31-41b1-83f6-36e449a42579"
          },
          {
            "properties": {
              "displayName": "Configure Azure Defender for Key Vaults to be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for Key Vault provides an additional layer of protection and security intelligence by detecting unusual and potentially harmful attempts to access or exploit key vault accounts.",
              "metadata": {
                "version": "1.0.1",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "KeyVaults",
                    "deploymentScope": "subscription",
                    "existenceScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ],
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    },
                    "deployment": {
                      "location": "westeurope",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {},
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {},
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Security/pricings",
                              "apiVersion": "2018-06-01",
                              "name": "KeyVaults",
                              "properties": {
                                "pricingTier": "Standard"
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f725891-01c0-420a-9059-4fa46cb770b7"
          },
          {
            "properties": {
              "displayName": "Endpoint protection should be installed on your machines",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "To protect your machines from threats and vulnerabilities, install a supported endpoint protection solution.",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Compute/virtualMachines",
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.HybridCompute/machines"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "4fb67663-9ab9-475d-b026-8c544cced439",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f7c564c-0a90-4d44-b7e1-9d456cffaee8"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027Security Options - Shutdown\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - Shutdown\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Shutdown: Allow system to be shut down without having to log on",
                    "description": "Specifies whether a computer can be shut down when a user is not logged on. If this policy setting is enabled, the shutdown command is available on the Windows logon screen."
                  },
                  "defaultValue": "0"
                },
                "ShutdownClearVirtualMemoryPagefile": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Shutdown: Clear virtual memory pagefile",
                    "description": "Specifies whether the virtual memory pagefile is cleared when the system is shut down. When this policy setting is enabled, the system pagefile is cleared each time that the system shuts down properly. For systems with large amounts of RAM, this could result in substantial time needed to complete the shutdown."
                  },
                  "defaultValue": "0"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsShutdown",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027Shutdown: Allow system to be shut down without having to log on;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn\u0027), \u0027,\u0027, \u0027Shutdown: Clear virtual memory pagefile;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027ShutdownClearVirtualMemoryPagefile\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SecurityOptionsShutdown"
                          },
                          "ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn": {
                            "value": "[parameters(\u0027ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn\u0027)]"
                          },
                          "ShutdownClearVirtualMemoryPagefile": {
                            "value": "[parameters(\u0027ShutdownClearVirtualMemoryPagefile\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn": {
                              "type": "string"
                            },
                            "ShutdownClearVirtualMemoryPagefile": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Shutdown: Allow system to be shut down without having to log on;ExpectedValue",
                                      "value": "[parameters(\u0027ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn\u0027)]"
                                    },
                                    {
                                      "name": "Shutdown: Clear virtual memory pagefile;ExpectedValue",
                                      "value": "[parameters(\u0027ShutdownClearVirtualMemoryPagefile\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Shutdown: Allow system to be shut down without having to log on;ExpectedValue",
                                      "value": "[parameters(\u0027ShutdownAllowSystemToBeShutDownWithoutHavingToLogOn\u0027)]"
                                    },
                                    {
                                      "name": "Shutdown: Clear virtual memory pagefile;ExpectedValue",
                                      "value": "[parameters(\u0027ShutdownClearVirtualMemoryPagefile\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f8c20ce-3414-4496-8b26-0e902a1541da",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f8c20ce-3414-4496-8b26-0e902a1541da"
          },
          {
            "properties": {
              "displayName": "Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/cosmosdb-cmk.",
              "metadata": {
                "version": "1.0.2",
                "category": "Cosmos DB"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The desired effect of the policy."
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/keyVaultKeyUri",
                      "exists": false
                    },
                    {
                      "field": "type",
                      "equals": "Microsoft.DocumentDB/databaseAccounts"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1f905d99-2ab7-462c-a6b0-f709acca6c8f"
          },
          {
            "properties": {
              "displayName": "Logic Apps Integration Service Environment should be encrypted with customer-managed keys",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy into Integration Service Environment to manage encryption at rest of Logic Apps data using customer-managed keys. By default, customer data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
              "metadata": {
                "version": "1.0.0",
                "category": "Logic Apps"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Logic/integrationServiceEnvironments"
                    },
                    {
                      "field": "Microsoft.Logic/integrationServiceEnvironments/encryptionConfiguration",
                      "exists": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1fafeaf6-7927-4059-a50a-8eb2a7a6f2b5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1fafeaf6-7927-4059-a50a-8eb2a7a6f2b5"
          },
          {
            "properties": {
              "displayName": "Azure HDInsight clusters should use encryption at host to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enabling encryption at host helps protect and safeguard your data to meet your organizational security and compliance commitments. When you enable encryption at host, data stored on the VM host is encrypted at rest and flows encrypted to the Storage service.",
              "metadata": {
                "version": "1.0.0",
                "category": "HDInsight"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HDInsight/clusters"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.HDInsight/clusters/diskEncryptionProperties.encryptionAtHost",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.HDInsight/clusters/diskEncryptionProperties.encryptionAtHost",
                          "equals": false
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1fd32ebd-e4c3-4e13-a54a-d7422d4d95f6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1fd32ebd-e4c3-4e13-a54a-d7422d4d95f6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1616 - System And Communications Protection Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1616"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2006457a-48b3-4f7b-8d2e-1532287f9929",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2006457a-48b3-4f7b-8d2e-1532287f9929"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1650 - Public Key Infrastructure Certificates",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1650"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/201d3740-bd16-4baf-b4b8-7cda352228b7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "201d3740-bd16-4baf-b4b8-7cda352228b7"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Web ports should be restricted on Network Security Groups associated to your VM",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure security center has discovered that some of your virtual machines are running web applications, and the NSGs associated to these virtual machines are overly permissive with regards to the web application ports",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "unprotectedWebApplication",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/201ea587-7c90-41c3-910f-c280ae01cfd6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "201ea587-7c90-41c3-910f-c280ae01cfd6"
          },
          {
            "properties": {
              "displayName": "VM Image Builder templates should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your VM Image Builder building resources, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/virtual-machines/linux/image-builder-networking#deploy-using-an-existing-vnet.",
              "metadata": {
                "version": "1.1.0",
                "category": "VM Image Builder"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.VirtualMachineImages/imageTemplates"
                    },
                    {
                      "field": "Microsoft.VirtualMachineImages/imageTemplates/vmProfile.vnetConfig",
                      "exists": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2154edb9-244f-4741-9970-660785bccdaa",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2154edb9-244f-4741-9970-660785bccdaa"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1181 - Baseline Configuration | Retention Of Previous Configurations",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1181"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21839937-d241-4fa5-95c6-b669253d9ab9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21839937-d241-4fa5-95c6-b669253d9ab9"
          },
          {
            "properties": {
              "displayName": "VPN gateways should use only Azure Active Directory (Azure AD) authentication for point-to-site users",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling local authentication methods improves security by ensuring that VPN Gateways use only Azure Active Directory identities for authentication. Learn more about Azure AD authentication at https://docs.microsoft.com/azure/vpn-gateway/openvpn-azure-ad-tenant",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworkGateways"
                    },
                    {
                      "field": "Microsoft.Network/virtualNetworkGateways/vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
                      "exists": "true"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/virtualNetworkGateways/vpnClientConfiguration.vpnAuthenticationTypes[*]",
                        "where": {
                          "field": "Microsoft.Network/virtualNetworkGateways/vpnClientConfiguration.vpnAuthenticationTypes[*]",
                          "notcontains": "AAD"
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21a6bc25-125e-4d13-b82d-2e19b7208ab7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21a6bc25-125e-4d13-b82d-2e19b7208ab7"
          },
          {
            "properties": {
              "displayName": "Public network access should be disabled for Azure File Sync",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling the public endpoint allows you to restrict access to your Storage Sync Service resource to requests destined to approved private endpoints on your organization\u0027s network. There is nothing inherently insecure about allowing requests to the public endpoint, however, you may wish to disable it to meet regulatory, legal, or organizational policy requirements. You can disable the public endpoint for a Storage Sync Service by setting the incomingTrafficPolicy of the resource to AllowVirtualNetworksOnly.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.StorageSync/storageSyncServices"
                    },
                    {
                      "field": "Microsoft.StorageSync/storageSyncServices/incomingTrafficPolicy",
                      "notEquals": "AllowVirtualNetworksOnly"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21a8cd35-125e-4d13-b82d-2e19b7208bb7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21a8cd35-125e-4d13-b82d-2e19b7208bb7"
          },
          {
            "properties": {
              "displayName": "Azure SignalR Service should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "To improve the security of Azure SignalR Service resource, ensure that it isn\u0027t exposed to the public internet and can only be accessed from a private endpoint. Disable the public network access property as described in https://aka.ms/asrs/networkacls. This option disables access from any public address space outside the Azure IP range, and denies all logins that match IP or virtual network-based firewall rules. This reduces data leakage risks.",
              "metadata": {
                "version": "1.0.0",
                "category": "SignalR"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.SignalRService/SignalR"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.SignalRService/SignalR/networkACLs.defaultAction",
                          "equals": "Allow"
                        },
                        {
                          "field": "Microsoft.SignalRService/SignalR/networkACLs.publicNetwork.allow",
                          "exists": false
                        },
                        {
                          "count": {
                            "field": "Microsoft.SignalRService/SignalR/networkACLs.publicNetwork.allow[*]"
                          },
                          "greater": 0
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21a9766a-82a5-4747-abb5-650b6dbba6d0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21a9766a-82a5-4747-abb5-650b6dbba6d0"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1111 - Response To Audit Processing Failures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1111"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21de687c-f15e-4e51-bf8d-f35c8619965b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21de687c-f15e-4e51-bf8d-f35c8619965b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1596 - Developer Configuration Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1596"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21e25e01-0ae0-41be-919e-04ce92b8e8b8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21e25e01-0ae0-41be-919e-04ce92b8e8b8"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs configurations in \u0027Security Options - Audit\u0027",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - Audit\u0027. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsAudit",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21e2995e-683e-497a-9e81-2f42ad07050a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21e2995e-683e-497a-9e81-2f42ad07050a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1426 - Media Protection Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1426"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/21f639bc-f42b-46b1-8f40-7a2a389c291a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "21f639bc-f42b-46b1-8f40-7a2a389c291a"
          },
          {
            "properties": {
              "displayName": "[Preview]: ChangeTracking extension should be installed on your Windows virtual machine",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Install ChangeTracking Extension on Windows virtual machines to enable File Integrity Monitoring(FIM) in Azure Security Center. FIM examines operating system files, Windows registries, application software, Linux system files, and more, for changes that might indicate an attack. The extension can be installed in virtual machines and locations supported by Azure Monitoring Agent.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Security Center",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "listOfApplicableLocations": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Applicable Locations",
                    "description": "The list of locations where the policy should be applied.",
                    "strongType": "location"
                  },
                  "allowedValues": [
                    "australiasoutheast",
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus2euap",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "japaneast",
                    "koreacentral",
                    "northcentralus",
                    "northeurope",
                    "norwayeast",
                    "southcentralus",
                    "southeastasia",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westcentralus",
                    "westeurope",
                    "westus",
                    "westus2"
                  ],
                  "defaultValue": [
                    "australiasoutheast",
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus2euap",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "japaneast",
                    "koreacentral",
                    "northcentralus",
                    "northeurope",
                    "norwayeast",
                    "southcentralus",
                    "southeastasia",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westcentralus",
                    "westeurope",
                    "westus",
                    "westus2"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "location",
                      "in": "[parameters(\u0027listOfApplicableLocations\u0027)]"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "ChangeTracking-Windows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/Publisher",
                          "equals": "Microsoft.Azure.ChangeTrackingAndInventory"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/221aac80-54d8-484b-83d7-24f4feac2ce0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "221aac80-54d8-484b-83d7-24f4feac2ce0"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit API Apps that are not using custom domains",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use of custom domains protects a API app from common attacks such as phishing and other DNS-related attacks.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "api"
                        },
                        {
                          "field": "kind",
                          "equals": "apiApp"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "UsedCustomDomains",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/224da9fe-0d38-4e79-adb3-0a6e2af942ac",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "224da9fe-0d38-4e79-adb3-0a6e2af942ac"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1399 - Controlled Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1399"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2256e638-eb23-480f-9e15-6cf1af0a76b3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2256e638-eb23-480f-9e15-6cf1af0a76b3"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1221 - Least Functionality | Authorized Software / Whitelisting",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1221"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/22589a07-0007-486a-86ca-95355081ae2a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "22589a07-0007-486a-86ca-95355081ae2a"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs configurations in \u0027System Audit Policies - Account Management\u0027",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines with non-compliant settings in Group Policy category: \u0027System Audit Policies - Account Management\u0027. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesAccountManagement",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/225e937e-d32e-4713-ab74-13ce95b3519a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "225e937e-d32e-4713-ab74-13ce95b3519a"
          },
          {
            "properties": {
              "displayName": "Management ports should be closed on your virtual machines",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Open remote management ports are exposing your VM to a high level of risk from Internet-based attacks. These attacks attempt to brute force credentials to gain admin access to the machine.",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "bc303248-3d14-44c2-96a0-55f5c326b5fe",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "22730e10-96f6-4aac-ad84-9383d35b5917"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1493 - System Security Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1493"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/22b469b3-fccf-42da-aa3b-a28e6fb113ce",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "22b469b3-fccf-42da-aa3b-a28e6fb113ce"
          },
          {
            "properties": {
              "displayName": "Only secure connections to your Azure Cache for Redis should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
              "metadata": {
                "version": "1.0.0",
                "category": "Cache"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Cache/redis"
                    },
                    {
                      "field": "Microsoft.Cache/Redis/enableNonSslPort",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "22bee202-a82f-4305-9a2a-6d7f44d4dedb"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs that do not restrict the minimum password length to 14 characters",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines that do not restrict the minimum password length to 14 characters. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "2.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "MinimumPasswordLength",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "MinimumPasswordLength"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/23020aa6-1135-4be2-bae2-149982b06eca",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "23020aa6-1135-4be2-bae2-149982b06eca"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1256 - Contingency Plan | Identify Critical Assets",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1256"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/232ab24b-810b-4640-9019-74a7d0d6a980",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "232ab24b-810b-4640-9019-74a7d0d6a980"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Service Bus should use a virtual network service endpoint",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy audits any Service Bus not configured to use a virtual network service endpoint. The resource type Microsoft.ServiceBus/namespaces/virtualNetworkRules is deprecated in the latest API version.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Network",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.ServiceBus/namespaces"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.ServiceBus/namespaces/virtualNetworkRules",
                    "existenceCondition": {
                      "field": "Microsoft.ServiceBus/namespaces/virtualNetworkRules/virtualNetworkSubnetId",
                      "exists": "true"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/235359c5-7c52-4b82-9055-01c75cf9f60e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "235359c5-7c52-4b82-9055-01c75cf9f60e"
          },
          {
            "properties": {
              "displayName": "Configure Azure Defender for DNS to be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for DNS provides an additional layer of protection for your cloud resources by continuously monitoring all DNS queries from your Azure resources. Azure Defender alerts you about suspicious activity at the DNS layer. Learn more about the capabilities of Azure Defender for DNS at https://aka.ms/defender-for-dns . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center\u0027s pricing page: https://aka.ms/pricing-security-center .",
              "metadata": {
                "version": "1.0.1",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "Dns",
                    "deploymentScope": "subscription",
                    "existenceScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ],
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    },
                    "deployment": {
                      "location": "westeurope",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {},
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {},
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Security/pricings",
                              "apiVersion": "2018-06-01",
                              "name": "Dns",
                              "properties": {
                                "pricingTier": "Standard"
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2370a3c1-4a25-4283-a91a-c9c1a145fb2f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2370a3c1-4a25-4283-a91a-c9c1a145fb2f"
          },
          {
            "properties": {
              "displayName": "Audit Windows machines that do not have a minimum password age of 1 day",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if Windows machines that do not have a minimum password age of 1 day",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "MinimumPasswordAge",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "MinimumPasswordAge",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/237b38db-ca4d-4259-9e47-7882441ca2c0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "237b38db-ca4d-4259-9e47-7882441ca2c0"
          },
          {
            "properties": {
              "displayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Stream Analytics to stream to a regional Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy_logAnalytics"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "False"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.StreamAnalytics/streamingjobs"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters(\u0027profileName\u0027)]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters(\u0027metricsEnabled\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            },
                            "metricsEnabled": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            },
                            "profileName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, parameters(\u0027profileName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters(\u0027logAnalytics\u0027)]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters(\u0027metricsEnabled\u0027)]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Execution",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Authoring",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters(\u0027metricsEnabled\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          },
                          "profileName": {
                            "value": "[parameters(\u0027profileName\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/237e0f7e-b0e8-4ec4-ad46-8c12cb66d673",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "237e0f7e-b0e8-4ec4-ad46-8c12cb66d673"
          },
          {
            "properties": {
              "displayName": "Configure Azure Automation accounts to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for Azure Automation account so that it isn\u0027t accessible over the public internet. This configuration helps protect them against data leakage risks. You can limit exposure of the your Automation account resources by creating private endpoints instead. Learn more at: https://aka.ms/privateendpoints.",
              "metadata": {
                "category": "Automation",
                "version": "1.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Automation/automationAccounts"
                    },
                    {
                      "field": "Microsoft.Automation/automationAccounts/publicNetworkAccess",
                      "notEquals": false
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "operations": [
                      {
                        "operation": "addOrReplace",
                        "field": "Microsoft.Automation/automationAccounts/publicNetworkAccess",
                        "value": false
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/23b36a7c-9d26-4288-a8fd-c1d2fa284d8c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "23b36a7c-9d26-4288-a8fd-c1d2fa284d8c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1268 - Alternate Storage Site",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1268"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/23f6e984-3053-4dfc-ab48-543b764781f5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "23f6e984-3053-4dfc-ab48-543b764781f5"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1122 - Audit Review, Analysis, And Reporting | Permitted Actions",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1122"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/243ec95e-800c-49d4-ba52-1fdd9f6b8b57",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "243ec95e-800c-49d4-ba52-1fdd9f6b8b57"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1231 - Configuration Management Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1231"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/244e0c05-cc45-4fe7-bf36-42dcf01f457d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "244e0c05-cc45-4fe7-bf36-42dcf01f457d"
          },
          {
            "properties": {
              "displayName": "Resource logs in Azure Kubernetes Service should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Kubernetes Service\u0027s resource logs can help recreate activity trails when investigating security incidents. Enable it to make sure the logs will exist when needed",
              "metadata": {
                "version": "1.0.0",
                "category": "Kubernetes"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "requiredRetentionDays": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Required retention (days)",
                    "description": "The required resource logs retention (in days)"
                  },
                  "defaultValue": "365"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "existenceCondition": {
                      "count": {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                        "where": {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                      "equals": "0"
                                    },
                                    {
                                      "value": "[padLeft(current(\u0027Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days\u0027), 3, \u00270\u0027)]",
                                      "greaterOrEquals": "[padLeft(parameters(\u0027requiredRetentionDays\u0027), 3, \u00270\u0027)]"
                                    }
                                  ]
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                      "notEquals": "true"
                                    },
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                      "exists": false
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/245fc9df-fa96-4414-9a0b-3738c2f7341c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "245fc9df-fa96-4414-9a0b-3738c2f7341c"
          },
          {
            "properties": {
              "displayName": "Configure Azure Activity logs to stream to specified Log Analytics workspace",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Deploys the diagnostic settings for Azure Activity to stream subscriptions audit logs to a Log Analytics workspace to monitor subscription-level events",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Primary Log Analytics workspace",
                    "description": "If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "deploymentScope": "Subscription",
                    "existenceScope": "Subscription",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters(\u0027logAnalytics\u0027)]"
                        }
                      ]
                    },
                    "deployment": {
                      "location": "northeurope",
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "logAnalytics": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "subscriptionToLa",
                              "type": "Microsoft.Insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "location": "Global",
                              "properties": {
                                "workspaceId": "[parameters(\u0027logAnalytics\u0027)]",
                                "logs": [
                                  {
                                    "category": "Administrative",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Security",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "ServiceHealth",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Alert",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Recommendation",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Policy",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Autoscale",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "ResourceHealth",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2465583e-4e78-4c15-b6be-a36cbc7c8b0f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1082 - Information Sharing",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1082"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/24d480ef-11a0-4b1b-8e70-4e023bf2be23",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "24d480ef-11a0-4b1b-8e70-4e023bf2be23"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs that do not have a maximum password age of 70 days",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines that do not have a maximum password age of 70 days. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "MaximumPasswordAge",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/24dde96d-f0b1-425e-884f-4a1421e2dcdc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "24dde96d-f0b1-425e-884f-4a1421e2dcdc"
          },
          {
            "properties": {
              "displayName": "Infrastructure encryption should be enabled for Azure Database for PostgreSQL servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable infrastructure encryption for Azure Database for PostgreSQL servers to have higher level of assurance that the data is secure. When infrastructure encryption is enabled, the data at rest is encrypted twice using FIPS 140-2 compliant Microsoft managed keys",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforPostgreSQL/servers"
                    },
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/infrastructureEncryption",
                      "notEquals": "Enabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/24fba194-95d6-48c0-aea7-f65bf859c598",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "24fba194-95d6-48c0-aea7-f65bf859c598"
          },
          {
            "properties": {
              "displayName": "Deploy Diagnostic Settings for Data Lake Storage Gen1 to Log Analytics workspace",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Data Lake Storage Gen1 to stream to a regional Log Analytics workspace when any Data Lake Storage Gen1 which is missing this diagnostic settings is created or updated.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy_logAnalytics"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "False"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DataLakeStore/accounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters(\u0027profileName\u0027)]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters(\u0027metricsEnabled\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            },
                            "metricsEnabled": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            },
                            "profileName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DataLakeStore/accounts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, parameters(\u0027profileName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters(\u0027logAnalytics\u0027)]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters(\u0027metricsEnabled\u0027)]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Audit",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  },
                                  {
                                    "category": "Requests",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters(\u0027metricsEnabled\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          },
                          "profileName": {
                            "value": "[parameters(\u0027profileName\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/25763a0a-5783-4f14-969e-79d4933eb74b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "25763a0a-5783-4f14-969e-79d4933eb74b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1372 - Incident Reporting",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1372"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/25b96717-c912-4c00-9143-4e487f411726",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "25b96717-c912-4c00-9143-4e487f411726"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1038 - Least Privilege | Privileged Accounts",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1038"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/26692e88-71b7-4a5f-a8ac-9f31dd05bd8e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "26692e88-71b7-4a5f-a8ac-9f31dd05bd8e"
          },
          {
            "properties": {
              "displayName": "Configure Azure HDInsight clusters with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints connect your virtual networks to Azure services without a public IP address at the source or destination. By mapping private endpoints to Azure HDInsight clusters, you can reduce data leakage risks. Learn more about private links at: https://aka.ms/hdi.pl.",
              "metadata": {
                "version": "1.0.0",
                "category": "HDInsight"
              },
              "parameters": {
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private endpoint subnet ID",
                    "description": "A subnet with private endpoint network policies disabled.",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                },
                "groupId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Group ID",
                    "description": "Target group id (sub resource type) for the private endpoint."
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HDInsight/clusters"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.HDInsight/clusters/networkProperties.privateLink",
                          "equals": "Enabled"
                        },
                        {
                          "count": {
                            "field": "Microsoft.HDInsight/clusters/privateLinkConfigurations[*]"
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.HDInsight/clusters/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.HDInsight/clusters/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "groupId": {
                            "value": "[parameters(\u0027groupId\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "serviceId": {
                              "type": "string"
                            },
                            "groupId": {
                              "type": "string"
                            },
                            "privateEndpointSubnetId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "privateEndpointName": "[concat(\u0027pe-\u0027,substring(parameters(\u0027name\u0027),0,min(length(parameters(\u0027name\u0027)),50)),\u0027-\u0027,uniquestring(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027privateEndpointName\u0027)]",
                              "apiVersion": "2020-06-01",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "serviceId": {
                                      "type": "string"
                                    },
                                    "privateEndpointSubnetId": {
                                      "type": "string"
                                    },
                                    "groupId": {
                                      "type": "string"
                                    },
                                    "subnetLocation": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "privateEndpointName": "[deployment().name]"
                                  },
                                  "resources": [
                                    {
                                      "name": "[variables(\u0027privateEndpointName\u0027)]",
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2020-07-01",
                                      "location": "[parameters(\u0027subnetLocation\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "subnet": {
                                          "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                        },
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[variables(\u0027privateEndpointName\u0027)]",
                                            "properties": {
                                              "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                              "groupIds": [
                                                "[parameters(\u0027groupId\u0027)]"
                                              ],
                                              "requestMessage": "Request to auto approve."
                                            }
                                          }
                                        ],
                                        "manualPrivateLinkServiceConnections": []
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "serviceId": {
                                    "value": "[parameters(\u0027serviceId\u0027)]"
                                  },
                                  "groupId": {
                                    "value": "[parameters(\u0027groupId\u0027)]"
                                  },
                                  "privateEndpointSubnetId": {
                                    "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                  },
                                  "subnetLocation": {
                                    "value": "[reference(first(take(split(parameters(\u0027privateEndpointSubnetId\u0027),\u0027/subnets\u0027),1)),\u00272020-07-01\u0027,\u0027Full\u0027).location]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2676090a-4baf-46ac-9085-4ac02cc50e3e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2676090a-4baf-46ac-9085-4ac02cc50e3e"
          },
          {
            "properties": {
              "displayName": "Endpoint protection solution should be installed on virtual machine scale sets",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit the existence and health of an endpoint protection solution on your virtual machines scale sets, to protect them from threats and vulnerabilities.",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "e71020c2-860c-3235-cd39-04f3f8c936d2",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "26a828e1-e88f-464e-bbb3-c134a282b9de"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1649 - Collaborative Computing Devices",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1649"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/26d292cc-b0b8-4c29-9337-68abc758bf7b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "26d292cc-b0b8-4c29-9337-68abc758bf7b"
          },
          {
            "properties": {
              "displayName": "Metric alert rules should be configured on Batch accounts",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit configuration of metric alert rules on Batch account to enable the required metric",
              "metadata": {
                "version": "1.0.0",
                "category": "Batch"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "metricName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Metric name",
                    "description": "The metric name that an alert rule must be enabled on"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Batch/batchAccounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/alertRules",
                    "existenceScope": "Subscription",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/alertRules/isEnabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/alertRules/condition.dataSource.metricName",
                          "equals": "[parameters(\u0027metricName\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/alertRules/condition.dataSource.resourceUri",
                          "equals": "[concat(\u0027/subscriptions/\u0027, subscription().subscriptionId, \u0027/resourcegroups/\u0027, resourceGroup().name, \u0027/providers/Microsoft.Batch/batchAccounts/\u0027, field(\u0027name\u0027))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/26ee67a2-f81a-4ba8-b9ce-8550bd5ee1a7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "26ee67a2-f81a-4ba8-b9ce-8550bd5ee1a7"
          },
          {
            "properties": {
              "displayName": "Configure virtual machines to be onboarded to Azure Automanage",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Automanage enrolls, configures, and monitors virtual machines with best practice as defined in the Microsoft Cloud Adoption Framework for Azure. Use this policy to apply Automanage to your selected scope.",
              "metadata": {
                "version": "4.1.0",
                "category": "Automanage"
              },
              "parameters": {
                "automanageAccount": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Automanage account",
                    "description": "The Automanage account is an Azure managed identity under which virtual machine operations are performed. If this account is outside of the scope of the assignment you must manually grant \u0027Contributor\u0027 permissions (or similar) on the account to the policy assignment\u0027s principal ID.",
                    "strongType": "Microsoft.Automanage/accounts",
                    "assignPermissions": true
                  }
                },
                "configurationProfileAssignment": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Configuration profile",
                    "description": "The management services provided are based on whether the machine is intended to be used in a dev/test environment or production."
                  },
                  "allowedValues": [
                    "Azure virtual machine best practices \u2013 Production",
                    "Azure virtual machine best practices \u2013 Dev/test"
                  ],
                  "defaultValue": "Azure virtual machine best practices \u2013 Production"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "location",
                      "in": [
                        "eastus",
                        "eastus2",
                        "westus",
                        "westus2",
                        "centralus",
                        "southcentralus",
                        "westcentralus",
                        "northeurope",
                        "westeurope",
                        "canadacentral",
                        "japaneast",
                        "uksouth",
                        "australiaeast",
                        "australiasoutheast",
                        "southeastasia"
                      ]
                    },
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "dsvm-windows"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.id",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.sku",
                              "exists": "false"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "microsoft-aks",
                            "qubole-inc",
                            "datastax",
                            "couchbase",
                            "scalegrid",
                            "checkpoint",
                            "paloaltonetworks",
                            "debian"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "CentOS*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "CentOS*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "8*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-HA",
                                "RHEL-SAP",
                                "RHEL-SAP-APPS",
                                "RHEL-SAP-HA",
                                "RHEL-SAP-HANA",
                                "rhel-raw"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-HA",
                                "RHEL-SAP",
                                "RHEL-SAP-APPS",
                                "RHEL-SAP-HA",
                                "RHEL-SAP-HANA",
                                "rhel-raw"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "8*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "osa",
                                "rhel-byos"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "cis-centos-7-l1",
                                "cis-centos-7-v2-1-1-l1",
                                "cis-nginx-centos-7-v1-1-0-l1",
                                "cis-oracle-linux-7-v2-0-0-l1",
                                "cis-postgresql-11-centos-linux-7-level-1",
                                "cis-rhel-7-l2",
                                "cis-rhel-7-v2-2-0-l1",
                                "cis-suse-linux-12-v2-0-0-l1",
                                "cis-ubuntu-linux-1604-v1-0-0-l1",
                                "cis-ubuntu-linux-1804-l1"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "SLES*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "11*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "SLES*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "15*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "UbuntuServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "12*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "linux-data-science-vm-ubuntu",
                                "azureml"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-altus-centos-os"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Linux*"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.id",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.sku",
                              "exists": "false"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.Automanage/configurationProfileAssignments",
                    "name": "default",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Automanage/configurationProfileAssignments/configurationProfile",
                          "equals": "[parameters(\u0027configurationProfileAssignment\u0027)]"
                        },
                        {
                          "field": "Microsoft.Automanage/configurationProfileAssignments/accountId",
                          "equals": "[parameters(\u0027automanageAccount\u0027)]"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "machineName": {
                            "value": "[field(\u0027Name\u0027)]"
                          },
                          "automanageAccount": {
                            "value": "[parameters(\u0027automanageAccount\u0027)]"
                          },
                          "configurationProfileAssignment": {
                            "value": "[parameters(\u0027configurationProfileAssignment\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "machineName": {
                              "type": "String"
                            },
                            "automanageAccount": {
                              "type": "string"
                            },
                            "configurationProfileAssignment": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/providers/configurationProfileAssignments",
                              "apiVersion": "2020-06-30-preview",
                              "name": "[concat(parameters(\u0027machineName\u0027), \u0027/Microsoft.Automanage/\u0027, \u0027default\u0027)]",
                              "properties": {
                                "configurationProfile": "[parameters(\u0027configurationProfileAssignment\u0027)]",
                                "accountId": "[parameters(\u0027automanageAccount\u0027)]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/270610db-8c04-438a-a739-e8e6745b22d3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "270610db-8c04-438a-a739-e8e6745b22d3"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1396 - Controlled Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1396"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/276af98f-4ff9-4e69-99fb-c9b2452fb85f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "276af98f-4ff9-4e69-99fb-c9b2452fb85f"
          },
          {
            "properties": {
              "displayName": "Flow logs should be enabled for every network security group",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit for flow log resources to verify if flow log status is enabled. Enabling flow logs allows to log information about IP traffic flowing through network security group. It can be used for optimizing network flows, monitoring throughput, verifying compliance, detecting intrusions and more.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkWatchers/flowLogs"
                    },
                    {
                      "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                      "equals": false
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/27960feb-a23c-4577-8d36-ef8b5f35e0be",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "27960feb-a23c-4577-8d36-ef8b5f35e0be"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1074 - Access Control For Mobile Devices",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1074"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/27a69937-af92-4198-9b86-08d355c7e59a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "27a69937-af92-4198-9b86-08d355c7e59a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1527 - Access Agreements",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Personnel Security control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1527"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2823de66-332f-4bfd-94a3-3eb036cd3b67",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2823de66-332f-4bfd-94a3-3eb036cd3b67"
          },
          {
            "properties": {
              "displayName": "Deploy default Microsoft IaaSAntimalware extension for Windows Server",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy deploys a Microsoft IaaSAntimalware extension with a default configuration when a VM is not configured with the antimalware extension.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "MicrosoftWindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "equals": "WindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "in": [
                        "2008-R2-SP1",
                        "2008-R2-SP1-smalldisk",
                        "2012-Datacenter",
                        "2012-Datacenter-smalldisk",
                        "2012-R2-Datacenter",
                        "2012-R2-Datacenter-smalldisk",
                        "2016-Datacenter",
                        "2016-Datacenter-Server-Core",
                        "2016-Datacenter-Server-Core-smalldisk",
                        "2016-Datacenter-smalldisk",
                        "2016-Datacenter-with-Containers",
                        "2016-Datacenter-with-RDSH",
                        "2019-Datacenter",
                        "2019-Datacenter-Core",
                        "2019-Datacenter-Core-smalldisk",
                        "2019-Datacenter-Core-with-Containers",
                        "2019-Datacenter-Core-with-Containers-smalldisk",
                        "2019-Datacenter-smalldisk",
                        "2019-Datacenter-with-Containers",
                        "2019-Datacenter-with-Containers-smalldisk"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "IaaSAntimalware"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Security"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "ExclusionsPaths": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Semicolon delimited list of file paths or locations to exclude from scanning"
                              }
                            },
                            "ExclusionsExtensions": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Semicolon delimited list of file extensions to exclude from scanning"
                              }
                            },
                            "ExclusionsProcesses": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Semicolon delimited list of process names to exclude from scanning"
                              }
                            },
                            "RealtimeProtectionEnabled": {
                              "type": "string",
                              "defaultValue": "true",
                              "metadata": {
                                "description": "Indicates whether or not real time protection is enabled (default is true)"
                              }
                            },
                            "ScheduledScanSettingsIsEnabled": {
                              "type": "string",
                              "defaultValue": "false",
                              "metadata": {
                                "description": "Indicates whether or not custom scheduled scan settings are enabled (default is false)"
                              }
                            },
                            "ScheduledScanSettingsScanType": {
                              "type": "string",
                              "defaultValue": "Quick",
                              "metadata": {
                                "description": "Indicates whether scheduled scan setting type is set to Quick or Full (default is Quick)"
                              }
                            },
                            "ScheduledScanSettingsDay": {
                              "type": "string",
                              "defaultValue": "7",
                              "metadata": {
                                "description": "Day of the week for scheduled scan (1-Sunday, 2-Monday, ..., 7-Saturday)"
                              }
                            },
                            "ScheduledScanSettingsTime": {
                              "type": "string",
                              "defaultValue": "120",
                              "metadata": {
                                "description": "When to perform the scheduled scan, measured in minutes from midnight (0-1440). For example: 0 = 12AM, 60 = 1AM, 120 = 2AM."
                              }
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027),\u0027/IaaSAntimalware\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2017-12-01",
                              "properties": {
                                "publisher": "Microsoft.Azure.Security",
                                "type": "IaaSAntimalware",
                                "typeHandlerVersion": "1.3",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "AntimalwareEnabled": true,
                                  "RealtimeProtectionEnabled": "[parameters(\u0027RealtimeProtectionEnabled\u0027)]",
                                  "ScheduledScanSettings": {
                                    "isEnabled": "[parameters(\u0027ScheduledScanSettingsIsEnabled\u0027)]",
                                    "day": "[parameters(\u0027ScheduledScanSettingsDay\u0027)]",
                                    "time": "[parameters(\u0027ScheduledScanSettingsTime\u0027)]",
                                    "scanType": "[parameters(\u0027ScheduledScanSettingsScanType\u0027)]"
                                  },
                                  "Exclusions": {
                                    "Extensions": "[parameters(\u0027ExclusionsExtensions\u0027)]",
                                    "Paths": "[parameters(\u0027ExclusionsPaths\u0027)]",
                                    "Processes": "[parameters(\u0027ExclusionsProcesses\u0027)]"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "RealtimeProtectionEnabled": {
                            "value": "true"
                          },
                          "ScheduledScanSettingsIsEnabled": {
                            "value": "true"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2835b622-407b-4114-9198-6f7064cbe0dc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2835b622-407b-4114-9198-6f7064cbe0dc"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1342 - Authenticator Management | Hardware Token-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1342"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/283a4e29-69d5-4c94-b99e-29acf003c899",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "283a4e29-69d5-4c94-b99e-29acf003c899"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1436 - Media Transport",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1436"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/28aab8b4-74fd-4b7c-9080-5a7be525d574",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "28aab8b4-74fd-4b7c-9080-5a7be525d574"
          },
          {
            "properties": {
              "displayName": "Configure Azure SQL Server to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling the public network access property shuts down public connectivity such that Azure SQL Server can only be accessed from a private endpoint. This configuration disables the public network access for all databases under the Azure SQL Server.",
              "metadata": {
                "category": "SQL",
                "version": "1.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "field": "Microsoft.Sql/servers/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437"
                    ],
                    "operations": [
                      {
                        "operation": "addOrReplace",
                        "field": "Microsoft.Sql/servers/publicNetworkAccess",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/28b0b1e5-17ba-4963-a7a4-5a1ab4400a0b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "28b0b1e5-17ba-4963-a7a4-5a1ab4400a0b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1224 - Information System Component Inventory | Updates During Installations / Removals",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1224"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/28cfa30b-7f72-47ce-ba3b-eed26c8d2c82",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "28cfa30b-7f72-47ce-ba3b-eed26c8d2c82"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1148 - Security Assessments | Independent Assessors",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1148"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/28e62650-c7c2-4786-bdfa-17edc1673902",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "28e62650-c7c2-4786-bdfa-17edc1673902"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1418 - Nonlocal Maintenance | Comparable Security / Sanitization",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1418"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/28e633fd-284e-4ea7-88b4-02ca157ed713",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "28e633fd-284e-4ea7-88b4-02ca157ed713"
          },
          {
            "properties": {
              "displayName": "Azure Defender for App Service should be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for App Service leverages the scale of the cloud, and the visibility that Azure has as a cloud provider, to monitor for common web app attacks.",
              "metadata": {
                "version": "1.0.3",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "AppServices",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2913021d-f2fd-4f3d-b958-22354e2bdbcb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2913021d-f2fd-4f3d-b958-22354e2bdbcb"
          },
          {
            "properties": {
              "displayName": "Configure BotService resources with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to your BotService resource, you can reduce data leakage risks.",
              "metadata": {
                "version": "1.0.0",
                "category": "Bot Service"
              },
              "parameters": {
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private Endpoint Subnet Id",
                    "description": "A subnet with private endpoint network policies disabled.",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                },
                "privateEndpointGroupId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private Endpoint Group Id",
                    "description": "A group Id for the private endpoint for a BotService resource."
                  },
                  "allowedValues": [
                    "Bot",
                    "Token"
                  ],
                  "defaultValue": "Bot"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.BotService/botServices"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.BotService/botServices/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.BotService/botServices/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          },
                          "privateEndpointGroupId": {
                            "value": "[parameters(\u0027privateEndpointGroupId\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "String"
                            },
                            "serviceId": {
                              "type": "String"
                            },
                            "privateEndpointSubnetId": {
                              "type": "String"
                            },
                            "privateEndpointGroupId": {
                              "type": "String"
                            }
                          },
                          "variables": {
                            "privateEndpointName": "[concat(\u0027pe-\u0027,substring(parameters(\u0027name\u0027),0,min(length(parameters(\u0027name\u0027)),50)),\u0027-\u0027,uniquestring(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027privateEndpointName\u0027)]",
                              "apiVersion": "2020-06-01",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "serviceId": {
                                      "type": "string"
                                    },
                                    "privateEndpointSubnetId": {
                                      "type": "string"
                                    },
                                    "privateEndpointGroupId": {
                                      "type": "String"
                                    },
                                    "subnetLocation": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "privateEndpointName": "[deployment().name]"
                                  },
                                  "resources": [
                                    {
                                      "name": "[variables(\u0027privateEndpointName\u0027)]",
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2020-07-01",
                                      "location": "[parameters(\u0027subnetLocation\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "subnet": {
                                          "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                        },
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[variables(\u0027privateEndpointName\u0027)]",
                                            "properties": {
                                              "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                              "groupIds": [
                                                "[parameters(\u0027privateEndpointGroupId\u0027)]"
                                              ],
                                              "requestMessage": "autoapprove"
                                            }
                                          }
                                        ],
                                        "manualPrivateLinkServiceConnections": []
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "serviceId": {
                                    "value": "[parameters(\u0027serviceId\u0027)]"
                                  },
                                  "privateEndpointSubnetId": {
                                    "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                  },
                                  "privateEndpointGroupId": {
                                    "value": "[parameters(\u0027privateEndpointGroupId\u0027)]"
                                  },
                                  "subnetLocation": {
                                    "value": "[reference(first(take(split(parameters(\u0027privateEndpointSubnetId\u0027),\u0027/subnets\u0027),1)),\u00272020-07-01\u0027,\u0027Full\u0027).location]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/29261f8e-efdb-4255-95b8-8215414515d6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "29261f8e-efdb-4255-95b8-8215414515d6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1634 - Boundary Protection | Prevent Unauthorized Exfiltration",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1634"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/292a7c44-37fa-4c68-af7c-9d836955ded2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "292a7c44-37fa-4c68-af7c-9d836955ded2"
          },
          {
            "properties": {
              "displayName": "Service Bus Premium namespaces should use a customer-managed key for encryption",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Service Bus supports the option of encrypting data at rest with either Microsoft-managed keys (default) or customer-managed keys. Choosing to encrypt data using customer-managed keys enables you to assign, rotate, disable, and revoke access to the keys that Service Bus will use to encrypt data in your namespace. Note that Service Bus only supports encryption with customer-managed keys for premium namespaces.",
              "metadata": {
                "version": "1.0.0",
                "category": "Service Bus"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ServiceBus/namespaces"
                    },
                    {
                      "field": "Microsoft.ServiceBus/namespaces/sku.tier",
                      "equals": "Premium"
                    },
                    {
                      "not": {
                        "field": "Microsoft.ServiceBus/namespaces/encryption.keySource",
                        "equals": "Microsoft.Keyvault"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/295fc8b1-dc9f-4f53-9c61-3f313ceab40a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "295fc8b1-dc9f-4f53-9c61-3f313ceab40a"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs configurations in \u0027Security Options - User Account Control\u0027",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - User Account Control\u0027. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsUserAccountControl",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/29829ec2-489d-4925-81b7-bda06b1718e0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "29829ec2-489d-4925-81b7-bda06b1718e0"
          },
          {
            "properties": {
              "displayName": "Append a tag and its value to resources",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Appends the specified tag and value when any resource which is missing this tag is created or updated. Does not modify the tags of resources created before this policy was applied until those resources are changed. Does not apply to resource groups. New \u0027modify\u0027 effect policies are available that support remediation of tags on existing resources (see https://aka.ms/modifydoc).",
              "metadata": {
                "version": "1.0.1",
                "category": "Tags"
              },
              "parameters": {
                "tagName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Name",
                    "description": "Name of the tag, such as \u0027environment\u0027"
                  }
                },
                "tagValue": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Value",
                    "description": "Value of the tag, such as \u0027production\u0027"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                  "exists": "false"
                },
                "then": {
                  "effect": "append",
                  "details": [
                    {
                      "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                      "value": "[parameters(\u0027tagValue\u0027)]"
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2a0e14a6-b0a6-4fab-991a-187a4f81c498",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2a0e14a6-b0a6-4fab-991a-187a4f81c498"
          },
          {
            "properties": {
              "displayName": "Storage accounts should restrict network access using virtual network rules",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Protect your storage accounts from potential threats using virtual network rules as a preferred method instead of IP-based filtering. Disabling IP-based filtering prevents public IPs from accessing your storage accounts.",
              "metadata": {
                "version": "1.0.1",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the audit policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                          "notEquals": "Deny"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2a1a9cdf-e04d-429a-8416-3bfb72a1b26f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1219 - Least Functionality | Authorized Software / Whitelisting",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1219"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2a39ac75-622b-4c88-9a3f-45b7373f7ef7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2a39ac75-622b-4c88-9a3f-45b7373f7ef7"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027System Audit Policies - Policy Change\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027System Audit Policies - Policy Change\u0027 for auditing changes to system audit policies. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SystemAuditPoliciesPolicyChange",
                  "version": "1.*",
                  "configurationParameter": {
                    "AuditAuthenticationPolicyChange": "Audit Authentication Policy Change;ExpectedValue",
                    "AuditAuthorizationPolicyChange": "Audit Authorization Policy Change;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "AuditAuthenticationPolicyChange": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Authentication Policy Change",
                    "description": "Specifies whether audit events are generated when changes are made to authentication policy. This setting is useful for tracking changes in domain-level and forest-level trust and privileges that are granted to user accounts or groups."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "Success"
                },
                "AuditAuthorizationPolicyChange": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Authorization Policy Change",
                    "description": "Specifies whether audit events are generated for assignment and removal of user rights in user right policies, changes in security token object permission, resource attributes changes and Central Access Policy changes for file system objects."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "No Auditing"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesPolicyChange",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Audit Authentication Policy Change;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditAuthenticationPolicyChange\u0027), \u0027,\u0027, \u0027Audit Authorization Policy Change;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditAuthorizationPolicyChange\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2a7a701e-dff3-4da9-9ec5-42cb98594c0b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2a7a701e-dff3-4da9-9ec5-42cb98594c0b"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure Azure Defender for SQL agent on virtual machine",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure Windows machines to automatically install the Azure Defender for SQL agent where the Azure Monitor Agent is installed. Security Center collects events from the agent and uses them to provide security alerts and tailored hardening tasks (recommendations). Creates a resource group and Log Analytics workspace in the same region as the machine. Target virtual machines must be in a supported location.",
              "metadata": {
                "category": "Security Center",
                "version": "1.0.0-preview",
                "preview": true
              },
              "parameters": {
                "enableCollectionOfSqlQueriesForSecurityResearch": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Enable collection of SQL queries for security research",
                    "description": "Enable or disable the collection of SQL queries for security research."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": true
                },
                "azureDefenderForSqlExtensionTypeToInstall": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Defender For SQL extension type to install",
                    "description": "The type of the Azure Defender For SQL extension needed to be installed."
                  },
                  "allowedValues": [
                    "AdvancedThreatProtection.Windows",
                    "VulnerabilityAssessment.Windows"
                  ]
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines/extensions"
                    },
                    {
                      "field": "location",
                      "in": [
                        "australiacentral",
                        "australiaeast",
                        "australiasoutheast",
                        "brazilsouth",
                        "canadacentral",
                        "centralindia",
                        "centralus",
                        "eastasia",
                        "eastus2euap",
                        "eastus",
                        "eastus2",
                        "francecentral",
                        "germanywestcentral",
                        "japaneast",
                        "koreacentral",
                        "northcentralus",
                        "northeurope",
                        "norwayeast",
                        "southcentralus",
                        "southeastasia",
                        "switzerlandnorth",
                        "switzerlandwest",
                        "southafricanorth",
                        "swedencentral",
                        "uaenorth",
                        "uksouth",
                        "ukwest",
                        "westcentralus",
                        "westeurope",
                        "westus",
                        "westus2"
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "AzureMonitorWindowsAgent"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Monitor"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(first(split(field(\u0027fullName\u0027), \u0027/\u0027)), \u0027/Microsoft.Azure.AzureDefenderForSQL.\u0027, parameters(\u0027azureDefenderForSqlExtensionTypeToInstall\u0027))]",
                    "deploymentScope": "subscription",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "[parameters(\u0027azureDefenderForSqlExtensionTypeToInstall\u0027)]"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.AzureDefenderForSQL"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "in": [
                            "Succeeded",
                            "Provisioning succeeded"
                          ]
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "location": "eastus",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "resourceGroup": {
                            "value": "[resourceGroup().name]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "vmName": {
                            "value": "[first(split(field(\u0027fullName\u0027), \u0027/\u0027))]"
                          },
                          "enableCollectionOfSqlQueriesForSecurityResearch": {
                            "value": "[parameters(\u0027enableCollectionOfSqlQueriesForSecurityResearch\u0027)]"
                          },
                          "azureDefenderForSqlExtensionTypeToInstall": {
                            "value": "[parameters(\u0027azureDefenderForSqlExtensionTypeToInstall\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceGroup": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "enableCollectionOfSqlQueriesForSecurityResearch": {
                              "type": "bool"
                            },
                            "azureDefenderForSqlExtensionTypeToInstall": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "locationLongNameToShortMap": {
                              "australiacentral": "CAU",
                              "australiaeast": "EAU",
                              "australiasoutheast": "SEAU",
                              "brazilsouth": "CQ",
                              "canadacentral": "CCA",
                              "centralindia": "CIN",
                              "centralus": "CUS",
                              "eastasia": "EA",
                              "eastus2euap": "eus2p",
                              "eastus": "EUS",
                              "eastus2": "EUS2",
                              "francecentral": "PAR",
                              "germanywestcentral": "DEWC",
                              "japaneast": "EJP",
                              "koreacentral": "SE",
                              "northcentralus": "NCUS",
                              "northeurope": "NEU",
                              "norwayeast": "NOE",
                              "southcentralus": "SCUS",
                              "southeastasia": "SEA",
                              "switzerlandnorth": "CHN",
                              "switzerlandwest": "CHW",
                              "southafricanorth": "JNB",
                              "swedencentral": "SEC",
                              "uaenorth": "DXB",
                              "uksouth": "SUK",
                              "ukwest": "WUK",
                              "westcentralus": "WCUS",
                              "westeurope": "WEU",
                              "westus": "WUS",
                              "westus2": "WUS2"
                            },
                            "locationCode": "[variables(\u0027locationLongNameToShortMap\u0027)[parameters(\u0027location\u0027)]]",
                            "subscriptionId": "[subscription().subscriptionId]",
                            "defaultRGName": "[concat(\u0027DefaultResourceGroup-\u0027, variables(\u0027locationCode\u0027))]",
                            "defaultRGLocation": "[parameters(\u0027location\u0027)]",
                            "workspaceName": "[concat(\u0027defaultWorkspace-\u0027, variables(\u0027subscriptionId\u0027),\u0027-\u0027, variables(\u0027locationCode\u0027))]",
                            "dcrName": "Microsoft-AzureDefenderForSQL",
                            "dcrId": "[concat(\u0027/subscriptions/\u0027, variables(\u0027subscriptionId\u0027), \u0027/resourceGroups/\u0027, variables(\u0027defaultRGName\u0027), \u0027/providers/Microsoft.Insights/dataCollectionRules/\u0027, variables(\u0027dcrName\u0027))]",
                            "dcraName": "[concat(parameters(\u0027vmName\u0027),\u0027/Microsoft.Insights/AzureDefenderForSQL-RulesAssociation\u0027)]",
                            "deployAzureDefenderForSqlExtensions": "[concat(\u0027deployAzureDefenderForSqlExtensions-\u0027, uniqueString(deployment().name))]",
                            "deployDefaultAscResourceGroup": "[concat(\u0027deployDefaultAscResourceGroup-\u0027, uniqueString(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/resourceGroups",
                              "name": "[variables(\u0027defaultRGName\u0027)]",
                              "apiVersion": "2020-10-01",
                              "location": "[variables(\u0027defaultRGLocation\u0027)]"
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027deployDefaultAscResourceGroup\u0027)]",
                              "apiVersion": "2020-06-01",
                              "resourceGroup": "[variables(\u0027defaultRGName\u0027)]",
                              "dependsOn": [
                                "[resourceId(\u0027Microsoft.Resources/resourceGroups\u0027, variables(\u0027defaultRGName\u0027))]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "defaultRGLocation": {
                                    "value": "[variables(\u0027defaultRGLocation\u0027)]"
                                  },
                                  "workspaceName": {
                                    "value": "[variables(\u0027workspaceName\u0027)]"
                                  },
                                  "dcrName": {
                                    "value": "[variables(\u0027dcrName\u0027)]"
                                  },
                                  "enableCollectionOfSqlQueriesForSecurityResearch": {
                                    "value": "[parameters(\u0027enableCollectionOfSqlQueriesForSecurityResearch\u0027)]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "defaultRGLocation": {
                                      "type": "string"
                                    },
                                    "workspaceName": {
                                      "type": "string"
                                    },
                                    "dcrName": {
                                      "type": "string"
                                    },
                                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                                      "type": "bool"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.OperationalInsights/workspaces",
                                      "name": "[parameters(\u0027workspaceName\u0027)]",
                                      "apiVersion": "2015-11-01-preview",
                                      "location": "[parameters(\u0027defaultRGLocation\u0027)]",
                                      "properties": {
                                        "sku": {
                                          "name": "pernode"
                                        },
                                        "retentionInDays": 30,
                                        "features": {
                                          "searchVersion": 1
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "name": "[parameters(\u0027dcrName\u0027)]",
                                      "apiVersion": "2019-11-01-preview",
                                      "location": "[parameters(\u0027defaultRGLocation\u0027)]",
                                      "dependsOn": [
                                        "[parameters(\u0027workspaceName\u0027)]"
                                      ],
                                      "properties": {
                                        "description": "Data collection rule for Azure Defender for SQL. Deleting this rule will break the detection of Azure Defender for SQL.",
                                        "dataSources": {
                                          "extensions": [
                                            {
                                              "streams": [
                                                "Microsoft-DefenderForSqlAlerts",
                                                "Microsoft-DefenderForSqlLogins",
                                                "Microsoft-DefenderForSqlTelemetry",
                                                "Microsoft-SqlAtpStatus-DefenderForSql"
                                              ],
                                              "extensionName": "AdvancedThreatProtection",
                                              "extensionSettings": {
                                                "enableCollectionOfSqlQueriesForSecurityResearch": "[parameters(\u0027enableCollectionOfSqlQueriesForSecurityResearch\u0027)]"
                                              },
                                              "name": "AdvancedThreatProtection"
                                            },
                                            {
                                              "streams": [
                                                "Microsoft-DefenderForSqlScanEvents",
                                                "Microsoft-DefenderForSqlScanResults",
                                                "Microsoft-DefenderForSqlTelemetry"
                                              ],
                                              "extensionName": "VulnerabilityAssessment",
                                              "name": "VulnerabilityAssessment"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[resourceId(\u0027Microsoft.OperationalInsights/workspaces/\u0027, parameters(\u0027workspaceName\u0027))]",
                                              "name": "LogAnalyticsDest"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-DefenderForSqlAlerts",
                                              "Microsoft-DefenderForSqlLogins",
                                              "Microsoft-DefenderForSqlTelemetry",
                                              "Microsoft-DefenderForSqlScanEvents",
                                              "Microsoft-DefenderForSqlScanResults"
                                            ],
                                            "destinations": [
                                              "LogAnalyticsDest"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027deployAzureDefenderForSqlExtensions\u0027)]",
                              "apiVersion": "2020-06-01",
                              "resourceGroup": "[parameters(\u0027resourceGroup\u0027)]",
                              "dependsOn": [
                                "[variables(\u0027deployDefaultAscResourceGroup\u0027)]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "location": {
                                    "value": "[parameters(\u0027location\u0027)]"
                                  },
                                  "dcrId": {
                                    "value": "[variables(\u0027dcrId\u0027)]"
                                  },
                                  "dcraName": {
                                    "value": "[variables(\u0027dcraName\u0027)]"
                                  },
                                  "vmName": {
                                    "value": "[parameters(\u0027vmName\u0027)]"
                                  },
                                  "azureDefenderForSqlExtensionTypeToInstall": {
                                    "value": "[parameters(\u0027azureDefenderForSqlExtensionTypeToInstall\u0027)]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "dcraName": {
                                      "type": "string"
                                    },
                                    "vmName": {
                                      "type": "string"
                                    },
                                    "azureDefenderForSqlExtensionTypeToInstall": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                      "name": "[parameters(\u0027dcraName\u0027)]",
                                      "apiVersion": "2019-11-01-preview",
                                      "properties": {
                                        "description": "Association of data collection rule for Azure Defender for SQL. Deleting this association will break the detection of Azure Defender for SQL for this virtual machine.",
                                        "dataCollectionRuleId": "[parameters(\u0027dcrId\u0027)]"
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Compute/virtualMachines/extensions",
                                      "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, \u0027Microsoft.Azure.AzureDefenderForSQL.\u0027, parameters(\u0027azureDefenderForSqlExtensionTypeToInstall\u0027))]",
                                      "apiVersion": "2020-12-01",
                                      "location": "[parameters(\u0027location\u0027)]",
                                      "properties": {
                                        "publisher": "Microsoft.Azure.AzureDefenderForSQL",
                                        "type": "[parameters(\u0027azureDefenderForSqlExtensionTypeToInstall\u0027)]",
                                        "typeHandlerVersion": "1.0",
                                        "autoUpgradeMinorVersion": true
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2ada9901-073c-444a-9a9a-91865174f0aa",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2ada9901-073c-444a-9a9a-91865174f0aa"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1274 - Alternate Processing Site",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1274"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2aee175f-cd16-4825-939a-a85349d96210",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2aee175f-cd16-4825-939a-a85349d96210"
          },
          {
            "properties": {
              "displayName": "Synapse workspace auditing settings should have action groups configured to capture critical activities",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "To ensure your audit logs are as thorough as possible, the AuditActionsAndGroups property should include all the relevant groups. We recommend adding at least SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP, and BATCH_COMPLETED_GROUP. This is sometimes required for compliance with regulatory standards.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Synapse/workspaces"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Synapse/workspaces/auditingSettings",
                    "name": "default",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "not": {
                            "field": "Microsoft.Synapse/workspaces/auditingSettings/auditActionsAndGroups[*]",
                            "notEquals": "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Synapse/workspaces/auditingSettings/auditActionsAndGroups[*]",
                            "notEquals": "FAILED_DATABASE_AUTHENTICATION_GROUP"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Synapse/workspaces/auditingSettings/auditActionsAndGroups[*]",
                            "notEquals": "BATCH_COMPLETED_GROUP"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2b18f286-371e-4b80-9887-04759970c0d3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2b18f286-371e-4b80-9887-04759970c0d3"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1603 - Developer Security Testing And Evaluation",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1603"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2b909c26-162f-47ce-8e15-0c1f55632eac",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2b909c26-162f-47ce-8e15-0c1f55632eac"
          },
          {
            "properties": {
              "displayName": "Managed identity should be used in your Web App",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use a managed identity for enhanced authentication security",
              "metadata": {
                "version": "2.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "app*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/sites/config/managedServiceIdentityId",
                          "exists": "true"
                        },
                        {
                          "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId",
                          "exists": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2b9ad585-36bc-4615-b300-fd4435808332"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Cognitive Services accounts should enable data encryption",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy is deprecated. Cognitive Services have data encryption enforced.",
              "metadata": {
                "version": "2.0.0-deprecated",
                "category": "Cognitive Services",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/encryption.keySource",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/encryption",
                      "exists": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2bdd0062-9d75-436e-89df-487dd8e4b3c7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2bdd0062-9d75-436e-89df-487dd8e4b3c7"
          },
          {
            "properties": {
              "displayName": "Configure App Service slots to disable local authentication for SCM sites.",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable local authentication methods for SCM sites so that your App Services slots exclusively require Azure Active Directory identities for authentication. Learn more at: https://aka.ms/app-service-disable-basic-auth.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Web/sites/slots"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "name": "scm",
                    "type": "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies/allow",
                      "equals": "false"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "siteName": {
                            "value": "[field(\u0027fullName\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "siteName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies",
                              "name": "[concat(parameters(\u0027siteName\u0027), \u0027/scm\u0027)]",
                              "apiVersion": "2021-02-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "tags": {},
                              "properties": {
                                "allow": "false"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c034a29-2a5f-4857-b120-f800fe5549ae",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c034a29-2a5f-4857-b120-f800fe5549ae"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1434 - Media Transport",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1434"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c18f06b-a68d-41c3-8863-b8cd3acb5f8f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c18f06b-a68d-41c3-8863-b8cd3acb5f8f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1343 - Authenticator Management | Expiration Of Cached Authenticators",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1343"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c251a55-31eb-4e53-99c6-e9c43c393ac2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c251a55-31eb-4e53-99c6-e9c43c393ac2"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1388 - Information Spillage Response",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1388"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c7c575a-d4c5-4f6f-bd49-dee97a8cba55",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c7c575a-d4c5-4f6f-bd49-dee97a8cba55"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1344 - Authenticator Feedback",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1344"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c895fe7-2d8e-43a2-838c-3a533a5b355e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c895fe7-2d8e-43a2-838c-3a533a5b355e"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: SSH access from the Internet should be blocked",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy is deprecated. This policy audits any network security rule that allows SSH access from Internet",
              "metadata": {
                "version": "2.0.0-deprecated",
                "category": "Network",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                          "equals": "Allow"
                        },
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                          "equals": "Inbound"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                              "equals": "*"
                            },
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                              "equals": "22"
                            },
                            {
                              "value": "[if(and(not(empty(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange\u0027))), contains(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange\u0027),\u0027-\u0027)), and(lessOrEquals(int(first(split(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange\u0027), \u0027-\u0027))),22),greaterOrEquals(int(last(split(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange\u0027), \u0027-\u0027))),22)), \u0027false\u0027)]",
                              "equals": "true"
                            },
                            {
                              "count": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                "where": {
                                  "value": "[if(and(not(empty(first(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]\u0027)))), contains(first(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]\u0027)),\u0027-\u0027)), and(lessOrEquals(int(first(split(first(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]\u0027)), \u0027-\u0027))),22),greaterOrEquals(int(last(split(first(field(\u0027Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]\u0027)), \u0027-\u0027))),22)) , \u0027false\u0027)]",
                                  "equals": "true"
                                }
                              },
                              "greater": 0
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                "notEquals": "*"
                              }
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                "notEquals": "22"
                              }
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                              "equals": "*"
                            },
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                              "equals": "Internet"
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                "notEquals": "*"
                              }
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                "notEquals": "Internet"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c89a2e5-7285-40fe-afe0-ae8654b92fab",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c89a2e5-7285-40fe-afe0-ae8654b92fab"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Unattached disks should be encrypted",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy audits any unattached disk without encryption enabled.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Compute",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/disks"
                    },
                    {
                      "field": "Microsoft.Compute/disks/diskState",
                      "equals": "Unattached"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/disks/encryptionSettingsCollection.enabled",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Compute/disks/encryptionSettingsCollection.enabled",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c89a2e5-7285-40fe-afe0-ae8654b92fb2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c89a2e5-7285-40fe-afe0-ae8654b92fb2"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1593 - External Information System Services | Processing, Storage, And Service Location",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1593"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2cd0a426-b5f5-4fe0-9539-a6043cdbc6fa",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2cd0a426-b5f5-4fe0-9539-a6043cdbc6fa"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1546 - Vulnerability Scanning",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1546"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2ce1ea7e-4038-4e53-82f4-63e8859333c1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2ce1ea7e-4038-4e53-82f4-63e8859333c1"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1414 - Nonlocal Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1414"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2ce63a52-e47b-4ae2-adbb-6e40d967f9e6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2ce63a52-e47b-4ae2-adbb-6e40d967f9e6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1679 - Malicious Code Protection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1679"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2cf42a28-193e-41c5-98df-7688e7ef0a88",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2cf42a28-193e-41c5-98df-7688e7ef0a88"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1068 - Wireless Access",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1068"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d045bca-a0fd-452e-9f41-4ec33769717c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d045bca-a0fd-452e-9f41-4ec33769717c"
          },
          {
            "properties": {
              "displayName": "App Service Environment apps should not be reachable over public internet",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "To ensure apps deployed in an App Service Environment are not accessible over public internet, one should deploy App Service Environment with an IP address in virtual network. To set the IP address to a virtual network IP, the App Service Environment must be deployed with an internal load balancer.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/hostingEnvironments"
                    },
                    {
                      "field": "kind",
                      "like": "ASE*"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "value": "[requestContext().apiVersion]",
                              "less": "2018-02-01"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Web/HostingEnvironments/internalLoadBalancingMode",
                                  "notContains": "2"
                                },
                                {
                                  "field": "Microsoft.Web/HostingEnvironments/internalLoadBalancingMode",
                                  "notContains": "3"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "value": "[requestContext().apiVersion]",
                              "greaterOrEquals": "2018-02-01"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Web/HostingEnvironments/internalLoadBalancingMode",
                                  "notContains": "Web"
                                },
                                {
                                  "field": "Microsoft.Web/HostingEnvironments/internalLoadBalancingMode",
                                  "notContains": "Publishing"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d048aca-6479-4923-88f5-e2ac295d9af3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d048aca-6479-4923-88f5-e2ac295d9af3"
          },
          {
            "properties": {
              "displayName": "App Service should use a virtual network service endpoint",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy audits any App Service not configured to use a virtual network service endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "app*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/virtualNetworkConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/virtualnetworkconnections/vnetResourceId",
                      "exists": "true"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d21331d-a4c2-4def-a9ad-ee4e1e023beb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d21331d-a4c2-4def-a9ad-ee4e1e023beb"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1704 - Security Alerts, Advisories, And Directives",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1704"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d44b6fa-1134-4ea6-ad4e-9edb68f65429",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d44b6fa-1134-4ea6-ad4e-9edb68f65429"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs that do not store passwords using reversible encryption",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines that do not store passwords using reversible encryption. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "StorePasswordsUsingReversibleEncryption",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d60d3b7-aa10-454c-88a8-de39d99d17c6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d60d3b7-aa10-454c-88a8-de39d99d17c6"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Linux VMs that allow remote connections from accounts without passwords",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Linux virtual machines that allow remote connections from accounts without passwords. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "3.1.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "microsoft-aks",
                                "qubole-inc",
                                "datastax",
                                "couchbase",
                                "scalegrid",
                                "checkpoint",
                                "paloaltonetworks",
                                "debian"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "OpenLogic"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "CentOS*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Oracle"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Oracle-Linux"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "RHEL",
                                    "RHEL-HA",
                                    "RHEL-SAP",
                                    "RHEL-SAP-APPS",
                                    "RHEL-SAP-HA",
                                    "RHEL-SAP-HANA"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "osa",
                                    "rhel-byos"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "cis-centos-7-l1",
                                    "cis-centos-7-v2-1-1-l1",
                                    "cis-centos-8-l1",
                                    "cis-debian-linux-8-l1",
                                    "cis-debian-linux-9-l1",
                                    "cis-nginx-centos-7-v1-1-0-l1",
                                    "cis-oracle-linux-7-v2-0-0-l1",
                                    "cis-oracle-linux-8-l1",
                                    "cis-postgresql-11-centos-linux-7-level-1",
                                    "cis-rhel-7-l2",
                                    "cis-rhel-7-v2-2-0-l1",
                                    "cis-rhel-8-l1",
                                    "cis-suse-linux-12-v2-0-0-l1",
                                    "cis-ubuntu-linux-1604-v1-0-0-l1",
                                    "cis-ubuntu-linux-1804-l1"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "credativ"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Debian"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "7*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Suse"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "SLES*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "11*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Canonical"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "contains": "Ubuntu"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "12*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "linux-data-science-vm-ubuntu",
                                    "azureml",
                                    "ubuntu-hpc",
                                    "ubuntu-1804"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-centos-os"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-altus-centos-os"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "linux*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Linux*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "exists": "false"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "notIn": [
                                        "OpenLogic",
                                        "RedHat",
                                        "credativ",
                                        "Suse",
                                        "Canonical",
                                        "microsoft-dsvm",
                                        "cloudera",
                                        "microsoft-ads",
                                        "center-for-internet-security-inc",
                                        "Oracle",
                                        "AzureDatabricks"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "linux*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "PasswordPolicy_msid110",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d67222d-05fd-4526-a171-2ee132ad9e83",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d67222d-05fd-4526-a171-2ee132ad9e83"
          },
          {
            "properties": {
              "displayName": "Public network access on Azure IoT Hub should be disabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling the public network access property improves security by ensuring your Azure IoT Hub can only be accessed from a private endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Internet of Things"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Devices/IotHubs"
                    },
                    {
                      "field": "Microsoft.Devices/IotHubs/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d6830fb-07eb-48e7-8c4d-2a442b35f0fb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d6830fb-07eb-48e7-8c4d-2a442b35f0fb"
          },
          {
            "properties": {
              "displayName": "[Preview]: Azure IoT Hub should use customer-managed key to encrypt data at rest",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Encryption of data at rest in IoT Hub with customer-managed key adds a second layer of encryption on top of the default service-managed keys, enables customer control of keys, custom rotation policies, and ability to manage access to data through key access control. Customer-managed keys must be configured during creation of IoT Hub. For more information on how to configure customer-managed keys, see https://aka.ms/iotcmk.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Internet of Things",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The desired effect of the policy."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Devices/IotHubs"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Devices/IotHubs/encryption.keyVaultProperties[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Devices/IotHubs/encryption.keyVaultProperties[*].keyIdentifier",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Devices/IotHubs/encryption.keyVaultProperties[*].keyIdentifier",
                              "notequals": ""
                            }
                          ]
                        }
                      },
                      "lessOrEquals": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d7e144b-159c-44fc-95c1-ac3dbf5e6e54",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d7e144b-159c-44fc-95c1-ac3dbf5e6e54"
          },
          {
            "properties": {
              "displayName": "Managed workspace virtual network on Azure Synapse workspaces should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enabling a managed workspace virtual network ensures that your workspace is network isolated from other workspaces. Data integration and Spark resources deployed in this virtual network also provides user level isolation for Spark activities.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Synapse/workspaces"
                    },
                    {
                      "field": "Microsoft.Synapse/workspaces/managedVirtualNetwork",
                      "notEquals": "default"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2d9dbfa3-927b-4cf0-9d0f-08747f971650",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2d9dbfa3-927b-4cf0-9d0f-08747f971650"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1077 - Use Of External Information Systems",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1077"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2dad3668-797a-412e-a798-07d3849a7a79",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2dad3668-797a-412e-a798-07d3849a7a79"
          },
          {
            "properties": {
              "displayName": "Configure Azure Event Grid partner namespaces to disable local authentication",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable local authentication methods so that your Azure Event Grid partner namespaces exclusively require Azure Active Directory identities for authentication. Learn more at: https://aka.ms/aeg-disablelocalauth.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Grid"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/partnerNamespaces"
                    },
                    {
                      "field": "Microsoft.EventGrid/partnerNamespaces/disableLocalAuth",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/1e241071-0855-49ea-94dc-649edcd759de"
                    ],
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272021-06-01-preview\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.EventGrid/partnerNamespaces/disableLocalAuth",
                        "value": true
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2dd0e8b9-4289-4bb0-b813-1883298e9924",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2dd0e8b9-4289-4bb0-b813-1883298e9924"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1149 - Security Assessments | Specialized Assessments",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1149"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2e1b855b-a013-481a-aeeb-2bcb129fd35d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2e1b855b-a013-481a-aeeb-2bcb129fd35d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1497 - System Security Plan | Plan / Coordinate With Other Organizational Entities",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1497"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2e3c5583-1729-4d36-8771-59c32f090a22",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2e3c5583-1729-4d36-8771-59c32f090a22"
          },
          {
            "properties": {
              "displayName": "[Preview]: Azure Recovery Services vaults should use customer-managed keys for encrypting backup data",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer-managed keys to manage the encryption at rest of your backup data. By default, customer data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/AB-CmkEncryption.",
              "metadata": {
                "version": "1.0.0-preview",
                "preview": true,
                "category": "Backup"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "enableDoubleEncryption": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Double encryption should be enabled on Recovery Services vaults for Backup",
                    "description": "Check if double encryption is enabled on Recovery Services vaults for Backup.  For more details refer to https://aka.ms/AB-InfraEncryption."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": false
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.RecoveryServices/vaults"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.RecoveryServices/vaults/encryption.keyVaultProperties.keyUri",
                          "exists": "false"
                        },
                        {
                          "allOf": [
                            {
                              "value": "[parameters(\u0027enableDoubleEncryption\u0027)]",
                              "equals": true
                            },
                            {
                              "field": "Microsoft.RecoveryServices/vaults/encryption.infrastructureEncryption",
                              "notEquals": "Enabled"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2e94d99a-8a36-4563-bc77-810d8893b671",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2e94d99a-8a36-4563-bc77-810d8893b671"
          },
          {
            "properties": {
              "displayName": "Configure Linux machines to be associated with a Data Collection Rule",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy a Data Collection Rule Association to link a Linux virtual machine, virtual machine scale set, or Arc machine to the specified Data Collection Rule. The list of locations and OS images are updated over time as support is increased.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "listOfLinuxImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Additional Virtual Machine Images",
                    "description": "List of virtual machine images that have supported Linux OS to add to scope. Example values: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "dcrResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Resource Id",
                    "description": "Resource Id of the Data Collection Rule to be applied on the virtual machines in scope."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "location",
                      "in": [
                        "australiacentral",
                        "australiaeast",
                        "australiasoutheast",
                        "brazilsouth",
                        "canadacentral",
                        "canadaeast",
                        "centralindia",
                        "centralus",
                        "eastasia",
                        "eastus2euap",
                        "eastus",
                        "eastus2",
                        "francecentral",
                        "germanywestcentral",
                        "japaneast",
                        "japanwest",
                        "jioindiawest",
                        "koreacentral",
                        "koreasouth",
                        "northcentralus",
                        "northeurope",
                        "norwayeast",
                        "southafricanorth",
                        "southcentralus",
                        "southeastasia",
                        "southindia",
                        "switzerlandnorth",
                        "uaenorth",
                        "uksouth",
                        "ukwest",
                        "westcentralus",
                        "westeurope",
                        "westindia",
                        "westus",
                        "westus2"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/machines/osName",
                              "equals": "linux"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "type",
                                  "equals": "Microsoft.Compute/virtualMachines"
                                },
                                {
                                  "field": "type",
                                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageId",
                                  "in": "[parameters(\u0027listOfLinuxImageIdToInclude\u0027)]"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "RedHat"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "in": [
                                        "RHEL",
                                        "RHEL-SAP-HANA"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "6*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "7*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "8*"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "SUSE"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "in": [
                                        "SLES",
                                        "SLES-HPC",
                                        "SLES-HPC-Priority",
                                        "SLES-SAP",
                                        "SLES-SAP-BYOS",
                                        "SLES-Priority",
                                        "SLES-BYOS",
                                        "SLES-SAPCAL",
                                        "SLES-Standard"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "12*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "15*"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "Canonical"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "equals": "UbuntuServer"
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "14.04*LTS"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "16.04*LTS"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "18.04*LTS"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "Canonical"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "equals": "0001-com-ubuntu-server-focal"
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "20_04-lts*"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "Oracle"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "equals": "Oracle-Linux"
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "6*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "7*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "8*"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "OpenLogic"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "in": [
                                        "CentOS",
                                        "Centos-LVM",
                                        "CentOS-SRIOV"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "6*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "7*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "8*"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "cloudera"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "equals": "cloudera-centos-os"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageSku",
                                      "like": "7*"
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "credativ"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "in": [
                                        "debian"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "8"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSku",
                                          "like": "9"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "equals": "Debian"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "in": [
                                        "debian-10"
                                      ]
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageSku",
                                      "like": "10"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "existenceCondition": {
                      "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionRuleId",
                      "equals": "[parameters(\u0027dcrResourceId\u0027)]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "dcrResourceId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "associationName": "[concat(\u0027assoc-\u0027, uniqueString(parameters(\u0027dcrResourceId\u0027)))]"
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), \u0027microsoft.compute/virtualmachines\u0027)]",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, variables(\u0027associationName\u0027))]",
                              "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2019-11-01-preview",
                              "properties": {
                                "dataCollectionRuleId": "[parameters(\u0027dcrResourceId\u0027)]"
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), \u0027microsoft.compute/virtualmachinescalesets\u0027)]",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, variables(\u0027associationName\u0027))]",
                              "type": "Microsoft.Compute/virtualMachineScaleSets/providers/dataCollectionRuleAssociations",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2019-11-01-preview",
                              "properties": {
                                "dataCollectionRuleId": "[parameters(\u0027dcrResourceId\u0027)]"
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), \u0027microsoft.hybridcompute/machines\u0027)]",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, variables(\u0027associationName\u0027))]",
                              "type": "Microsoft.HybridCompute/machines/providers/dataCollectionRuleAssociations",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2019-11-01-preview",
                              "properties": {
                                "dataCollectionRuleId": "[parameters(\u0027dcrResourceId\u0027)]"
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "dcrResourceId": {
                            "value": "[parameters(\u0027dcrResourceId\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2ea82cdd-f2e8-4500-af75-67a2e084ca74",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2ea82cdd-f2e8-4500-af75-67a2e084ca74"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1000 - Access Control Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1000"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2ef3cc79-733e-48ed-ab6f-7bf439e9b406",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2ef3cc79-733e-48ed-ab6f-7bf439e9b406"
          },
          {
            "properties": {
              "displayName": "Network Watcher flow logs should have traffic analytics enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Traffic analytics analyzes Network Watcher network security group flow logs to provide insights into traffic flow in your Azure cloud. It can be used to visualize network activity across your Azure subscriptions and identify hot spots, identify security threats, understand traffic flow patterns, pinpoint network misconfigurations and more.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkWatchers/flowLogs"
                    },
                    {
                      "anyof": [
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                          "equals": false
                        },
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval",
                          "notin": [
                            "10",
                            "60"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2f080164-9f4d-497e-9db6-416dc9f7b48a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2f080164-9f4d-497e-9db6-416dc9f7b48a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1519 - Personnel Termination",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Personnel Security control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1519"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2f13915a-324c-4ab8-b45c-2eefeeefb098",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2f13915a-324c-4ab8-b45c-2eefeeefb098"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Security Options - System objects\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Security Options - System objects\u0027 for case insensitivity for non-Windows subsystems and permissions of internal system objects. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SecurityOptionsSystemobjects",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsSystemobjects",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2f262ace-812a-4fd0-b731-b38ba9e9708d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2f262ace-812a-4fd0-b731-b38ba9e9708d"
          },
          {
            "properties": {
              "displayName": "[Preview]: Network traffic data collection agent should be installed on Windows virtual machines",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Security Center uses the Microsoft Dependency agent to collect network traffic data from your Azure virtual machines to enable advanced network protection features such as traffic visualization on the network map, network hardening recommendations and specific network threats.",
              "metadata": {
                "version": "1.0.1-preview",
                "category": "Monitoring",
                "preview": "true"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable Dependency Agent for Windows VMs monitoring"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "DependencyAgentWindows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2f2ee1de-44aa-4762-b6bd-0893fc3f306d"
          },
          {
            "properties": {
              "displayName": "[Preview]: Configure supported Linux Arc machines to automatically install the Azure Security agent",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Configure supported Linux Arc machines to automatically install the Azure Security agent. Security Center collects events from the agent and uses them to provide security alerts and tailored hardening tasks (recommendations). Target Linux Arc machines must be in a supported location.",
              "metadata": {
                "category": "Security Center",
                "version": "1.0.0-preview",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/imageOffer",
                      "like": "linux*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.HybridCompute/machines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/type",
                          "equals": "AzureSecurityLinuxAgent"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/Publisher",
                          "equals": "Microsoft.Azure.Security.Monitoring"
                        },
                        {
                          "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.HybridCompute/machines/extensions",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, \u0027AzureSecurityLinuxAgent\u0027)]",
                              "apiVersion": "2021-06-10-preview",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.Azure.Security.Monitoring",
                                "type": "AzureSecurityLinuxAgent",
                                "settings": {},
                                "protectedSettings": {}
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2f47ec78-4301-4655-b78e-b29377030cdc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2f47ec78-4301-4655-b78e-b29377030cdc"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1144 - Security Assessments",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1144"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2fa15ff1-a693-4ee4-b094-324818dc9a51",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2fa15ff1-a693-4ee4-b094-324818dc9a51"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1090 - Security Awareness Training",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Awareness and Training control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1090"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2fb740e5-cbc7-4d10-8686-d1bf826652b1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2fb740e5-cbc7-4d10-8686-d1bf826652b1"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Web Application should only be accessible over HTTPS",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "app"
                        },
                        {
                          "field": "kind",
                          "equals": "WebApp"
                        },
                        {
                          "field": "kind",
                          "equals": "app,linux"
                        },
                        {
                          "field": "kind",
                          "equals": "app,linux,container"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "OnlyHttpsForWebApplication",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2fde8a98-6892-426a-83ba-050e640c0ce0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2fde8a98-6892-426a-83ba-050e640c0ce0"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs configurations in \u0027Security Options - Network Access\u0027",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - Network Access\u0027. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsNetworkAccess",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/30040dab-4e75-4456-8273-14b8f75d91d9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "30040dab-4e75-4456-8273-14b8f75d91d9"
          },
          {
            "properties": {
              "displayName": "Azure Defender for Storage should be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for Storage provides detections of unusual and potentially harmful attempts to access or exploit storage accounts.",
              "metadata": {
                "version": "1.0.3",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "StorageAccounts",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "308fbb08-4ab8-4e67-9b29-592e93fb94fa"
          },
          {
            "properties": {
              "displayName": "Configure Azure Cache for Redis to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for your Azure Cache for Redis resource so that it\u0027s not accessible over the public internet. This helps protect the cache against data leakage risks.",
              "metadata": {
                "category": "Cache",
                "version": "1.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Cache/Redis"
                    },
                    {
                      "field": "Microsoft.Cache/Redis/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/e0f68234-74aa-48ed-b826-c38b57376e17"
                    ],
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272020-06-01\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.Cache/Redis/publicNetworkAccess",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/30b3dfa5-a70d-4c8e-bed6-0083858f663d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "30b3dfa5-a70d-4c8e-bed6-0083858f663d"
          },
          {
            "properties": {
              "displayName": "Configure Azure Automation account to disable local authentication",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable local authentication methods so that your Azure Automation accounts exclusively require Azure Active Directory identities for authentication.",
              "metadata": {
                "version": "1.0.0",
                "category": "Automation"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Automation/automationAccounts"
                    },
                    {
                      "field": "Microsoft.Automation/automationAccounts/disableLocalAuth",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "conflictEffect": "audit",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272021-06-22\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.Automation/automationAccounts/disableLocalAuth",
                        "value": true
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/30d1d58e-8f96-47a5-8564-499a3f3cca81",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "30d1d58e-8f96-47a5-8564-499a3f3cca81"
          },
          {
            "properties": {
              "displayName": "Audit Windows machines missing any of specified members in the Administrators group",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the local Administrators group does not contain one or more members that are listed in the policy parameter.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AdministratorsGroupMembersToInclude",
                  "version": "1.*",
                  "configurationParameter": {
                    "MembersToInclude": "[LocalGroup]AdministratorsGroup;MembersToInclude"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "MembersToInclude": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Members to include",
                    "description": "A semicolon-separated list of members that should be included in the Administrators local group. Ex: Administrator; myUser1; myUser2"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AdministratorsGroupMembersToInclude",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027[LocalGroup]AdministratorsGroup;MembersToInclude\u0027, \u0027=\u0027, parameters(\u0027MembersToInclude\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/30f71ea1-ac77-4f26-9fc5-2d926bbd4ba7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "30f71ea1-ac77-4f26-9fc5-2d926bbd4ba7"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs that are not joined to the specified domain",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines that are not joined to the specified domain. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "DomainName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Domain Name (FQDN)",
                    "description": "The fully qualified domain name (FQDN) that the Windows VMs should be joined to"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsDomainMembership",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027[DomainMembership]WindowsDomainMembership;DomainName\u0027, \u0027=\u0027, parameters(\u0027DomainName\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "WindowsDomainMembership"
                          },
                          "DomainName": {
                            "value": "[parameters(\u0027DomainName\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "DomainName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[DomainMembership]WindowsDomainMembership;DomainName",
                                      "value": "[parameters(\u0027DomainName\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[DomainMembership]WindowsDomainMembership;DomainName",
                                      "value": "[parameters(\u0027DomainName\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/315c850a-272d-4502-8935-b79010405970",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "315c850a-272d-4502-8935-b79010405970"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1042 - Least Privilege | Auditing Use Of Privileged Functions",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1042"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/319dc4f0-0fed-4ac9-8fc3-7aeddee82c07",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "319dc4f0-0fed-4ac9-8fc3-7aeddee82c07"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1698 - Information System Monitoring | Individuals Posing Greater Risk",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1698"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/31b752c1-05a9-432a-8fce-c39b56550119",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "31b752c1-05a9-432a-8fce-c39b56550119"
          },
          {
            "properties": {
              "displayName": "[Preview]: Log Analytics Extension should be enabled for listed virtual machine images",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Reports virtual machines as non-compliant if the virtual machine image is not in the list defined and the extension is not installed.",
              "metadata": {
                "version": "2.0.1-preview",
                "category": "Monitoring",
                "preview": true
              },
              "parameters": {
                "listOfImageIdToInclude_windows": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Windows OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "listOfImageIdToInclude_linux": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Linux OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "not": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageId",
                                "in": "[parameters(\u0027listOfImageIdToInclude_windows\u0027)]"
                              },
                              {
                                "field": "Microsoft.Compute/imageId",
                                "in": "[parameters(\u0027listOfImageIdToInclude_linux\u0027)]"
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "WindowsServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "2008-R2-SP1",
                                      "2008-R2-SP1-smalldisk",
                                      "2012-Datacenter",
                                      "2012-Datacenter-smalldisk",
                                      "2012-R2-Datacenter",
                                      "2012-R2-Datacenter-smalldisk",
                                      "2016-Datacenter",
                                      "2016-Datacenter-Server-Core",
                                      "2016-Datacenter-Server-Core-smalldisk",
                                      "2016-Datacenter-smalldisk",
                                      "2016-Datacenter-with-Containers",
                                      "2016-Datacenter-with-RDSH",
                                      "2019-Datacenter",
                                      "2019-Datacenter-Core",
                                      "2019-Datacenter-Core-smalldisk",
                                      "2019-Datacenter-Core-with-Containers",
                                      "2019-Datacenter-Core-with-Containers-smalldisk",
                                      "2019-Datacenter-smalldisk",
                                      "2019-Datacenter-with-Containers",
                                      "2019-Datacenter-with-Containers-smalldisk",
                                      "2019-Datacenter-zhcn"
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "WindowsServerSemiAnnual"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "in": [
                                      "Datacenter-Core-1709-smalldisk",
                                      "Datacenter-Core-1709-with-Containers-smalldisk",
                                      "Datacenter-Core-1803-with-Containers-smalldisk"
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsServerHPCPack"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "WindowsServerHPCPack"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftSQLServer"
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2016"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2016-BYOL"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2012R2"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "*-WS2012R2-BYOL"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftRServer"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "MLServer-WS2016"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftVisualStudio"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "in": [
                                      "VisualStudio",
                                      "Windows"
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftDynamicsAX"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "Dynamics"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "equals": "Pre-Req-AX7-Onebox-U8"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftDynamicsAX"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "Dynamics"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "equals": "Pre-Req-AX7-Onebox-V4"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "microsoft-ads"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "windows-data-science-vm"
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imagePublisher",
                                    "equals": "MicrosoftWindowsDesktop"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "equals": "Windows-10"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "RedHat"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "RHEL",
                                  "RHEL-SAP-HANA"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "SUSE"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "SLES",
                                  "SLES-HPC",
                                  "SLES-HPC-Priority",
                                  "SLES-SAP",
                                  "SLES-SAP-BYOS",
                                  "SLES-Priority",
                                  "SLES-BYOS",
                                  "SLES-SAPCAL",
                                  "SLES-Standard"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "12*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Canonical"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "UbuntuServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "14.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "16.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "18.04*LTS"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Oracle"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Oracle-Linux"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7.*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "OpenLogic"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "CentOS",
                                  "Centos-LVM",
                                  "CentOS-SRIOV"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "cloudera"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "cloudera-centos-os"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "like": "7*"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.EnterpriseCloud.Monitoring"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/32133ab0-ee4b-4b44-98d6-042180979d50",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "32133ab0-ee4b-4b44-98d6-042180979d50"
          },
          {
            "properties": {
              "displayName": "API apps should use an Azure file share for its content directory",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "The content directory of an API app should be located on an Azure file share. The storage account information for the file share must be provided before any publishing activity. To learn more about using Azure Files for hosting app service content refer to https://go.microsoft.com/fwlink/?linkid=2151594.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "*api"
                    },
                    {
                      "field": "Microsoft.Web/sites/storageAccountRequired",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/324c7761-08db-4474-9661-d1039abc92ee",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "324c7761-08db-4474-9661-d1039abc92ee"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1587 - External Information System Services",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1587"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/32820956-9c6d-4376-934c-05cd8525be7c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "32820956-9c6d-4376-934c-05cd8525be7c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1333 - Authenticator Management | Pki-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1333"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3298d6bf-4bc6-4278-a95d-f7ef3ac6e594",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3298d6bf-4bc6-4278-a95d-f7ef3ac6e594"
          },
          {
            "properties": {
              "displayName": "Linux virtual machine scale sets should have Azure Monitor Agent installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Linux virtual machine scale sets should be monitored and secured through the deployed Azure Monitor Agent. The Azure Monitor Agent collects telemetry data from the guest OS. This policy will audit virtual machine scale sets with supported OS images in supported regions. Learn more: https://aka.ms/AMAOverview.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "listOfLinuxImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Additional Virtual Machine Images",
                    "description": "List of virtual machine images that have supported Linux OS to add to scope. Example values: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "location",
                      "in": [
                        "australiacentral",
                        "australiaeast",
                        "australiasoutheast",
                        "brazilsouth",
                        "canadacentral",
                        "canadaeast",
                        "centralindia",
                        "centralus",
                        "eastasia",
                        "eastus2euap",
                        "eastus",
                        "eastus2",
                        "francecentral",
                        "germanywestcentral",
                        "japaneast",
                        "japanwest",
                        "jioindiawest",
                        "koreacentral",
                        "koreasouth",
                        "northcentralus",
                        "northeurope",
                        "norwayeast",
                        "southafricanorth",
                        "southcentralus",
                        "southeastasia",
                        "southindia",
                        "switzerlandnorth",
                        "uaenorth",
                        "uksouth",
                        "ukwest",
                        "westcentralus",
                        "westeurope",
                        "westindia",
                        "westus",
                        "westus2"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfLinuxImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "12*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "15*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "UbuntuServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "18.04*LTS"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "0001-com-ubuntu-server-focal"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "20_04-lts*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "6*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "7*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "like": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "8"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSku",
                                  "like": "9"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "debian-10"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSku",
                              "like": "10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "AzureMonitorLinuxAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitor"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/32ade945-311e-4249-b8a4-a549924234d7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "32ade945-311e-4249-b8a4-a549924234d7"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs on which the specified services are not installed and \u0027Running\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines on which the specified services are not installed and \u0027Running\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "ServiceName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Service names (supports wildcards)",
                    "description": "A semicolon-separated list of the names of the services that should be installed and \u0027Running\u0027. e.g. \u0027WinRm;Wi*\u0027"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsServiceStatus",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027[WindowsServiceStatus]WindowsServiceStatus1;ServiceName\u0027, \u0027=\u0027, parameters(\u0027ServiceName\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "WindowsServiceStatus"
                          },
                          "ServiceName": {
                            "value": "[parameters(\u0027ServiceName\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "ServiceName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[WindowsServiceStatus]WindowsServiceStatus1;ServiceName",
                                      "value": "[parameters(\u0027ServiceName\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "[WindowsServiceStatus]WindowsServiceStatus1;ServiceName",
                                      "value": "[parameters(\u0027ServiceName\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/32b1e4d4-6cd5-47b4-a935-169da8a5c262",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "32b1e4d4-6cd5-47b4-a935-169da8a5c262"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1445 - Physical And Environmental Protection Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1445"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/32d07d59-2716-4972-b37b-214a67ac4a37",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "32d07d59-2716-4972-b37b-214a67ac4a37"
          },
          {
            "properties": {
              "displayName": "Azure SQL Database should have the minimal TLS version of 1.2",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.",
              "metadata": {
                "version": "1.0.1",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/servers/minimalTlsVersion",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/servers/minimalTlsVersion",
                          "notEquals": "1.2"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/32e6bbec-16b6-44c2-be37-c5b672d103cf",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "32e6bbec-16b6-44c2-be37-c5b672d103cf"
          },
          {
            "properties": {
              "displayName": "Deploy the Linux Guest Configuration extension to enable Guest Configuration assignments on Linux VMs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy deploys the Linux Guest Configuration extension to Linux virtual machines hosted in Azure that are supported by Guest Configuration. The Linux Guest Configuration extension is a prerequisite for all Linux Guest Configuration assignments and must be deployed to machines before using any Linux Guest Configuration policy definition. For more information on Guest Configuration, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.2.0"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "microsoft-aks",
                            "qubole-inc",
                            "datastax",
                            "couchbase",
                            "scalegrid",
                            "checkpoint",
                            "paloaltonetworks",
                            "debian"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "CentOS*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-HA",
                                "RHEL-SAP",
                                "RHEL-SAP-APPS",
                                "RHEL-SAP-HA",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "osa",
                                "rhel-byos"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "cis-centos-7-l1",
                                "cis-centos-7-v2-1-1-l1",
                                "cis-centos-8-l1",
                                "cis-debian-linux-8-l1",
                                "cis-debian-linux-9-l1",
                                "cis-nginx-centos-7-v1-1-0-l1",
                                "cis-oracle-linux-7-v2-0-0-l1",
                                "cis-oracle-linux-8-l1",
                                "cis-postgresql-11-centos-linux-7-level-1",
                                "cis-rhel-7-l2",
                                "cis-rhel-7-v2-2-0-l1",
                                "cis-rhel-8-l1",
                                "cis-suse-linux-12-v2-0-0-l1",
                                "cis-ubuntu-linux-1604-v1-0-0-l1",
                                "cis-ubuntu-linux-1804-l1"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "SLES*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "11*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "contains": "Ubuntu"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "12*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "linux-data-science-vm-ubuntu",
                                "azureml",
                                "ubuntu-hpc",
                                "ubuntu-1804"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-altus-centos-os"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Linux*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "exists": "false"
                                },
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "notIn": [
                                    "OpenLogic",
                                    "RedHat",
                                    "credativ",
                                    "Suse",
                                    "Canonical",
                                    "microsoft-dsvm",
                                    "cloudera",
                                    "microsoft-ads",
                                    "center-for-internet-security-inc",
                                    "Oracle",
                                    "AzureDatabricks"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "AzurePolicyforLinux",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.GuestConfiguration"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "ConfigurationforLinux"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforLinux\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforLinux",
                                "typeHandlerVersion": "1.0",
                                "autoUpgradeMinorVersion": true,
                                "enableAutomaticUpgrade": true,
                                "settings": {},
                                "protectedSettings": {}
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/331e8ea8-378a-410f-a2e5-ae22f38bb0da",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "331e8ea8-378a-410f-a2e5-ae22f38bb0da"
          },
          {
            "properties": {
              "displayName": "App Service apps should enable outbound non-RFC 1918 traffic to Azure Virtual Network",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "By default, if one uses regional Azure Virtual Network (VNET) integration, the app only routes RFC1918 traffic into that respective virtual network. Using the API to set \u0027vnetRouteAllEnabled\u0027 to true enables all outbound traffic into the Azure Virtual Network. This setting allows features like network security groups and user defined routes to be used for all outbound traffic from the App Service app.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/vnetRouteAllEnabled",
                      "equals": "true"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/33228571-70a4-4fa1-8ca1-26d0aba8d6ef",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "33228571-70a4-4fa1-8ca1-26d0aba8d6ef"
          },
          {
            "properties": {
              "displayName": "MySQL server should use a virtual network service endpoint",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Virtual network based firewall rules are used to enable traffic from a specific subnet to Azure Database for MySQL while ensuring the traffic stays within the Azure boundary. This policy provides a way to audit if the Azure Database for MySQL has virtual network service endpoint being used.",
              "metadata": {
                "version": "1.0.2",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.DBforMySQL/servers/virtualNetworkRules",
                    "existenceCondition": {
                      "field": "Microsoft.DBforMySQL/servers/virtualNetworkRules/virtualNetworkSubnetId",
                      "exists": "true"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3375856c-3824-4e0e-ae6a-79e011dd4c47",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3375856c-3824-4e0e-ae6a-79e011dd4c47"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Security Options - Audit\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Security Options - Audit\u0027 for forcing audit policy subcategory and shutting down if unable to log security audits. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SecurityOptionsAudit",
                  "version": "1.*",
                  "configurationParameter": {
                    "AuditShutDownSystemImmediatelyIfUnableToLogSecurityAudits": "Audit: Shut down system immediately if unable to log security audits;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "AuditShutDownSystemImmediatelyIfUnableToLogSecurityAudits": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit: Shut down system immediately if unable to log security audits",
                    "description": "Audits if the system will shut down when unable to log Security events."
                  },
                  "defaultValue": "0"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsAudit",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Audit: Shut down system immediately if unable to log security audits;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditShutDownSystemImmediatelyIfUnableToLogSecurityAudits\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/33936777-f2ac-45aa-82ec-07958ec9ade4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "33936777-f2ac-45aa-82ec-07958ec9ade4"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1282 - Telecommunications Services | Single Points Of Failure",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1282"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/34042a97-ec6d-4263-93d2-8c1c46823b2a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "34042a97-ec6d-4263-93d2-8c1c46823b2a"
          },
          {
            "properties": {
              "displayName": "Configure backup on virtual machines with a given tag to an existing recovery services vault in the same location",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enforce backup for all virtual machines by backing them up to an existing central recovery services vault in the same location and subscription as the virtual machine. Doing this is useful when there is a central team in your organization managing backups for all resources in a subscription. You can optionally include virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMCentralBackupIncludeTag.",
              "metadata": {
                "version": "5.0.0",
                "category": "Backup"
              },
              "parameters": {
                "vaultLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Location (Specify the location of the VMs that you want to protect)",
                    "description": "Specify the location of the VMs that you want to protect. VMs should be backed up to a vault in the same location. For example - CanadaCentral",
                    "strongType": "location"
                  }
                },
                "inclusionTagName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Inclusion Tag Name",
                    "description": "Name of the tag to use for including VMs in the scope of this policy. This should be used along with the Inclusion Tag Value parameter. Learn more at https://aka.ms/AppCentricVMBackupPolicy"
                  },
                  "defaultValue": ""
                },
                "inclusionTagValue": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Inclusion Tag Values",
                    "description": "Value of the tag to use for including VMs in the scope of this policy (in case of multiple values, use a comma-separated list). This should be used along with the Inclusion Tag Name parameter. Learn more at https://aka.ms/AppCentricVMBackupPolicy."
                  }
                },
                "backupPolicyId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Backup Policy (of type Azure VM from a vault in the location chosen above)",
                    "description": "Specify the ID of the Azure Backup policy to configure backup of the virtual machines. The selected Azure Backup policy should be of type Azure Virtual Machine. This policy needs to be in a vault that is present in the location chosen above. For example - /subscriptions/\u003CSubscriptionId\u003E/resourceGroups/\u003CresourceGroupName\u003E/providers/Microsoft.RecoveryServices/vaults/\u003CVaultName\u003E/backupPolicies/\u003CBackupPolicyName\u003E",
                    "strongType": "Microsoft.RecoveryServices/vaults/backupPolicies"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "deployIfNotExists",
                    "auditIfNotExists",
                    "disabled"
                  ],
                  "defaultValue": "deployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "id",
                      "notContains": "/resourceGroups/databricks-rg-"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "azureopenshift"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "AzureDatabricks"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters(\u0027vaultLocation\u0027)]"
                    },
                    {
                      "field": "[concat(\u0027tags[\u0027, parameters(\u0027inclusionTagName\u0027), \u0027]\u0027)]",
                      "in": "[parameters(\u0027inclusionTagValue\u0027)]"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn",
                                "2019-datacenter-gensecond"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "SUSE"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "SLES",
                                "SLES-HPC",
                                "SLES-HPC-Priority",
                                "SLES-SAP",
                                "SLES-SAP-BYOS",
                                "SLES-Priority",
                                "SLES-BYOS",
                                "SLES-SAPCAL",
                                "SLES-Standard"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "12*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "contains": "ubuntu"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "14.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "16.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "18.04*LTS"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "*20_04-lts"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "20_04-lts*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7.*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "CentOS",
                                "Centos-LVM",
                                "CentOS-SRIOV"
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "6.*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "like": "7*"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                      "/providers/microsoft.authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
                    ],
                    "type": "Microsoft.RecoveryServices/backupprotecteditems",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "backupPolicyId": {
                              "type": "String"
                            },
                            "fabricName": {
                              "type": "String"
                            },
                            "protectionContainers": {
                              "type": "String"
                            },
                            "protectedItems": {
                              "type": "String"
                            },
                            "sourceResourceId": {
                              "type": "String"
                            }
                          },
                          "resources": [
                            {
                              "apiVersion": "2017-05-10",
                              "name": "[concat(\u0027DeployProtection-\u0027,uniqueString(parameters(\u0027protectedItems\u0027)))]",
                              "type": "Microsoft.Resources/deployments",
                              "resourceGroup": "[first(skip(split(parameters(\u0027backupPolicyId\u0027), \u0027/\u0027), 4))]",
                              "subscriptionId": "[first(skip(split(parameters(\u0027backupPolicyId\u0027), \u0027/\u0027), 2))]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "backupPolicyId": {
                                      "type": "String"
                                    },
                                    "fabricName": {
                                      "type": "String"
                                    },
                                    "protectionContainers": {
                                      "type": "String"
                                    },
                                    "protectedItems": {
                                      "type": "String"
                                    },
                                    "sourceResourceId": {
                                      "type": "String"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                      "name": "[concat(first(skip(split(parameters(\u0027backupPolicyId\u0027), \u0027/\u0027), 8)), \u0027/\u0027, parameters(\u0027fabricName\u0027), \u0027/\u0027,parameters(\u0027protectionContainers\u0027), \u0027/\u0027, parameters(\u0027protectedItems\u0027))]",
                                      "apiVersion": "2016-06-01",
                                      "properties": {
                                        "protectedItemType": "Microsoft.Compute/virtualMachines",
                                        "policyId": "[parameters(\u0027backupPolicyId\u0027)]",
                                        "sourceResourceId": "[parameters(\u0027sourceResourceId\u0027)]"
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "backupPolicyId": {
                                    "value": "[parameters(\u0027backupPolicyId\u0027)]"
                                  },
                                  "fabricName": {
                                    "value": "[parameters(\u0027fabricName\u0027)]"
                                  },
                                  "protectionContainers": {
                                    "value": "[parameters(\u0027protectionContainers\u0027)]"
                                  },
                                  "protectedItems": {
                                    "value": "[parameters(\u0027protectedItems\u0027)]"
                                  },
                                  "sourceResourceId": {
                                    "value": "[parameters(\u0027sourceResourceId\u0027)]"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "backupPolicyId": {
                            "value": "[parameters(\u0027backupPolicyId\u0027)]"
                          },
                          "fabricName": {
                            "value": "Azure"
                          },
                          "protectionContainers": {
                            "value": "[concat(\u0027iaasvmcontainer;iaasvmcontainerv2;\u0027, resourceGroup().name, \u0027;\u0027 ,field(\u0027name\u0027))]"
                          },
                          "protectedItems": {
                            "value": "[concat(\u0027vm;iaasvmcontainerv2;\u0027, resourceGroup().name, \u0027;\u0027 ,field(\u0027name\u0027))]"
                          },
                          "sourceResourceId": {
                            "value": "[concat(\u0027/subscriptions/\u0027, subscription().subscriptionId, \u0027/resourceGroups/\u0027, resourceGroup().name, \u0027/providers/Microsoft.Compute/virtualMachines/\u0027,field(\u0027name\u0027))]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/345fa903-145c-4fe1-8bcd-93ec2adccde8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "345fa903-145c-4fe1-8bcd-93ec2adccde8"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Linux VMs that have accounts without passwords",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Linux virtual machines that have accounts without passwords. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "3.1.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "microsoft-aks",
                                "qubole-inc",
                                "datastax",
                                "couchbase",
                                "scalegrid",
                                "checkpoint",
                                "paloaltonetworks",
                                "debian"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "OpenLogic"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "CentOS*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Oracle"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Oracle-Linux"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "RHEL",
                                    "RHEL-HA",
                                    "RHEL-SAP",
                                    "RHEL-SAP-APPS",
                                    "RHEL-SAP-HA",
                                    "RHEL-SAP-HANA"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "osa",
                                    "rhel-byos"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "cis-centos-7-l1",
                                    "cis-centos-7-v2-1-1-l1",
                                    "cis-centos-8-l1",
                                    "cis-debian-linux-8-l1",
                                    "cis-debian-linux-9-l1",
                                    "cis-nginx-centos-7-v1-1-0-l1",
                                    "cis-oracle-linux-7-v2-0-0-l1",
                                    "cis-oracle-linux-8-l1",
                                    "cis-postgresql-11-centos-linux-7-level-1",
                                    "cis-rhel-7-l2",
                                    "cis-rhel-7-v2-2-0-l1",
                                    "cis-rhel-8-l1",
                                    "cis-suse-linux-12-v2-0-0-l1",
                                    "cis-ubuntu-linux-1604-v1-0-0-l1",
                                    "cis-ubuntu-linux-1804-l1"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "credativ"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Debian"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "7*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Suse"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "SLES*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "11*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Canonical"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "contains": "Ubuntu"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "12*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "linux-data-science-vm-ubuntu",
                                    "azureml",
                                    "ubuntu-hpc",
                                    "ubuntu-1804"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-centos-os"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-altus-centos-os"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "linux*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Linux*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "exists": "false"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "notIn": [
                                        "OpenLogic",
                                        "RedHat",
                                        "credativ",
                                        "Suse",
                                        "Canonical",
                                        "microsoft-dsvm",
                                        "cloudera",
                                        "microsoft-ads",
                                        "center-for-internet-security-inc",
                                        "Oracle",
                                        "AzureDatabricks"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "linux*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "PasswordPolicy_msid232",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "PasswordPolicy_msid232"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforLinux\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforLinux",
                                "typeHandlerVersion": "1.0",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3470477a-b35a-49db-aca5-1073d04524fe",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3470477a-b35a-49db-aca5-1073d04524fe"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1151 - System Interconnections",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1151"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/347e3b69-7fb7-47df-a8ef-71a1a7b44bca",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "347e3b69-7fb7-47df-a8ef-71a1a7b44bca"
          },
          {
            "properties": {
              "displayName": "Azure Synapse workspaces should allow outbound data traffic only to approved targets",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Increase security of your Synapse workspace by allowing outbound data traffic only to approved targets. This helps prevention against data exfiltration by validating the target before sending data.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Synapse/workspaces"
                    },
                    {
                      "field": "Microsoft.Synapse/workspaces/managedVirtualNetworkSettings.preventDataExfiltration",
                      "notEquals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3484ce98-c0c5-4c83-994b-c5ac24785218",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3484ce98-c0c5-4c83-994b-c5ac24785218"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1412 - Nonlocal Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1412"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3492d949-0dbb-4589-88b3-7b59601cc764",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3492d949-0dbb-4589-88b3-7b59601cc764"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1475 - Emergency Lighting",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1475"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/34a63848-30cf-4081-937e-ce1a1c885501",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "34a63848-30cf-4081-937e-ce1a1c885501"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1060 - Remote Access",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1060"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/34a987fd-2003-45de-a120-014956581f2b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "34a987fd-2003-45de-a120-014956581f2b"
          },
          {
            "properties": {
              "displayName": "Storage accounts should restrict network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Network access to storage accounts should be restricted. Configure network rules so only applications from allowed networks can access the storage account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges",
              "metadata": {
                "version": "1.1.1",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                      "notEquals": "Deny"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "34c877ad-507e-4c82-993e-3452a6e0ad3c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1341 - Authenticator Management | Multiple Information System Accounts",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1341"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/34cb7e92-fe4c-4826-b51e-8cd203fa5d35",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "34cb7e92-fe4c-4826-b51e-8cd203fa5d35"
          },
          {
            "properties": {
              "displayName": "Resource logs in Logic Apps should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
              "metadata": {
                "version": "5.0.0",
                "category": "Logic Apps"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "requiredRetentionDays": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Required retention (days)",
                    "description": "The required resource logs retention in days"
                  },
                  "defaultValue": "365"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Logic/workflows"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "existenceCondition": {
                      "count": {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                        "where": {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                      "equals": "0"
                                    },
                                    {
                                      "value": "[padLeft(current(\u0027Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days\u0027), 3, \u00270\u0027)]",
                                      "greaterOrEquals": "[padLeft(parameters(\u0027requiredRetentionDays\u0027), 3, \u00270\u0027)]"
                                    }
                                  ]
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                      "notEquals": "true"
                                    },
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                      "exists": false
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "34f95f76-5386-4de7-b824-0d8478470c9d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1210 - Configuration Settings",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1210"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3502c968-c490-4570-8167-1476f955e9b8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3502c968-c490-4570-8167-1476f955e9b8"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs that do not have a maximum password age of 70 days",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines that do not have a maximum password age of 70 days. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "2.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "MaximumPasswordAge",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "MaximumPasswordAge"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/356a906e-05e5-4625-8729-90771e0ee934",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "356a906e-05e5-4625-8729-90771e0ee934"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027System Audit Policies - Object Access\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027System Audit Policies - Object Access\u0027 for auditing file, registry, SAM, storage, filtering, kernel, and other system types. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SystemAuditPoliciesObjectAccess",
                  "version": "1.*",
                  "configurationParameter": {
                    "AuditDetailedFileShare": "Audit Detailed File Share;ExpectedValue",
                    "AuditFileShare": "Audit File Share;ExpectedValue",
                    "AuditFileSystem": "Audit File System;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "AuditDetailedFileShare": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Detailed File Share",
                    "description": "If this policy setting is enabled, access to all shared files and folders on the system is audited. Auditing for Success can lead to very high volumes of events."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "No Auditing"
                },
                "AuditFileShare": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit File Share",
                    "description": "Specifies whether to audit events related to file shares: creation, deletion, modification, and access attempts. Also, it shows failed SMB SPN checks. Event volumes can be high on DCs and File Servers."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "No Auditing"
                },
                "AuditFileSystem": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit File System",
                    "description": "Specifies whether audit events are generated when users attempt to access file system objects. Audit events are generated only for objects that have configured system access control lists (SACLs)."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "No Auditing"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesObjectAccess",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Audit Detailed File Share;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditDetailedFileShare\u0027), \u0027,\u0027, \u0027Audit File Share;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditFileShare\u0027), \u0027,\u0027, \u0027Audit File System;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditFileSystem\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/35781875-8026-4628-b19b-f6efb4d88a1d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "35781875-8026-4628-b19b-f6efb4d88a1d"
          },
          {
            "properties": {
              "displayName": "CORS should not allow every resource to access your API App",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your API app. Allow only required domains to interact with your API app.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "*api"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                      "notEquals": "*"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/358c20a6-3f9e-4f0e-97ff-c6ce485e2aac",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "358c20a6-3f9e-4f0e-97ff-c6ce485e2aac"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1659 - Architecture And Provisioning For Name / Address Resolution Service",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1659"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/35a4102f-a778-4a2e-98c2-971056288df8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "35a4102f-a778-4a2e-98c2-971056288df8"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Windows Firewall Properties\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Windows Firewall Properties\u0027 for firewall state, connections, rule management, and notifications. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_WindowsFirewallProperties",
                  "version": "1.*",
                  "configurationParameter": {
                    "WindowsFirewallDomainUseProfileSettings": "Windows Firewall: Domain: Firewall state;ExpectedValue",
                    "WindowsFirewallDomainBehaviorForOutboundConnections": "Windows Firewall: Domain: Outbound connections;ExpectedValue",
                    "WindowsFirewallDomainApplyLocalConnectionSecurityRules": "Windows Firewall: Domain: Settings: Apply local connection security rules;ExpectedValue",
                    "WindowsFirewallDomainApplyLocalFirewallRules": "Windows Firewall: Domain: Settings: Apply local firewall rules;ExpectedValue",
                    "WindowsFirewallDomainDisplayNotifications": "Windows Firewall: Domain: Settings: Display a notification;ExpectedValue",
                    "WindowsFirewallPrivateUseProfileSettings": "Windows Firewall: Private: Firewall state;ExpectedValue",
                    "WindowsFirewallPrivateBehaviorForOutboundConnections": "Windows Firewall: Private: Outbound connections;ExpectedValue",
                    "WindowsFirewallPrivateApplyLocalConnectionSecurityRules": "Windows Firewall: Private: Settings: Apply local connection security rules;ExpectedValue",
                    "WindowsFirewallPrivateApplyLocalFirewallRules": "Windows Firewall: Private: Settings: Apply local firewall rules;ExpectedValue",
                    "WindowsFirewallPrivateDisplayNotifications": "Windows Firewall: Private: Settings: Display a notification;ExpectedValue",
                    "WindowsFirewallPublicUseProfileSettings": "Windows Firewall: Public: Firewall state;ExpectedValue",
                    "WindowsFirewallPublicBehaviorForOutboundConnections": "Windows Firewall: Public: Outbound connections;ExpectedValue",
                    "WindowsFirewallPublicApplyLocalConnectionSecurityRules": "Windows Firewall: Public: Settings: Apply local connection security rules;ExpectedValue",
                    "WindowsFirewallPublicApplyLocalFirewallRules": "Windows Firewall: Public: Settings: Apply local firewall rules;ExpectedValue",
                    "WindowsFirewallPublicDisplayNotifications": "Windows Firewall: Public: Settings: Display a notification;ExpectedValue",
                    "WindowsFirewallDomainAllowUnicastResponse": "Windows Firewall: Domain: Allow unicast response;ExpectedValue",
                    "WindowsFirewallPrivateAllowUnicastResponse": "Windows Firewall: Private: Allow unicast response;ExpectedValue",
                    "WindowsFirewallPublicAllowUnicastResponse": "Windows Firewall: Public: Allow unicast response;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "WindowsFirewallDomainUseProfileSettings": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Domain): Use profile settings",
                    "description": "Specifies whether Windows Firewall with Advanced Security uses the settings for the Domain profile to filter network traffic. If you select Off, Windows Firewall with Advanced Security will not use any of the firewall rules or connection security rules for this profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallDomainBehaviorForOutboundConnections": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Domain): Behavior for outbound connections",
                    "description": "Specifies the behavior for outbound connections for the Domain profile that do not match an outbound firewall rule. The default value of 0 means to allow connections, and a value of 1 means to block connections."
                  },
                  "defaultValue": "0"
                },
                "WindowsFirewallDomainApplyLocalConnectionSecurityRules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Domain): Apply local connection security rules",
                    "description": "Specifies whether local administrators are allowed to create connection security rules that apply together with connection security rules configured by Group Policy for the Domain profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallDomainApplyLocalFirewallRules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Domain): Apply local firewall rules",
                    "description": "Specifies whether local administrators are allowed to create local firewall rules that apply together with firewall rules configured by Group Policy for the Domain profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallDomainDisplayNotifications": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Domain): Display notifications",
                    "description": "Specifies whether Windows Firewall with Advanced Security displays notifications to the user when a program is blocked from receiving inbound connections, for the Domain profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPrivateUseProfileSettings": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Private): Use profile settings",
                    "description": "Specifies whether Windows Firewall with Advanced Security uses the settings for the Private profile to filter network traffic. If you select Off, Windows Firewall with Advanced Security will not use any of the firewall rules or connection security rules for this profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPrivateBehaviorForOutboundConnections": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Private): Behavior for outbound connections",
                    "description": "Specifies the behavior for outbound connections for the Private profile that do not match an outbound firewall rule. The default value of 0 means to allow connections, and a value of 1 means to block connections."
                  },
                  "defaultValue": "0"
                },
                "WindowsFirewallPrivateApplyLocalConnectionSecurityRules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Private): Apply local connection security rules",
                    "description": "Specifies whether local administrators are allowed to create connection security rules that apply together with connection security rules configured by Group Policy for the Private profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPrivateApplyLocalFirewallRules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Private): Apply local firewall rules",
                    "description": "Specifies whether local administrators are allowed to create local firewall rules that apply together with firewall rules configured by Group Policy for the Private profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPrivateDisplayNotifications": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Private): Display notifications",
                    "description": "Specifies whether Windows Firewall with Advanced Security displays notifications to the user when a program is blocked from receiving inbound connections, for the Private profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPublicUseProfileSettings": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Public): Use profile settings",
                    "description": "Specifies whether Windows Firewall with Advanced Security uses the settings for the Public profile to filter network traffic. If you select Off, Windows Firewall with Advanced Security will not use any of the firewall rules or connection security rules for this profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPublicBehaviorForOutboundConnections": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Public): Behavior for outbound connections",
                    "description": "Specifies the behavior for outbound connections for the Public profile that do not match an outbound firewall rule. The default value of 0 means to allow connections, and a value of 1 means to block connections."
                  },
                  "defaultValue": "0"
                },
                "WindowsFirewallPublicApplyLocalConnectionSecurityRules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Public): Apply local connection security rules",
                    "description": "Specifies whether local administrators are allowed to create connection security rules that apply together with connection security rules configured by Group Policy for the Public profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPublicApplyLocalFirewallRules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Public): Apply local firewall rules",
                    "description": "Specifies whether local administrators are allowed to create local firewall rules that apply together with firewall rules configured by Group Policy for the Public profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallPublicDisplayNotifications": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall (Public): Display notifications",
                    "description": "Specifies whether Windows Firewall with Advanced Security displays notifications to the user when a program is blocked from receiving inbound connections, for the Public profile."
                  },
                  "defaultValue": "1"
                },
                "WindowsFirewallDomainAllowUnicastResponse": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall: Domain: Allow unicast response",
                    "description": "Specifies whether Windows Firewall with Advanced Security permits the local computer to receive unicast responses to its outgoing multicast or broadcast messages; for the Domain profile."
                  },
                  "defaultValue": "0"
                },
                "WindowsFirewallPrivateAllowUnicastResponse": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall: Private: Allow unicast response",
                    "description": "Specifies whether Windows Firewall with Advanced Security permits the local computer to receive unicast responses to its outgoing multicast or broadcast messages; for the Private profile."
                  },
                  "defaultValue": "0"
                },
                "WindowsFirewallPublicAllowUnicastResponse": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Windows Firewall: Public: Allow unicast response",
                    "description": "Specifies whether Windows Firewall with Advanced Security permits the local computer to receive unicast responses to its outgoing multicast or broadcast messages; for the Public profile."
                  },
                  "defaultValue": "1"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_WindowsFirewallProperties",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Windows Firewall: Domain: Firewall state;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallDomainUseProfileSettings\u0027), \u0027,\u0027, \u0027Windows Firewall: Domain: Outbound connections;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallDomainBehaviorForOutboundConnections\u0027), \u0027,\u0027, \u0027Windows Firewall: Domain: Settings: Apply local connection security rules;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallDomainApplyLocalConnectionSecurityRules\u0027), \u0027,\u0027, \u0027Windows Firewall: Domain: Settings: Apply local firewall rules;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallDomainApplyLocalFirewallRules\u0027), \u0027,\u0027, \u0027Windows Firewall: Domain: Settings: Display a notification;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallDomainDisplayNotifications\u0027), \u0027,\u0027, \u0027Windows Firewall: Private: Firewall state;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPrivateUseProfileSettings\u0027), \u0027,\u0027, \u0027Windows Firewall: Private: Outbound connections;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPrivateBehaviorForOutboundConnections\u0027), \u0027,\u0027, \u0027Windows Firewall: Private: Settings: Apply local connection security rules;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPrivateApplyLocalConnectionSecurityRules\u0027), \u0027,\u0027, \u0027Windows Firewall: Private: Settings: Apply local firewall rules;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPrivateApplyLocalFirewallRules\u0027), \u0027,\u0027, \u0027Windows Firewall: Private: Settings: Display a notification;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPrivateDisplayNotifications\u0027), \u0027,\u0027, \u0027Windows Firewall: Public: Firewall state;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPublicUseProfileSettings\u0027), \u0027,\u0027, \u0027Windows Firewall: Public: Outbound connections;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPublicBehaviorForOutboundConnections\u0027), \u0027,\u0027, \u0027Windows Firewall: Public: Settings: Apply local connection security rules;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPublicApplyLocalConnectionSecurityRules\u0027), \u0027,\u0027, \u0027Windows Firewall: Public: Settings: Apply local firewall rules;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPublicApplyLocalFirewallRules\u0027), \u0027,\u0027, \u0027Windows Firewall: Public: Settings: Display a notification;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPublicDisplayNotifications\u0027), \u0027,\u0027, \u0027Windows Firewall: Domain: Allow unicast response;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallDomainAllowUnicastResponse\u0027), \u0027,\u0027, \u0027Windows Firewall: Private: Allow unicast response;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPrivateAllowUnicastResponse\u0027), \u0027,\u0027, \u0027Windows Firewall: Public: Allow unicast response;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027WindowsFirewallPublicAllowUnicastResponse\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/35d9882c-993d-44e6-87d2-db66ce21b636",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "35d9882c-993d-44e6-87d2-db66ce21b636"
          },
          {
            "properties": {
              "displayName": "Gateway subnets should not be configured with a network security group",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy denies if a gateway subnet is configured with a network security group. Assigning a network security group to a gateway subnet will cause the gateway to stop functioning.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                      "field": "name",
                      "equals": "GatewaySubnet"
                    },
                    {
                      "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                      "exists": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/35f9c03a-cc27-418e-9c0c-539ff999d010",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "35f9c03a-cc27-418e-9c0c-539ff999d010"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1043 - Least Privilege | Prohibit Non-Privileged Users From Executing Privileged Functions",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1043"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/361a77f6-0f9c-4748-8eec-bc13aaaa2455",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "361a77f6-0f9c-4748-8eec-bc13aaaa2455"
          },
          {
            "properties": {
              "displayName": "Deploy Advanced Threat Protection on storage accounts",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy enables Advanced Threat Protection on storage accounts.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/advancedThreatProtectionSettings",
                    "name": "current",
                    "existenceCondition": {
                      "field": "Microsoft.Security/advancedThreatProtectionSettings/isEnabled",
                      "equals": "true"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "storageAccountName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "apiVersion": "2019-01-01",
                              "type": "Microsoft.Storage/storageAccounts/providers/advancedThreatProtectionSettings",
                              "name": "[concat(parameters(\u0027storageAccountName\u0027), \u0027/Microsoft.Security/current\u0027)]",
                              "properties": {
                                "isEnabled": true
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "storageAccountName": {
                            "value": "[field(\u0027name\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/361c2074-3595-4e5d-8cab-4f21dffc835c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "361c2074-3595-4e5d-8cab-4f21dffc835c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1313 - Identifier Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1313"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36220f5b-79a1-4cdb-8c74-2d2449f9a510",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36220f5b-79a1-4cdb-8c74-2d2449f9a510"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1630 - Boundary Protection | External Telecommunications Services",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1630"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3643717a-3897-4bfd-8530-c7c96b26b2a0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3643717a-3897-4bfd-8530-c7c96b26b2a0"
          },
          {
            "properties": {
              "displayName": "Automation account variables should be encrypted",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "It is important to enable encryption of Automation account variable assets when storing sensitive data",
              "metadata": {
                "version": "1.1.0",
                "category": "Automation"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Automation/automationAccounts/variables"
                    },
                    {
                      "field": "Microsoft.Automation/automationAccounts/variables/isEncrypted",
                      "notEquals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3657f5a0-770e-44a3-b44e-9431ba1e9735"
          },
          {
            "properties": {
              "displayName": "Windows virtual machine scale sets should have Azure Monitor Agent installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows virtual machine scale sets should be monitored and secured through the deployed Azure Monitor Agent. The Azure Monitor Agent collects telemetry data from the guest OS. Virtual machine scale sets with supported OS and in supported regions are monitored for Azure Monitor Agent deployment. Learn more: https://aka.ms/AMAOverview.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "listOfWindowsImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Additional Virtual Machine Images",
                    "description": "List of virtual machine images that have supported Windows OS to add to scope. Example values: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "location",
                      "in": [
                        "australiacentral",
                        "australiaeast",
                        "australiasoutheast",
                        "brazilsouth",
                        "canadacentral",
                        "canadaeast",
                        "centralindia",
                        "centralus",
                        "eastasia",
                        "eastus2euap",
                        "eastus",
                        "eastus2",
                        "francecentral",
                        "germanywestcentral",
                        "japaneast",
                        "japanwest",
                        "jioindiawest",
                        "koreacentral",
                        "koreasouth",
                        "northcentralus",
                        "northeurope",
                        "norwayeast",
                        "southafricanorth",
                        "southcentralus",
                        "southeastasia",
                        "southindia",
                        "switzerlandnorth",
                        "uaenorth",
                        "uksouth",
                        "ukwest",
                        "westcentralus",
                        "westeurope",
                        "westindia",
                        "westus",
                        "westus2"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfWindowsImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2019-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "AzureMonitorWindowsAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitor"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3672e6f7-a74d-4763-b138-fcf332042f8f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3672e6f7-a74d-4763-b138-fcf332042f8f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1339 - Authenticator Management | Protection Of Authenticators",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1339"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/367ae386-db7f-4167-b672-984ff86277c0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "367ae386-db7f-4167-b672-984ff86277c0"
          },
          {
            "properties": {
              "displayName": "Configure AAD integrated Azure Kubernetes Service Clusters with required Admin Group Access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Ensure to improve cluster security by centrally govern Administrator access to Azure Active Directory integrated AKS clusters.",
              "metadata": {
                "version": "1.0.0",
                "category": "Kubernetes"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "adminGroupObjectIDs": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "AKS Administrator Group Object IDs",
                    "description": "Array of the existing AKS Administrator Group Object ID to ensure administration access to the cluster. Empty array will remove all admin access."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/aadProfile",
                      "exists": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.ContainerService/managedClusters",
                    "name": "[field(\u0027name\u0027)]",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "count": {
                            "field": "Microsoft.ContainerService/managedClusters/aadProfile.adminGroupObjectIDs[*]",
                            "where": {
                              "field": "Microsoft.ContainerService/managedClusters/aadProfile.adminGroupObjectIDs[*]",
                              "in": "[parameters(\u0027adminGroupObjectIDs\u0027)]"
                            }
                          },
                          "equals": "[length(parameters(\u0027adminGroupObjectIDs\u0027))]"
                        },
                        {
                          "count": {
                            "field": "Microsoft.ContainerService/managedClusters/aadProfile.adminGroupObjectIDs[*]"
                          },
                          "equals": "[length(parameters(\u0027adminGroupObjectIDs\u0027))]"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "clusterName": {
                              "type": "string"
                            },
                            "clusterResourceGroupName": {
                              "type": "string"
                            },
                            "adminGroupObjectIDs": {
                              "type": "array"
                            }
                          },
                          "variables": {
                            "clusterGetDeploymentName": "[concat(\u0027PolicyDeployment-Get-\u0027, parameters(\u0027clusterName\u0027))]",
                            "clusterUpdateDeploymentName": "[concat(\u0027PolicyDeployment-Update-\u0027, parameters(\u0027clusterName\u0027))]"
                          },
                          "resources": [
                            {
                              "apiVersion": "2020-06-01",
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027clusterGetDeploymentName\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "resources": [],
                                  "outputs": {
                                    "aksCluster": {
                                      "type": "object",
                                      "value": "[reference(resourceId(parameters(\u0027clusterResourceGroupName\u0027), \u0027Microsoft.ContainerService/managedClusters\u0027, parameters(\u0027clusterName\u0027)), \u00272021-07-01\u0027, \u0027Full\u0027)]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "apiVersion": "2020-06-01",
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027clusterUpdateDeploymentName\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "aksClusterName": {
                                      "type": "string"
                                    },
                                    "aksClusterContent": {
                                      "type": "object"
                                    },
                                    "adminGroupObjectIDs": {
                                      "type": "array"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "apiVersion": "2021-07-01",
                                      "type": "Microsoft.ContainerService/managedClusters",
                                      "name": "[parameters(\u0027aksClusterName\u0027)]",
                                      "location": "[parameters(\u0027aksClusterContent\u0027).location]",
                                      "sku": "[parameters(\u0027aksClusterContent\u0027).sku]",
                                      "tags": "[if(contains(parameters(\u0027aksClusterContent\u0027), \u0027tags\u0027), parameters(\u0027aksClusterContent\u0027).tags, json(\u0027null\u0027))]",
                                      "properties": {
                                        "kubernetesVersion": "[parameters(\u0027aksClusterContent\u0027).properties.kubernetesVersion]",
                                        "dnsPrefix": "[parameters(\u0027aksClusterContent\u0027).properties.dnsPrefix]",
                                        "agentPoolProfiles": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027agentPoolProfiles\u0027), parameters(\u0027aksClusterContent\u0027).properties.agentPoolProfiles, json(\u0027null\u0027))]",
                                        "linuxProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027linuxProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.linuxProfile, json(\u0027null\u0027))]",
                                        "windowsProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027windowsProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.windowsProfile, json(\u0027null\u0027))]",
                                        "servicePrincipalProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027servicePrincipalProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.servicePrincipalProfile, json(\u0027null\u0027))]",
                                        "addonProfiles": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027addonProfiles\u0027), parameters(\u0027aksClusterContent\u0027).properties.addonProfiles, json(\u0027null\u0027))]",
                                        "nodeResourceGroup": "[parameters(\u0027aksClusterContent\u0027).properties.nodeResourceGroup]",
                                        "enableRBAC": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027enableRBAC\u0027), parameters(\u0027aksClusterContent\u0027).properties.enableRBAC, json(\u0027null\u0027))]",
                                        "enablePodSecurityPolicy": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027enablePodSecurityPolicy\u0027), parameters(\u0027aksClusterContent\u0027).properties.enablePodSecurityPolicy, json(\u0027null\u0027))]",
                                        "networkProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027networkProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.networkProfile, json(\u0027null\u0027))]",
                                        "aadProfile": {
                                          "adminGroupObjectIds": "[parameters(\u0027adminGroupObjectIDs\u0027)]",
                                          "managed": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties.aadProfile, \u0027managed\u0027), parameters(\u0027aksClusterContent\u0027).properties.aadProfile.managed, json(\u0027null\u0027))]",
                                          "enableAzureRBAC": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties.aadProfile, \u0027enableAzureRBAC\u0027), parameters(\u0027aksClusterContent\u0027).properties.aadProfile.enableAzureRBAC, json(\u0027null\u0027))]",
                                          "tenantID": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties.aadProfile, \u0027tenantID\u0027), parameters(\u0027aksClusterContent\u0027).properties.aadProfile.tenantID, json(\u0027null\u0027))]",
                                          "clientAppID": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties.aadProfile, \u0027clientAppID\u0027), parameters(\u0027aksClusterContent\u0027).properties.aadProfile.clientAppID, json(\u0027null\u0027))]",
                                          "serverAppID": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties.aadProfile, \u0027serverAppID\u0027), parameters(\u0027aksClusterContent\u0027).properties.aadProfile.serverAppID, json(\u0027null\u0027))]",
                                          "serverAppSecret": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties.aadProfile, \u0027serverAppSecret\u0027), parameters(\u0027aksClusterContent\u0027).properties.aadProfile.serverAppSecret, json(\u0027null\u0027))]"
                                        },
                                        "autoScalerProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027autoScalerProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.autoScalerProfile, json(\u0027null\u0027))]",
                                        "autoUpgradeProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027autoUpgradeProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.autoUpgradeProfile, json(\u0027null\u0027))]",
                                        "apiServerAccessProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027apiServerAccessProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.apiServerAccessProfile, json(\u0027null\u0027))]",
                                        "diskEncryptionSetID": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027diskEncryptionSetID\u0027), parameters(\u0027aksClusterContent\u0027).properties.diskEncryptionSetID, json(\u0027null\u0027))]",
                                        "disableLocalAccounts": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027disableLocalAccounts\u0027), parameters(\u0027aksClusterContent\u0027).properties.disableLocalAccounts, json(\u0027null\u0027))]",
                                        "fqdnSubdomain": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027fqdnSubdomain\u0027), parameters(\u0027aksClusterContent\u0027).properties.fqdnSubdomain, json(\u0027null\u0027))]",
                                        "httpProxyConfig": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027httpProxyConfig\u0027), parameters(\u0027aksClusterContent\u0027).properties.httpProxyConfig, json(\u0027null\u0027))]",
                                        "podIdentityProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027podIdentityProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.podIdentityProfile, json(\u0027null\u0027))]",
                                        "privateLinkResources": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027privateLinkResources\u0027), parameters(\u0027aksClusterContent\u0027).properties.privateLinkResources, json(\u0027null\u0027))]",
                                        "securityProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027securityProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.securityProfile, json(\u0027null\u0027))]",
                                        "identityProfile": "[if(contains(parameters(\u0027aksClusterContent\u0027).properties, \u0027identityProfile\u0027), parameters(\u0027aksClusterContent\u0027).properties.identityProfile, json(\u0027null\u0027))]"
                                      }
                                    }
                                  ],
                                  "outputs": {}
                                },
                                "parameters": {
                                  "aksClusterName": {
                                    "value": "[parameters(\u0027clusterName\u0027)]"
                                  },
                                  "aksClusterContent": {
                                    "value": "[reference(variables(\u0027clusterGetDeploymentName\u0027)).outputs.aksCluster.value]"
                                  },
                                  "adminGroupObjectIDs": {
                                    "value": "[parameters(\u0027adminGroupObjectIDs\u0027)]"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "clusterName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "clusterResourceGroupName": {
                            "value": "[resourceGroup().name]"
                          },
                          "adminGroupObjectIDs": {
                            "value": "[parameters(\u0027adminGroupObjectIDs\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36a27de4-199b-40fb-b336-945a8475d6c5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36a27de4-199b-40fb-b336-945a8475d6c5"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1685 - Information System Monitoring",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1685"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36b0ef30-366f-4b1b-8652-a3511df11f53",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36b0ef30-366f-4b1b-8652-a3511df11f53"
          },
          {
            "properties": {
              "displayName": "Configure Azure Defender to be enabled on SQL servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable Azure Defender on your Azure SQL Servers to detect anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases.",
              "metadata": {
                "version": "2.1.0",
                "category": "SQL"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "field": "kind",
                      "notContains": "analytics"
                    }
                  ]
                },
                "then": {
                  "effect": "DeployIfNotExists",
                  "details": {
                    "type": "Microsoft.Sql/servers/securityAlertPolicies",
                    "name": "Default",
                    "existenceCondition": {
                      "field": "Microsoft.Sql/securityAlertPolicies.state",
                      "equals": "Enabled"
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "serverName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027serverName\u0027), \u0027/Default\u0027)]",
                              "type": "Microsoft.Sql/servers/securityAlertPolicies",
                              "apiVersion": "2020-11-01-preview",
                              "properties": {
                                "state": "Enabled"
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "serverName": {
                            "value": "[field(\u0027name\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36d49e87-48c4-4f2e-beed-ba4ed02b71f5"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027Security Options - Network Security\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - Network Security\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "NetworkSecurityConfigureEncryptionTypesAllowedForKerberos": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network Security: Configure encryption types allowed for Kerberos",
                    "description": "Specifies the encryption types that Kerberos is allowed to use."
                  },
                  "defaultValue": "2147483644"
                },
                "NetworkSecurityLANManagerAuthenticationLevel": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: LAN Manager authentication level",
                    "description": "Specify which challenge-response authentication protocol is used for network logons. This choice affects the level of authentication protocol used by clients, the level of session security negotiated, and the level of authentication accepted by servers."
                  },
                  "defaultValue": "5"
                },
                "NetworkSecurityLDAPClientSigningRequirements": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: LDAP client signing requirements",
                    "description": "Specify the level of data signing that is requested on behalf of clients that issue LDAP BIND requests."
                  },
                  "defaultValue": "1"
                },
                "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients",
                    "description": "Specifies which behaviors are allowed by clients for applications using the NTLM Security Support Provider (SSP). The SSP Interface (SSPI) is used by applications that need authentication services. See https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-minimum-session-security-for-ntlm-ssp-based-including-secure-rpc-servers for more information."
                  },
                  "defaultValue": "537395200"
                },
                "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers",
                    "description": "Specifies which behaviors are allowed by servers for applications using the NTLM Security Support Provider (SSP). The SSP Interface (SSPI) is used by applications that need authentication services."
                  },
                  "defaultValue": "537395200"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsNetworkSecurity",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027Network Security: Configure encryption types allowed for Kerberos;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityConfigureEncryptionTypesAllowedForKerberos\u0027), \u0027,\u0027, \u0027Network security: LAN Manager authentication level;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityLANManagerAuthenticationLevel\u0027), \u0027,\u0027, \u0027Network security: LDAP client signing requirements;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityLDAPClientSigningRequirements\u0027), \u0027,\u0027, \u0027Network security: Minimum session security for NTLM SSP based (including secure RPC) clients;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients\u0027), \u0027,\u0027, \u0027Network security: Minimum session security for NTLM SSP based (including secure RPC) servers;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SecurityOptionsNetworkSecurity"
                          },
                          "NetworkSecurityConfigureEncryptionTypesAllowedForKerberos": {
                            "value": "[parameters(\u0027NetworkSecurityConfigureEncryptionTypesAllowedForKerberos\u0027)]"
                          },
                          "NetworkSecurityLANManagerAuthenticationLevel": {
                            "value": "[parameters(\u0027NetworkSecurityLANManagerAuthenticationLevel\u0027)]"
                          },
                          "NetworkSecurityLDAPClientSigningRequirements": {
                            "value": "[parameters(\u0027NetworkSecurityLDAPClientSigningRequirements\u0027)]"
                          },
                          "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients": {
                            "value": "[parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients\u0027)]"
                          },
                          "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers": {
                            "value": "[parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "NetworkSecurityConfigureEncryptionTypesAllowedForKerberos": {
                              "type": "string"
                            },
                            "NetworkSecurityLANManagerAuthenticationLevel": {
                              "type": "string"
                            },
                            "NetworkSecurityLDAPClientSigningRequirements": {
                              "type": "string"
                            },
                            "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients": {
                              "type": "string"
                            },
                            "NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Network Security: Configure encryption types allowed for Kerberos;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityConfigureEncryptionTypesAllowedForKerberos\u0027)]"
                                    },
                                    {
                                      "name": "Network security: LAN Manager authentication level;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityLANManagerAuthenticationLevel\u0027)]"
                                    },
                                    {
                                      "name": "Network security: LDAP client signing requirements;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityLDAPClientSigningRequirements\u0027)]"
                                    },
                                    {
                                      "name": "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients\u0027)]"
                                    },
                                    {
                                      "name": "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Network Security: Configure encryption types allowed for Kerberos;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityConfigureEncryptionTypesAllowedForKerberos\u0027)]"
                                    },
                                    {
                                      "name": "Network security: LAN Manager authentication level;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityLANManagerAuthenticationLevel\u0027)]"
                                    },
                                    {
                                      "name": "Network security: LDAP client signing requirements;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityLDAPClientSigningRequirements\u0027)]"
                                    },
                                    {
                                      "name": "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCClients\u0027)]"
                                    },
                                    {
                                      "name": "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers;ExpectedValue",
                                      "value": "[parameters(\u0027NetworkSecurityMinimumSessionSecurityForNTLMSSPBasedIncludingSecureRPCServers\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36e17963-7202-494a-80c3-f508211c826b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36e17963-7202-494a-80c3-f508211c826b"
          },
          {
            "properties": {
              "displayName": "Modify - Configure Azure Event Grid topics to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for Azure Event Grid resource so that it isn\u0027t accessible over the public internet. This will help protect them against data leakage risks. You can limit exposure of the your resources by creating private endpoints instead. Learn more at: https://aka.ms/privateendpoints.",
              "metadata": {
                "category": "Event Grid",
                "version": "1.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/topics"
                    },
                    {
                      "field": "kind",
                      "notEquals": "AzureArc"
                    },
                    {
                      "field": "Microsoft.EventGrid/topics/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/1e241071-0855-49ea-94dc-649edcd759de"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272020-04-01-preview\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.EventGrid/topics/publicNetworkAccess",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36ea4b4b-0f7f-4a54-89fa-ab18f555a172",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36ea4b4b-0f7f-4a54-89fa-ab18f555a172"
          },
          {
            "properties": {
              "displayName": "Deploy - Configure Azure Event Grid domains with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints lets you connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to your resources, they\u0027ll be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Grid"
              },
              "parameters": {
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private endpoint subnet id",
                    "description": "Specifies the subnet to use to configure private endpoint",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/domains"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.EventGrid/domains/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.EventGrid/domains/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                      "/providers/Microsoft.Authorization/roleDefinitions/1e241071-0855-49ea-94dc-649edcd759de"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "serviceId": {
                              "type": "string"
                            },
                            "privateEndpointSubnetId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "privateEndpointName": "[concat(\u0027pe-\u0027,substring(parameters(\u0027name\u0027),0,min(length(parameters(\u0027name\u0027)),50)),\u0027-\u0027,uniquestring(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027privateEndpointName\u0027)]",
                              "apiVersion": "2020-06-01",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "serviceId": {
                                      "type": "string"
                                    },
                                    "privateEndpointSubnetId": {
                                      "type": "string"
                                    },
                                    "subnetLocation": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "privateEndpointName": "[deployment().name]"
                                  },
                                  "resources": [
                                    {
                                      "name": "[variables(\u0027privateEndpointName\u0027)]",
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2020-07-01",
                                      "location": "[parameters(\u0027subnetLocation\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "subnet": {
                                          "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                        },
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[variables(\u0027privateEndpointName\u0027)]",
                                            "properties": {
                                              "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                              "groupIds": [
                                                "domain"
                                              ],
                                              "requestMessage": "autoapprove"
                                            }
                                          }
                                        ],
                                        "manualPrivateLinkServiceConnections": []
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "serviceId": {
                                    "value": "[parameters(\u0027serviceId\u0027)]"
                                  },
                                  "privateEndpointSubnetId": {
                                    "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                  },
                                  "subnetLocation": {
                                    "value": "[reference(first(take(split(parameters(\u0027privateEndpointSubnetId\u0027),\u0027/subnets\u0027),1)),\u00272020-07-01\u0027,\u0027Full\u0027).location]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36f4658a-848a-467b-881c-e6fa20cf75fc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36f4658a-848a-467b-881c-e6fa20cf75fc"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1557 - Vulnerability Scanning | Review Historic Audit Logs",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1557"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/36fbe499-f2f2-41b6-880e-52d7ea1d94a5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "36fbe499-f2f2-41b6-880e-52d7ea1d94a5"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027Security Options - Interactive Logon\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - Interactive Logon\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsInteractiveLogon",
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SecurityOptionsInteractiveLogon"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*"
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3750712b-43d0-478e-9966-d2c26f6141b9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3750712b-43d0-478e-9966-d2c26f6141b9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1624 - Boundary Protection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1624"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/37d079e3-d6aa-4263-a069-dd7ac6dd9684",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "37d079e3-d6aa-4263-a069-dd7ac6dd9684"
          },
          {
            "properties": {
              "displayName": "Storage accounts should be migrated to new Azure Resource Manager resources",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use new Azure Resource Manager for your storage accounts to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.ClassicStorage/storageAccounts",
                        "Microsoft.Storage/StorageAccounts"
                      ]
                    },
                    {
                      "value": "[field(\u0027type\u0027)]",
                      "equals": "Microsoft.ClassicStorage/storageAccounts"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "37e0d2fe-28a5-43d6-a273-67d37d1f5606"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1335 - Authenticator Management | Pki-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1335"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/382016f3-d4ba-4e15-9716-55077ec4dc2a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "382016f3-d4ba-4e15-9716-55077ec4dc2a"
          },
          {
            "properties": {
              "displayName": "Resource logs in IoT Hub should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
              "metadata": {
                "version": "3.0.1",
                "category": "Internet of Things"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "requiredRetentionDays": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Required retention (days)",
                    "description": "The required resource logs retention in days"
                  },
                  "defaultValue": "365"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Devices/IotHubs"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "existenceCondition": {
                      "count": {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                        "where": {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                      "equals": "0"
                                    },
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                      "greaterOrEquals": "[parameters(\u0027requiredRetentionDays\u0027)]"
                                    }
                                  ]
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "not": {
                                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                    "equals": "true"
                                  }
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/383856f8-de7f-44a2-81fc-e5135b5c2aa4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "383856f8-de7f-44a2-81fc-e5135b5c2aa4"
          },
          {
            "properties": {
              "displayName": "Deploy the Windows Guest Configuration extension to enable Guest Configuration assignments on Windows VMs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy deploys the Windows Guest Configuration extension to Windows virtual machines hosted in Azure that are supported by Guest Configuration. The Windows Guest Configuration extension is a prerequisite for all Windows Guest Configuration assignments and must be deployed to machines before using any Windows Guest Configuration policy definition. For more information on Guest Configuration, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.2.0"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "AzurePolicyforWindows",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.GuestConfiguration"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "ConfigurationforWindows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "equals": "Succeeded"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "enableAutomaticUpgrade": true,
                                "settings": {},
                                "protectedSettings": {}
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/385f5831-96d4-41db-9a3c-cd3af78aaae6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "385f5831-96d4-41db-9a3c-cd3af78aaae6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1081 - Information Sharing",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1081"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3867f2a9-23bb-4729-851f-c3ad98580caf",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3867f2a9-23bb-4729-851f-c3ad98580caf"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1522 - Personnel Transfer",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Personnel Security control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1522"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/38b470cc-f939-4a15-80e0-9f0c74f2e2c9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "38b470cc-f939-4a15-80e0-9f0c74f2e2c9"
          },
          {
            "properties": {
              "displayName": "Azure Synapse workspaces should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that the Synapse workspace isn\u0027t exposed on the public internet. Creating private endpoints can limit exposure of your Synapse workspaces. Learn more at: https://docs.microsoft.com/azure/synapse-analytics/security/connectivity-settings.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Synapse/workspaces"
                    },
                    {
                      "field": "Microsoft.Synapse/workspaces/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/38d8df46-cf4e-4073-8e03-48c24b29de0d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "38d8df46-cf4e-4073-8e03-48c24b29de0d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1416 - Nonlocal Maintenance | Document Nonlocal Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1416"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/38dfd8a3-5290-4099-88b7-4081f4c4d8ae",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "38dfd8a3-5290-4099-88b7-4081f4c4d8ae"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1397 - Controlled Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1397"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/391af4ab-1117-46b9-b2c7-78bbd5cd995b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "391af4ab-1117-46b9-b2c7-78bbd5cd995b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1556 - Vulnerability Scanning | Automated Trend Analyses",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1556"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/391ff8b3-afed-405e-9f7d-ef2f8168d5da",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "391ff8b3-afed-405e-9f7d-ef2f8168d5da"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Advanced data security settings for SQL Managed Instance should contain an email address for security alerts",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Ensure that an email address is provided for the \u0027Send alerts to\u0027 field in the advanced data security settings. This email address receives alert notifications when anomalous activities are detected on SQL Managed Instance.",
              "metadata": {
                "version": "1.0.1-deprecated",
                "category": "SQL",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/managedInstances"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Sql/managedInstances/securityAlertPolicies",
                    "name": "default",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/securityAlertPolicies/emailAddresses[*]",
                          "notEquals": ""
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/securityAlertPolicies/emailAddresses[*]",
                          "exists": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3965c43d-b5f4-482e-b74a-d89ee0e0b3a8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3965c43d-b5f4-482e-b74a-d89ee0e0b3a8"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1232 - Configuration Management Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1232"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/396ba986-eac1-4d6d-85c4-d3fda6b78272",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "396ba986-eac1-4d6d-85c4-d3fda6b78272"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1246 - Contingency Plan",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1246"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/398eb61e-8111-40d5-a0c9-003df28f1753",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "398eb61e-8111-40d5-a0c9-003df28f1753"
          },
          {
            "properties": {
              "displayName": "FTPS only should be required in your Function App",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable FTPS enforcement for enhanced security",
              "metadata": {
                "version": "2.0.0",
                "category": "App Service"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "functionapp*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/ftpsState",
                      "in": [
                        "FtpsOnly",
                        "Disabled"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "399b2637-a50f-4f95-96f8-3a145476eb15"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1680 - Malicious Code Protection | Central Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1680"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/399cd6ee-0e18-41db-9dea-cde3bd712f38",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "399cd6ee-0e18-41db-9dea-cde3bd712f38"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1228 - Information System Component Inventory | Accountability Information",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1228"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/39c54140-5902-4079-8bb5-ad31936fe764",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "39c54140-5902-4079-8bb5-ad31936fe764"
          },
          {
            "properties": {
              "displayName": "Synapse managed private endpoints should only connect to resources in approved Azure Active Directory tenants",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Protect your Synapse workspace by only allowing connections to resources in approved Azure Active Directory (Azure AD) tenants. The approved Azure AD tenants can be defined during policy assignment.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "allowedTenantIds": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "List of Allowed Tenant Ids for private endpoint creation",
                    "description": "This parameter defines the list of Allowed Tenant Ids that are allowed to create managed private endpoints in the workspaces"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Synapse/workspaces"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Synapse/workspaces/managedVirtualNetworkSettings.allowedAadTenantIdsForLinking[*]",
                        "where": {
                          "field": "Microsoft.Synapse/workspaces/managedVirtualNetworkSettings.allowedAadTenantIdsForLinking[*]",
                          "notIn": "[parameters(\u0027allowedTenantIds\u0027)]"
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3a003702-13d2-4679-941b-937e58c443f0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3a003702-13d2-4679-941b-937e58c443f0"
          },
          {
            "properties": {
              "displayName": "Infrastructure encryption should be enabled for Azure Database for MySQL servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable infrastructure encryption for Azure Database for MySQL servers to have higher level of assurance that the data is secure. When infrastructure encryption is enabled, the data at rest is encrypted twice using FIPS 140-2 compliant Microsoft managed keys.",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforMySQL/servers"
                    },
                    {
                      "field": "Microsoft.DBforMySQL/servers/infrastructureEncryption",
                      "notEquals": "Enabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3a58212a-c829-4f13-9872-6371df2fd0b4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3a58212a-c829-4f13-9872-6371df2fd0b4"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1039 - Least Privilege | Review Of User Privileges",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1039"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3a7b9de4-a8a2-4672-914d-c5f6752aa7f9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3a7b9de4-a8a2-4672-914d-c5f6752aa7f9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1648 - Collaborative Computing Devices",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1648"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3a9eb14b-495a-4ebb-933c-ce4ef5264e32",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3a9eb14b-495a-4ebb-933c-ce4ef5264e32"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Administrative Templates - Control Panel\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Administrative Templates - Control Panel\u0027 for input personalization and prevention of enabling lock screens. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_AdministrativeTemplatesControlPanel",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_AdministrativeTemplatesControlPanel",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3aa2661b-02d7-4ba6-99bc-dc36b10489fd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3aa2661b-02d7-4ba6-99bc-dc36b10489fd"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1315 - Identifier Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1315"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3aa87116-f1a1-4edb-bfbf-14e036f8d454",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3aa87116-f1a1-4edb-bfbf-14e036f8d454"
          },
          {
            "properties": {
              "displayName": "Azure Active Directory Domain Services managed domains should use TLS 1.2 only mode",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use TLS 1.2 only mode for your managed domains. By default, Azure AD Domain Services enables the use of ciphers such as NTLM v1 and TLS v1. These ciphers may be required for some legacy applications, but are considered weak and can be disabled if you don\u0027t need them. When TLS 1.2 only mode is enabled, any client making a request that is not using TLS 1.2 will fail. Learn more at https://docs.microsoft.com/azure/active-directory-domain-services/secure-your-domain.",
              "metadata": {
                "version": "1.1.0",
                "category": "Azure Active Directory"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.AAD/domainServices"
                    },
                    {
                      "field": "Microsoft.AAD/domainServices/domainSecuritySettings.tlsV1",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3aa87b5a-7813-4b57-8a43-42dd9df5aaa7",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3aa87b5a-7813-4b57-8a43-42dd9df5aaa7"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Pod Security Policies should be defined on Kubernetes Services",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Define Pod Security Policies to reduce the attack vector by removing unnecessary application privileges. It is recommended to configure Pod Security Policies to only allow pods to access the resources which they have permissions to access.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.ContainerService/managedClusters/enablePodSecurityPolicy",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerService/managedClusters/enablePodSecurityPolicy",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3abeb944-26af-43ee-b83d-32aaf060fb94",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3abeb944-26af-43ee-b83d-32aaf060fb94"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1548 - Vulnerability Scanning",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1548"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3afe6c78-6124-4d95-b85c-eb8c0c9539cb",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3afe6c78-6124-4d95-b85c-eb8c0c9539cb"
          },
          {
            "properties": {
              "displayName": "Configure Azure Synapse workspaces with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to Azure Synapse workspaces, you can reduce data leakage risks. Learn more about private links at: https://docs.microsoft.com/azure/synapse-analytics/security/how-to-connect-to-workspace-with-private-links.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse"
              },
              "parameters": {
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private endpoint subnet id",
                    "description": "A subnet with private endpoint network policies disabled",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Synapse/workspaces"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Synapse/workspaces/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Synapse/workspaces/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "serviceId": {
                              "type": "string"
                            },
                            "privateEndpointSubnetId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "privateEndpointName": "[concat(\u0027pe-\u0027,substring(parameters(\u0027name\u0027),0,min(length(parameters(\u0027name\u0027)),50)),\u0027-\u0027,uniquestring(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables(\u0027privateEndpointName\u0027)]",
                              "apiVersion": "2020-06-01",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "serviceId": {
                                      "type": "string"
                                    },
                                    "privateEndpointSubnetId": {
                                      "type": "string"
                                    },
                                    "subnetLocation": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "privateEndpointName": "[deployment().name]"
                                  },
                                  "resources": [
                                    {
                                      "name": "[variables(\u0027privateEndpointName\u0027)]",
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2020-07-01",
                                      "location": "[parameters(\u0027subnetLocation\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "subnet": {
                                          "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                        },
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[variables(\u0027privateEndpointName\u0027)]",
                                            "properties": {
                                              "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                              "groupIds": [
                                                "Dev"
                                              ],
                                              "requestMessage": "Auto approved by policy assignment"
                                            }
                                          }
                                        ],
                                        "manualPrivateLinkServiceConnections": []
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "serviceId": {
                                    "value": "[parameters(\u0027serviceId\u0027)]"
                                  },
                                  "privateEndpointSubnetId": {
                                    "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                  },
                                  "subnetLocation": {
                                    "value": "[reference(first(take(split(parameters(\u0027privateEndpointSubnetId\u0027),\u0027/subnets\u0027),1)),\u00272020-07-01\u0027,\u0027Full\u0027).location]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3b3b0c27-08d2-4b32-879d-19930bee3266",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3b3b0c27-08d2-4b32-879d-19930bee3266"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1266 - Contingency Plan Testing | Alternate Processing Site",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1266"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3b4a3eb2-c25d-40bf-ad41-5094b6f59cee",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3b4a3eb2-c25d-40bf-ad41-5094b6f59cee"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1003 - Account Management",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1003"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3b68b179-3704-4ff7-b51d-7d65374d165d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3b68b179-3704-4ff7-b51d-7d65374d165d"
          },
          {
            "properties": {
              "displayName": "An activity log alert should exist for specific Security operations",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy audits specific Security operations with no activity log alerts configured.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "operationName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Operation Name",
                    "description": "Security Operation name for which activity log alert should exist"
                  },
                  "allowedValues": [
                    "Microsoft.Security/policies/write",
                    "Microsoft.Security/securitySolutions/write",
                    "Microsoft.Security/securitySolutions/delete"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Resources/subscriptions"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/ActivityLogAlerts",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/ActivityLogAlerts/enabled",
                          "equals": "true"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                            "where": {
                              "anyOf": [
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field",
                                      "equals": "category"
                                    },
                                    {
                                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals",
                                      "equals": "Security"
                                    }
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field",
                                      "equals": "operationName"
                                    },
                                    {
                                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals",
                                      "equals": "[parameters(\u0027operationName\u0027)]"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          "equals": 2
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field",
                            "equals": "category"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field",
                            "equals": "operationName"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3b980d31-7904-4bb7-8575-5665739a8052",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3b980d31-7904-4bb7-8575-5665739a8052"
          },
          {
            "properties": {
              "displayName": "Deploy - Configure Dependency agent to be enabled on Windows virtual machine scale sets",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Dependency agent for Windows virtual machine scale sets if the virtual machine image is in the list defined and the agent is not installed. If your scale set upgradePolicy is set to Manual, you need to apply the extension to all the virtual machines in the set by updating them.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "listOfImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Windows OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-V4"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "DependencyAgentWindows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "DependencyAgentWindows",
                            "vmExtensionPublisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                            "vmExtensionType": "DependencyAgentWindows",
                            "vmExtensionTypeHandlerVersion": "9.7"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "apiVersion": "2018-06-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled extension for: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3be22e3b-d919-47aa-805e-8985dbeb0ad9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3be22e3b-d919-47aa-805e-8985dbeb0ad9"
          },
          {
            "properties": {
              "displayName": "PostgreSQL server should use a virtual network service endpoint",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Virtual network based firewall rules are used to enable traffic from a specific subnet to Azure Database for PostgreSQL while ensuring the traffic stays within the Azure boundary. This policy provides a way to audit if the Azure Database for PostgreSQL has virtual network service endpoint being used.",
              "metadata": {
                "version": "1.0.2",
                "category": "SQL"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
                    "existenceCondition": {
                      "field": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules/virtualNetworkSubnetId",
                      "exists": "true"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3c14b034-bcb6-4905-94e7-5b8e98a47b65",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3c14b034-bcb6-4905-94e7-5b8e98a47b65"
          },
          {
            "properties": {
              "displayName": "Deploy - Configure Log Analytics extension to be enabled on Windows virtual machine scale sets",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploy Log Analytics extension for Windows virtual machine scale sets if the virtual machine image is in the list defined and the extension is not installed. If your scale set upgradePolicy is set to Manual, you need to apply the extension to all the virtual machine in the set by updating them.",
              "metadata": {
                "version": "2.0.1",
                "category": "Monitoring"
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Log Analytics workspace is used to receive performance data. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                  }
                },
                "listOfImageIdToInclude": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Optional: List of virtual machine images that have supported Windows OS to add to scope",
                    "description": "Example value: \u0027/subscriptions/\u003CsubscriptionId\u003E/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage\u0027"
                  },
                  "defaultValue": []
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageId",
                          "in": "[parameters(\u0027listOfImageIdToInclude\u0027)]"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "2008-R2-SP1",
                                "2008-R2-SP1-smalldisk",
                                "2012-Datacenter",
                                "2012-Datacenter-smalldisk",
                                "2012-R2-Datacenter",
                                "2012-R2-Datacenter-smalldisk",
                                "2016-Datacenter",
                                "2016-Datacenter-Server-Core",
                                "2016-Datacenter-Server-Core-smalldisk",
                                "2016-Datacenter-smalldisk",
                                "2016-Datacenter-with-Containers",
                                "2016-Datacenter-with-RDSH",
                                "2019-Datacenter",
                                "2019-Datacenter-Core",
                                "2019-Datacenter-Core-smalldisk",
                                "2019-Datacenter-Core-with-Containers",
                                "2019-Datacenter-Core-with-Containers-smalldisk",
                                "2019-Datacenter-smalldisk",
                                "2019-Datacenter-with-Containers",
                                "2019-Datacenter-with-Containers-smalldisk",
                                "2019-Datacenter-zhcn"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerSemiAnnual"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "Datacenter-Core-1709-smalldisk",
                                "Datacenter-Core-1709-with-Containers-smalldisk",
                                "Datacenter-Core-1803-with-Containers-smalldisk"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServerHPCPack"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "WindowsServerHPCPack"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2016-BYOL"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "*-WS2012R2-BYOL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftRServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "MLServer-WS2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftVisualStudio"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "VisualStudio",
                                "Windows"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-U8"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftDynamicsAX"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Dynamics"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "equals": "Pre-Req-AX7-Onebox-V4"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "windows-data-science-vm"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsDesktop"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Windows-10"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "MicrosoftMonitoringAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.EnterpriseCloud.Monitoring"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "vmExtensionName": "MicrosoftMonitoringAgent",
                            "vmExtensionPublisher": "Microsoft.EnterpriseCloud.Monitoring",
                            "vmExtensionType": "MicrosoftMonitoringAgent",
                            "vmExtensionTypeHandlerVersion": "1.0"
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/\u0027, variables(\u0027vmExtensionName\u0027))]",
                              "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2018-06-01",
                              "properties": {
                                "publisher": "[variables(\u0027vmExtensionPublisher\u0027)]",
                                "type": "[variables(\u0027vmExtensionType\u0027)]",
                                "typeHandlerVersion": "[variables(\u0027vmExtensionTypeHandlerVersion\u0027)]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "workspaceId": "[reference(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).customerId]",
                                  "stopOnMultipleConnections": "true"
                                },
                                "protectedSettings": {
                                  "workspaceKey": "[listKeys(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).primarySharedKey]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled extension for: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3c1b3629-c8f8-4bf6-862c-037cb9094038",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3c1b3629-c8f8-4bf6-862c-037cb9094038"
          },
          {
            "properties": {
              "displayName": "Vulnerabilities in security configuration on your virtual machine scale sets should be remediated",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit the OS vulnerabilities on your virtual machine scale sets to protect them from attacks.",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "8941d121-f740-35f6-952c-6561d2b38d36",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1621 - Resource Availability",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1621"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3cb9f731-744a-4691-a481-ca77b0411538",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3cb9f731-744a-4691-a481-ca77b0411538"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1521 - Personnel Termination | Automated Notification",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Personnel Security control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1521"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3cbddf9c-a3aa-4330-a0f5-4c0c1f1862e5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3cbddf9c-a3aa-4330-a0f5-4c0c1f1862e5"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1127 - Time Stamps",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1127"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3ce328db-aef3-48ed-9f81-2ab7cf839c66",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3ce328db-aef3-48ed-9f81-2ab7cf839c66"
          },
          {
            "properties": {
              "displayName": "Add system-assigned managed identity to enable Guest Configuration assignments on virtual machines with no identities",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy adds a system-assigned managed identity to virtual machines hosted in Azure that are supported by Guest Configuration but do not have any managed identities. A system-assigned managed identity is a prerequisite for all Guest Configuration assignments and must be added to machines before using any Guest Configuration policy definitions. For more information on Guest Configuration, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.1.0"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "dsvm-win*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "microsoft-aks",
                                "qubole-inc",
                                "datastax",
                                "couchbase",
                                "scalegrid",
                                "checkpoint",
                                "paloaltonetworks",
                                "debian"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "OpenLogic"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "CentOS*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Oracle"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Oracle-Linux"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "RHEL",
                                    "RHEL-HA",
                                    "RHEL-SAP",
                                    "RHEL-SAP-APPS",
                                    "RHEL-SAP-HA",
                                    "RHEL-SAP-HANA"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "RedHat"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "osa",
                                    "rhel-byos"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "cis-centos-7-l1",
                                    "cis-centos-7-v2-1-1-l1",
                                    "cis-centos-8-l1",
                                    "cis-debian-linux-8-l1",
                                    "cis-debian-linux-9-l1",
                                    "cis-nginx-centos-7-v1-1-0-l1",
                                    "cis-oracle-linux-7-v2-0-0-l1",
                                    "cis-oracle-linux-8-l1",
                                    "cis-postgresql-11-centos-linux-7-level-1",
                                    "cis-rhel-7-l2",
                                    "cis-rhel-7-v2-2-0-l1",
                                    "cis-rhel-8-l1",
                                    "cis-suse-linux-12-v2-0-0-l1",
                                    "cis-ubuntu-linux-1604-v1-0-0-l1",
                                    "cis-ubuntu-linux-1804-l1"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "credativ"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Debian"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "7*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Suse"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "SLES*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "11*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Canonical"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "UbuntuServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "12*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "linux-data-science-vm-ubuntu",
                                    "azureml",
                                    "ubuntu-hpc",
                                    "ubuntu-1804"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-centos-os"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "6*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloudera"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cloudera-altus-centos-os"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "linux*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Linux*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "exists": "false"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imagePublisher",
                                      "notIn": [
                                        "OpenLogic",
                                        "RedHat",
                                        "credativ",
                                        "Suse",
                                        "Canonical",
                                        "microsoft-dsvm",
                                        "cloudera",
                                        "microsoft-ads",
                                        "center-for-internet-security-inc",
                                        "Oracle",
                                        "AzureDatabricks"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "[requestContext().apiVersion]",
                      "greaterOrEquals": "2018-10-01"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "identity.type",
                          "exists": "false"
                        },
                        {
                          "field": "identity.type",
                          "equals": "None"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "modify",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "operations": [
                      {
                        "operation": "addOrReplace",
                        "field": "identity.type",
                        "value": "SystemAssigned"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3cf2ab00-13f1-4d0c-8971-2ac904541a7e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3cf2ab00-13f1-4d0c-8971-2ac904541a7e"
          },
          {
            "properties": {
              "displayName": "Audit Windows machines that have extra accounts in the Administrators group",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the local Administrators group contains members that are not listed in the policy parameter.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AdministratorsGroupMembers",
                  "version": "1.*",
                  "configurationParameter": {
                    "Members": "[LocalGroup]AdministratorsGroup;Members"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "Members": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Members",
                    "description": "A semicolon-separated list of all the expected members of the Administrators local group. Ex: Administrator; myUser1; myUser2"
                  },
                  "allowedValues": [],
                  "defaultValue": "Administrator"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AdministratorsGroupMembers",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027[LocalGroup]AdministratorsGroup;Members\u0027, \u0027=\u0027, parameters(\u0027Members\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3d2a3320-2a72-4c67-ac5f-caa40fbee2b2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3d2a3320-2a72-4c67-ac5f-caa40fbee2b2"
          },
          {
            "properties": {
              "displayName": "Deploy Diagnostic Settings for Search Services to Event Hub",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Search Services to stream to a regional Event Hub when any Search Services which is missing this diagnostic settings is created or updated.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy_eventHub"
                },
                "eventHubRuleId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Event Hub Authorization Rule Id",
                    "description": "The Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
                    "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
                    "assignPermissions": true
                  }
                },
                "eventHubLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Event Hub Location",
                    "description": "The location the Event Hub resides in. Only Search Services in this location will be linked to this Event Hub.",
                    "strongType": "location"
                  },
                  "defaultValue": ""
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Event Hub - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "False"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Event Hub  - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Search/searchServices"
                    },
                    {
                      "anyOf": [
                        {
                          "value": "[parameters(\u0027eventHubLocation\u0027)]",
                          "equals": ""
                        },
                        {
                          "field": "location",
                          "equals": "[parameters(\u0027eventHubLocation\u0027)]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters(\u0027profileName\u0027)]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters(\u0027logsEnabled\u0027)]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters(\u0027metricsEnabled\u0027)]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "eventHubRuleId": {
                              "type": "string"
                            },
                            "metricsEnabled": {
                              "type": "string"
                            },
                            "logsEnabled": {
                              "type": "string"
                            },
                            "profileName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Search/searchServices/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters(\u0027resourceName\u0027), \u0027/\u0027, \u0027Microsoft.Insights/\u0027, parameters(\u0027profileName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "dependsOn": [],
                              "properties": {
                                "eventHubAuthorizationRuleId": "[parameters(\u0027eventHubRuleId\u0027)]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters(\u0027metricsEnabled\u0027)]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "OperationLogs",
                                    "enabled": "[parameters(\u0027logsEnabled\u0027)]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "resourceName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "eventHubRuleId": {
                            "value": "[parameters(\u0027eventHubRuleId\u0027)]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters(\u0027metricsEnabled\u0027)]"
                          },
                          "logsEnabled": {
                            "value": "[parameters(\u0027logsEnabled\u0027)]"
                          },
                          "profileName": {
                            "value": "[parameters(\u0027profileName\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3d5da587-71bd-41f5-ac95-dd3330c2d58d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3d5da587-71bd-41f5-ac95-dd3330c2d58d"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Show audit results from Windows VMs configurations in \u0027Security Options - Devices\u0027",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy should only be used along with its corresponding deploy policy in an initiative. This definition allows Azure Policy to process the results of auditing Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - Devices\u0027. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Guest Configuration",
                "deprecated": true
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsDevices",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3d7b154e-2700-4c8c-9e46-cb65ac1578c2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3d7b154e-2700-4c8c-9e46-cb65ac1578c2"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy default Log Analytics Extension for Ubuntu VMs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy deploys the Log Analytics Extension on Ubuntu VMs, and connects to the selected Log Analytics workspace",
              "metadata": {
                "version": "1.0.1-deprecated",
                "category": "Compute",
                "deprecated": true
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "Canonical"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "equals": "UbuntuServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "in": [
                        "18.04-LTS",
                        "16.04-LTS",
                        "16.04.0-LTS",
                        "14.04.2-LTS",
                        "12.04.5-LTS"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "OmsAgentForLinux"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.EnterpriseCloud.Monitoring"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027),\u0027/omsPolicy\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2017-12-01",
                              "properties": {
                                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                                "type": "OmsAgentForLinux",
                                "typeHandlerVersion": "1.4",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "workspaceId": "[reference(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).customerId]"
                                },
                                "protectedSettings": {
                                  "workspaceKey": "[listKeys(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).primarySharedKey]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled monitoring for Linux VM\u0027, \u0027: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3d8640fc-63f6-4734-8dcb-cfd3d8c78f38",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3d8640fc-63f6-4734-8dcb-cfd3d8c78f38"
          },
          {
            "properties": {
              "displayName": "App Configuration should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that the resource isn\u0027t exposed on the public internet. You can limit exposure of your resources by creating private endpoints instead. Learn more at: https://aka.ms/appconfig/private-endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Configuration"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.AppConfiguration/configurationStores"
                    },
                    {
                      "field": "Microsoft.AppConfiguration/configurationStores/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3d9f5e4c-9947-4579-9539-2a7695fbc187",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3d9f5e4c-9947-4579-9539-2a7695fbc187"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1385 - Information Spillage Response",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1385"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3e495e65-8663-49ca-9b38-9f45e800bc58",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3e495e65-8663-49ca-9b38-9f45e800bc58"
          },
          {
            "properties": {
              "displayName": "Audit Windows machines that do not have the specified Windows PowerShell modules installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if a module isn\u0027t available in a location specified by the environment variable PSModulePath.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "WindowsPowerShellModules",
                  "version": "1.*",
                  "configurationParameter": {
                    "Modules": "[PowerShellModules]PowerShellModules1;Modules"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "Modules": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PowerShell Modules",
                    "description": "A semicolon-separated list of the names of the PowerShell modules that should be installed. You may also specify a specific version of a module that should be installed by including a comma after the module name, followed by the desired version. Example: PSDscResources; SqlServerDsc, 12.0.0.0; ComputerManagementDsc, 6.1.0.0"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "[concat(\u0027WindowsPowerShellModules$pid\u0027, uniqueString(policy().assignmentId, policy().definitionReferenceId))]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027[PowerShellModules]PowerShellModules1;Modules\u0027, \u0027=\u0027, parameters(\u0027Modules\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3e4e2bd5-15a2-4628-b3e1-58977e9793f3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3e4e2bd5-15a2-4628-b3e1-58977e9793f3"
          },
          {
            "properties": {
              "displayName": "Azure Monitor solution \u0027Security and Audit\u0027 must be deployed",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy ensures that Security and Audit is deployed.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.OperationsManagement/solutions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.OperationsManagement/solutions/provisioningState",
                          "equals": "Succeeded"
                        },
                        {
                          "field": "name",
                          "like": "Security(*)"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3e596b57-105f-48a6-be97-03e9243bad6e",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3e596b57-105f-48a6-be97-03e9243bad6e"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1160 - Security Authorization",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Security Assessment and Authorization control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1160"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3e797ca6-2aa8-4333-b335-7036f1110c05",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3e797ca6-2aa8-4333-b335-7036f1110c05"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1545 - Risk Assessment",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1545"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3f4b171a-a56b-4328-8112-32cf7f947ee1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3f4b171a-a56b-4328-8112-32cf7f947ee1"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1179 - Baseline Configuration | Reviews And Updates",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1179"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3f9ce557-c8ab-4e6c-bb2c-9b8ed002c46c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3f9ce557-c8ab-4e6c-bb2c-9b8ed002c46c"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit API Applications that are not using latest supported PHP Framework",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use the latest supported PHP version for the latest security classes. Using older classes and types can make your application vulnerable.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "api"
                        },
                        {
                          "field": "kind",
                          "equals": "apiApp"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "UseLatestPHP",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3fe37002-5d00-4b37-a301-da09e3a0ca66",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3fe37002-5d00-4b37-a301-da09e3a0ca66"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027Security Options - Network Access\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027Security Options - Network Access\u0027 for including access for anonymous users, local accounts, and remote access to the registry. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SecurityOptionsNetworkAccess",
                  "version": "1.*",
                  "configurationParameter": {
                    "NetworkAccessRemotelyAccessibleRegistryPaths": "Network access: Remotely accessible registry paths;ExpectedValue",
                    "NetworkAccessRemotelyAccessibleRegistryPathsAndSubpaths": "Network access: Remotely accessible registry paths and sub-paths;ExpectedValue",
                    "NetworkAccessSharesThatCanBeAccessedAnonymously": "Network access: Shares that can be accessed anonymously;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "NetworkAccessRemotelyAccessibleRegistryPaths": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network access: Remotely accessible registry paths",
                    "description": "Specifies which registry paths will be accessible over the network, regardless of the users or groups listed in the access control list (ACL) of the \u0060winreg\u0060 registry key."
                  },
                  "defaultValue": "System\\CurrentControlSet\\Control\\ProductOptions|#|System\\CurrentControlSet\\Control\\Server Applications|#|Software\\Microsoft\\Windows NT\\CurrentVersion"
                },
                "NetworkAccessRemotelyAccessibleRegistryPathsAndSubpaths": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network access: Remotely accessible registry paths and sub-paths",
                    "description": "Specifies which registry paths and sub-paths will be accessible over the network, regardless of the users or groups listed in the access control list (ACL) of the \u0060winreg\u0060 registry key."
                  },
                  "defaultValue": "System\\CurrentControlSet\\Control\\Print\\Printers|#|System\\CurrentControlSet\\Services\\Eventlog|#|Software\\Microsoft\\OLAP Server|#|Software\\Microsoft\\Windows NT\\CurrentVersion\\Print|#|Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows|#|System\\CurrentControlSet\\Control\\ContentIndex|#|System\\CurrentControlSet\\Control\\Terminal Server|#|System\\CurrentControlSet\\Control\\Terminal Server\\UserConfig|#|System\\CurrentControlSet\\Control\\Terminal Server\\DefaultUserConfiguration|#|Software\\Microsoft\\Windows NT\\CurrentVersion\\Perflib|#|System\\CurrentControlSet\\Services\\SysmonLog"
                },
                "NetworkAccessSharesThatCanBeAccessedAnonymously": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Network access: Shares that can be accessed anonymously",
                    "description": "Specifies which network shares can be accessed by anonymous users. The default configuration for this policy setting has little effect because all users have to be authenticated before they can access shared resources on the server."
                  },
                  "defaultValue": "0"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsNetworkAccess",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Network access: Remotely accessible registry paths;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkAccessRemotelyAccessibleRegistryPaths\u0027), \u0027,\u0027, \u0027Network access: Remotely accessible registry paths and sub-paths;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkAccessRemotelyAccessibleRegistryPathsAndSubpaths\u0027), \u0027,\u0027, \u0027Network access: Shares that can be accessed anonymously;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027NetworkAccessSharesThatCanBeAccessedAnonymously\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3ff60f98-7fa4-410a-9f7f-0b00f5afdbdd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3ff60f98-7fa4-410a-9f7f-0b00f5afdbdd"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1561 - Allocation Of Resources",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1561"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/40364c3f-c331-4e29-b1e3-2fbe998ba2f5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "40364c3f-c331-4e29-b1e3-2fbe998ba2f5"
          },
          {
            "properties": {
              "displayName": "Secure transfer to storage accounts should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
              "metadata": {
                "version": "2.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "value": "[requestContext().apiVersion]",
                              "less": "2019-04-01"
                            },
                            {
                              "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                              "exists": "false"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "404c3081-a854-4457-ae30-26a93ef643f9"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1100 - Audit And Accountability Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1100"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4057863c-ca7d-47eb-b1e0-503580cba8a4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4057863c-ca7d-47eb-b1e0-503580cba8a4"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1637 - Boundary Protection | Fail Secure",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Communications Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1637"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4075bedc-c62a-4635-bede-a01be89807f3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4075bedc-c62a-4635-bede-a01be89807f3"
          },
          {
            "properties": {
              "displayName": "Windows machines should have Log Analytics agent installed on Azure Arc",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Machines are non-compliant if Log Analytics agent is not installed on Azure Arc enabled windows server.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "WindowsLogAnalyticsAgentInstalled",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                      "equals": "true"
                    },
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/imageOffer",
                      "like": "windows*"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsLogAnalyticsAgentInstalled",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4078e558-bda6-41fb-9b3c-361e8875200d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4078e558-bda6-41fb-9b3c-361e8875200d"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027Administrative Templates - System\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027Administrative Templates - System\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "AlwaysUseClassicLogon": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Always use classic logon",
                    "description": "Specifies whether to force the user to log on to the computer using the classic logon screen. This setting only works when the computer is not on a domain."
                  },
                  "defaultValue": "0"
                },
                "BootStartDriverInitializationPolicy": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Boot-Start Driver Initialization Policy",
                    "description": "Specifies which boot-start drivers are initialized based on a classification determined by an Early Launch Antimalware boot-start driver."
                  },
                  "defaultValue": "3"
                },
                "EnableWindowsNTPClient": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable Windows NTP Client",
                    "description": "Specifies whether the Windows NTP Client is enabled. Enabling the Windows NTP Client allows your computer to synchronize its computer clock with other NTP servers."
                  },
                  "defaultValue": "1"
                },
                "TurnOnConveniencePINSignin": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Turn on convenience PIN sign-in",
                    "description": "Specifies whether a domain user can sign in using a convenience PIN."
                  },
                  "defaultValue": "0"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_AdministrativeTemplatesSystem",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027Always use classic logon;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AlwaysUseClassicLogon\u0027), \u0027,\u0027, \u0027Boot-Start Driver Initialization Policy;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027BootStartDriverInitializationPolicy\u0027), \u0027,\u0027, \u0027Enable Windows NTP Client;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027EnableWindowsNTPClient\u0027), \u0027,\u0027, \u0027Turn on convenience PIN sign-in;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027TurnOnConveniencePINSignin\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_AdministrativeTemplatesSystem"
                          },
                          "AlwaysUseClassicLogon": {
                            "value": "[parameters(\u0027AlwaysUseClassicLogon\u0027)]"
                          },
                          "BootStartDriverInitializationPolicy": {
                            "value": "[parameters(\u0027BootStartDriverInitializationPolicy\u0027)]"
                          },
                          "EnableWindowsNTPClient": {
                            "value": "[parameters(\u0027EnableWindowsNTPClient\u0027)]"
                          },
                          "TurnOnConveniencePINSignin": {
                            "value": "[parameters(\u0027TurnOnConveniencePINSignin\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "AlwaysUseClassicLogon": {
                              "type": "string"
                            },
                            "BootStartDriverInitializationPolicy": {
                              "type": "string"
                            },
                            "EnableWindowsNTPClient": {
                              "type": "string"
                            },
                            "TurnOnConveniencePINSignin": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Always use classic logon;ExpectedValue",
                                      "value": "[parameters(\u0027AlwaysUseClassicLogon\u0027)]"
                                    },
                                    {
                                      "name": "Boot-Start Driver Initialization Policy;ExpectedValue",
                                      "value": "[parameters(\u0027BootStartDriverInitializationPolicy\u0027)]"
                                    },
                                    {
                                      "name": "Enable Windows NTP Client;ExpectedValue",
                                      "value": "[parameters(\u0027EnableWindowsNTPClient\u0027)]"
                                    },
                                    {
                                      "name": "Turn on convenience PIN sign-in;ExpectedValue",
                                      "value": "[parameters(\u0027TurnOnConveniencePINSignin\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Always use classic logon;ExpectedValue",
                                      "value": "[parameters(\u0027AlwaysUseClassicLogon\u0027)]"
                                    },
                                    {
                                      "name": "Boot-Start Driver Initialization Policy;ExpectedValue",
                                      "value": "[parameters(\u0027BootStartDriverInitializationPolicy\u0027)]"
                                    },
                                    {
                                      "name": "Enable Windows NTP Client;ExpectedValue",
                                      "value": "[parameters(\u0027EnableWindowsNTPClient\u0027)]"
                                    },
                                    {
                                      "name": "Turn on convenience PIN sign-in;ExpectedValue",
                                      "value": "[parameters(\u0027TurnOnConveniencePINSignin\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/40917425-69db-4018-8dae-2a0556cef899",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "40917425-69db-4018-8dae-2a0556cef899"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1202 - Access Restrictions For Change",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1202"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/40a2a83b-74f2-4c02-ae65-f460a5d2792a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "40a2a83b-74f2-4c02-ae65-f460a5d2792a"
          },
          {
            "properties": {
              "displayName": "Azure Machine Learning workspaces should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Machine Learning workspaces, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/machine-learning/how-to-configure-private-link.",
              "metadata": {
                "version": "1.1.0",
                "category": "Machine Learning"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces"
                    },
                    {
                      "count": {
                        "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*]",
                        "where": {
                          "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                          "equals": "Approved"
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/40cec1dd-a100-4920-b15b-3024fe8901ab",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "40cec1dd-a100-4920-b15b-3024fe8901ab"
          },
          {
            "properties": {
              "displayName": "Inherit a tag from the subscription if missing",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Adds the specified tag with its value from the containing subscription when any resource missing this tag is created or updated. Existing resources can be remediated by triggering a remediation task. If the tag exists with a different value it will not be changed.",
              "metadata": {
                "category": "Tags",
                "version": "1.0.0"
              },
              "parameters": {
                "tagName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Name",
                    "description": "Name of the tag, such as \u0027environment\u0027"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                      "exists": "false"
                    },
                    {
                      "value": "[subscription().tags[parameters(\u0027tagName\u0027)]]",
                      "notEquals": ""
                    }
                  ]
                },
                "then": {
                  "effect": "modify",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "operations": [
                      {
                        "operation": "add",
                        "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                        "value": "[subscription().tags[parameters(\u0027tagName\u0027)]]"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/40df99da-1232-49b1-a39a-6da8d878f469",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "40df99da-1232-49b1-a39a-6da8d878f469"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1438 - Media Sanitization",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Media Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1438"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/40fcc635-52a2-4dbc-9523-80a1f4aa1de6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "40fcc635-52a2-4dbc-9523-80a1f4aa1de6"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1365 - Incident Handling | Continuity Of Operations",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1365"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4116891d-72f7-46ee-911c-8056cc8dcbd5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4116891d-72f7-46ee-911c-8056cc8dcbd5"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1022 - Account Management | Shared / Group Account Credential Termination",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1022"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/411f7e2d-9a0b-4627-a0b9-1700432db47d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "411f7e2d-9a0b-4627-a0b9-1700432db47d"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1464 - Monitoring Physical Access | Intrusion Alarms / Surveillance Equipment",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Physical and Environmental Protection control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1464"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/41256567-1795-4684-b00b-a1308ce43cac",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "41256567-1795-4684-b00b-a1308ce43cac"
          },
          {
            "properties": {
              "displayName": "Azure Monitor should collect activity logs from all regions",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy audits the Azure Monitor log profile which does not export activities from all Azure supported regions including global.",
              "metadata": {
                "version": "2.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/logProfiles",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "australiacentral"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "australiacentral2"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "australiaeast"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "australiasoutheast"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "brazilsouth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "brazilsoutheast"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "canadacentral"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "canadaeast"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "centralindia"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "centralus"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "eastasia"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "eastus"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "eastus2"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "francecentral"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "francesouth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "germanynorth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "germanywestcentral"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "japaneast"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "japanwest"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "jioindiawest"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "koreacentral"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "koreasouth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "northcentralus"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "northeurope"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "norwayeast"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "norwaywest"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "southafricanorth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "southafricawest"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "southcentralus"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "southeastasia"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "southindia"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "switzerlandnorth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "switzerlandwest"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "uaecentral"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "uaenorth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "uksouth"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "ukwest"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "westcentralus"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "westeurope"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "westindia"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "westus"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "westus2"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "westus3"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Insights/logProfiles/locations[*]",
                            "notEquals": "global"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/41388f1c-2db0-4c25-95b2-35d7f5ccbfa9",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "41388f1c-2db0-4c25-95b2-35d7f5ccbfa9"
          },
          {
            "properties": {
              "displayName": "Temp disks and cache for agent node pools in Azure Kubernetes Service clusters should be encrypted at host",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "To enhance data security, the data stored on the virtual machine (VM) host of your Azure Kubernetes Service nodes VMs should be encrypted at rest. This is a common requirement in many regulatory and industry compliance standards.",
              "metadata": {
                "version": "1.0.0",
                "category": "Kubernetes"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "\u0027Audit\u0027 allows a non-compliant resource to be created or updated, but flags it as non-compliant. \u0027Deny\u0027 blocks the non-compliant resource creation or update. \u0027Disabled\u0027 turns off the policy."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    {
                      "count": {
                        "field": "Microsoft.ContainerService/managedClusters/agentPoolProfiles[*]",
                        "where": {
                          "anyOf": [
                            {
                              "field": "Microsoft.ContainerService/managedClusters/agentPoolProfiles[*].enableEncryptionAtHost",
                              "exists": "False"
                            },
                            {
                              "field": "Microsoft.ContainerService/managedClusters/agentPoolProfiles[*].enableEncryptionAtHost",
                              "equals": ""
                            },
                            {
                              "field": "Microsoft.ContainerService/managedClusters/agentPoolProfiles[*].enableEncryptionAtHost",
                              "equals": "false"
                            }
                          ]
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/41425d9f-d1a5-499a-9932-f8ed8453932c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "41425d9f-d1a5-499a-9932-f8ed8453932c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1263 - Contingency Plan Testing",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1263"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/41472613-3b05-49f6-8fe8-525af113ce17",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "41472613-3b05-49f6-8fe8-525af113ce17"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1096 - Role-Based Security Training | Practical Exercises",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Awareness and Training control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1096"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/420c1477-aa43-49d0-bd7e-c4abdd9addff",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "420c1477-aa43-49d0-bd7e-c4abdd9addff"
          },
          {
            "properties": {
              "displayName": "Audit Windows VMs with a pending reboot",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the machine is pending reboot for any of the following reasons: component based servicing, Windows Update, pending file rename, pending computer rename, configuration manager pending reboot. Each detection has a unique registry path.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "1.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "WindowsPendingReboot",
                  "version": "1.*"
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "WindowsPendingReboot",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4221adbc-5c0f-474f-88b7-037a99e6114c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4221adbc-5c0f-474f-88b7-037a99e6114c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1260 - Contingency Training | Simulated Events",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Contingency Planning control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1260"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/42254fc4-2738-4128-9613-72aaa4f0d9c3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "42254fc4-2738-4128-9613-72aaa4f0d9c3"
          },
          {
            "properties": {
              "displayName": "Web Application Firewall (WAF) should use the specified mode for Azure Front Door Service",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Mandates the use of \u0027Detection\u0027 or \u0027Prevention\u0027 mode to be active on all Web Application Firewall policies for Azure Front Door Service.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "modeRequirement": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Mode Requirement",
                    "description": "Mode required for all WAF policies"
                  },
                  "allowedValues": [
                    "Prevention",
                    "Detection"
                  ],
                  "defaultValue": "Detection"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies"
                    },
                    {
                      "field": "Microsoft.Network/frontdoorWebApplicationFirewallPolicies/policySettings.mode",
                      "notEquals": "[parameters(\u0027modeRequirement\u0027)]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/425bea59-a659-4cbb-8d31-34499bd030b8",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "425bea59-a659-4cbb-8d31-34499bd030b8"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1694 - Information System Monitoring | Analyze Communications Traffic Anomalies",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1694"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/426c4ac9-ff17-49d0-acd7-a13c157081c0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "426c4ac9-ff17-49d0-acd7-a13c157081c0"
          },
          {
            "properties": {
              "displayName": "Resource logs in Batch accounts should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
              "metadata": {
                "version": "5.0.0",
                "category": "Batch"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "requiredRetentionDays": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Required retention (days)",
                    "description": "The required resource logs retention in days"
                  },
                  "defaultValue": "365"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Batch/batchAccounts"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "existenceCondition": {
                      "count": {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                        "where": {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                      "equals": "0"
                                    },
                                    {
                                      "value": "[padLeft(current(\u0027Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days\u0027), 3, \u00270\u0027)]",
                                      "greaterOrEquals": "[padLeft(parameters(\u0027requiredRetentionDays\u0027), 3, \u00270\u0027)]"
                                    }
                                  ]
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                                  "equals": "true"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                      "notEquals": "true"
                                    },
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                      "exists": false
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "428256e6-1fac-4f48-a757-df34c2b3336d"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027System Audit Policies - Detailed Tracking\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027System Audit Policies - Detailed Tracking\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "AuditProcessTermination": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Process Termination",
                    "description": "Specifies whether audit events are generated when a process has exited. Recommended for monitoring termination of critical processes."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "No Auditing"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesDetailedTracking",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027Audit Process Termination;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditProcessTermination\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SystemAuditPoliciesDetailedTracking"
                          },
                          "AuditProcessTermination": {
                            "value": "[parameters(\u0027AuditProcessTermination\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "AuditProcessTermination": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Audit Process Termination;ExpectedValue",
                                      "value": "[parameters(\u0027AuditProcessTermination\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "Audit Process Termination;ExpectedValue",
                                      "value": "[parameters(\u0027AuditProcessTermination\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/42a07bbf-ffcf-459a-b4b1-30ecd118a505",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "42a07bbf-ffcf-459a-b4b1-30ecd118a505"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1174 - Configuration Management Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Configuration Management control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1174"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/42a9a714-8fbb-43ac-b115-ea12d2bd652f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "42a9a714-8fbb-43ac-b115-ea12d2bd652f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1137 - Audit Generation",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Audit and Accountability control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1137"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4344df62-88ab-4637-b97b-bcaf2ec97e7c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4344df62-88ab-4637-b97b-bcaf2ec97e7c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1367 - Incident Handling | Insider Threats - Specific Capabilities",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1367"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/435b2547-6374-4f87-b42d-6e8dbe6ae62a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "435b2547-6374-4f87-b42d-6e8dbe6ae62a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1552 - Vulnerability Scanning | Update By Frequency / Prior To New Scan / When Identified",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1552"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/43684572-e4f1-4642-af35-6b933bc506da",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "43684572-e4f1-4642-af35-6b933bc506da"
          },
          {
            "properties": {
              "displayName": "Configure Azure Monitor Private Link Scope to use private DNS zones",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use private DNS zones to override the DNS resolution for a private endpoint. A private DNS zone links to your virtual network to resolve to Azure Monitor private link scope. Learn more at: https://docs.microsoft.com/azure/azure-monitor/logs/private-link-security#connect-to-a-private-endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring"
              },
              "parameters": {
                "privateDnsZoneId1": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone for global endpoints used by Azure Monitor",
                    "description": "One of the five private DNS zone IDs required for Microsoft.Insights/privateLinkScopes to resolve a private DNS Zone to your Azure Monitor Private Link scope.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "privateDnsZoneId2": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone for workspace-specific mapping to OMS agents endpoints",
                    "description": "One of the five private DNS zone IDs required for Microsoft.Insights/privateLinkScopes to resolve a private DNS Zone to your Azure Monitor Private Link scope.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "privateDnsZoneId3": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone for workspace-specific mapping to ingestion endpoints",
                    "description": "One of the five private DNS zone IDs required for Microsoft.Insights/privateLinkScopes to resolve a private DNS Zone to your Azure Monitor Private Link scope.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "privateDnsZoneId4": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone for workspace-specific mapping to the agent service automation endpoints",
                    "description": "One of the five private DNS zone IDs required for Microsoft.Insights/privateLinkScopes to resolve a private DNS Zone.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "privateDnsZoneId5": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone for connectivity to the global agent\u0027s solution packs storage account",
                    "description": "One of the five private DNS zone IDs required for Microsoft.Insights/privateLinkScopes to resolve a private DNS Zone.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                              "contains": "Microsoft.Insights/privateLinkScopes"
                            },
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "azuremonitor"
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId1": {
                              "type": "string"
                            },
                            "privateDnsZoneId2": {
                              "type": "string"
                            },
                            "privateDnsZoneId3": {
                              "type": "string"
                            },
                            "privateDnsZoneId4": {
                              "type": "string"
                            },
                            "privateDnsZoneId5": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027privateEndpointName\u0027), \u0027/deployedByPolicy\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "privateDnsZone1",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId1\u0027)]"
                                    }
                                  },
                                  {
                                    "name": "privateDnsZone2",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId2\u0027)]"
                                    }
                                  },
                                  {
                                    "name": "privateDnsZone3",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId3\u0027)]"
                                    }
                                  },
                                  {
                                    "name": "privateDnsZone4",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId4\u0027)]"
                                    }
                                  },
                                  {
                                    "name": "privateDnsZone5",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId5\u0027)]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId1": {
                            "value": "[parameters(\u0027privateDnsZoneId1\u0027)]"
                          },
                          "privateDnsZoneId2": {
                            "value": "[parameters(\u0027privateDnsZoneId2\u0027)]"
                          },
                          "privateDnsZoneId3": {
                            "value": "[parameters(\u0027privateDnsZoneId3\u0027)]"
                          },
                          "privateDnsZoneId4": {
                            "value": "[parameters(\u0027privateDnsZoneId4\u0027)]"
                          },
                          "privateDnsZoneId5": {
                            "value": "[parameters(\u0027privateDnsZoneId5\u0027)]"
                          },
                          "privateEndpointName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/437914ee-c176-4fff-8986-7e05eb971365",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "437914ee-c176-4fff-8986-7e05eb971365"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy prerequisites to audit Windows VMs configurations in \u0027Security Options - System settings\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy creates a Guest Configuration assignment to audit Windows virtual machines with non-compliant settings in Group Policy category: \u0027Security Options - System settings\u0027. It also creates a system-assigned managed identity and deploys the VM extension for Guest Configuration. This policy should only be used along with its corresponding audit policy in an initiative. For more information on Guest Configuration policies, please visit https://aka.ms/gcpol",
              "metadata": {
                "version": "1.2.0-deprecated",
                "category": "Guest Configuration",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "deprecated": true
              },
              "parameters": {
                "SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies": {
                  "type": "String",
                  "metadata": {
                    "displayName": "System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies",
                    "description": "Specifies whether digital certificates are processed when software restriction policies are enabled and a user or process attempts to run software with an .exe file name extension. It enables or disables certificate rules (a type of software restriction policies rule). For certificate rules to take effect in software restriction policies, you must enable this policy setting."
                  },
                  "defaultValue": "1"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SecurityOptionsSystemsettings",
                    "existenceCondition": {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat(\u0027System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies\u0027)))]"
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "type": {
                            "value": "[field(\u0027type\u0027)]"
                          },
                          "configurationName": {
                            "value": "AzureBaseline_SecurityOptionsSystemsettings"
                          },
                          "SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies": {
                            "value": "[parameters(\u0027SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "configurationName": {
                              "type": "string"
                            },
                            "SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027microsoft.hybridcompute/machines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies;ExpectedValue",
                                      "value": "[parameters(\u0027SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2018-11-20",
                              "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/Microsoft.GuestConfiguration/\u0027, parameters(\u0027configurationName\u0027))]",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "guestConfiguration": {
                                  "name": "[parameters(\u0027configurationName\u0027)]",
                                  "version": "1.*",
                                  "configurationParameter": [
                                    {
                                      "name": "System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies;ExpectedValue",
                                      "value": "[parameters(\u0027SystemSettingsUseCertificateRulesOnWindowsExecutablesForSoftwareRestrictionPolicies\u0027)]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "type": "Microsoft.Compute/virtualMachines",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "name": "[parameters(\u0027vmName\u0027)]",
                              "location": "[parameters(\u0027location\u0027)]"
                            },
                            {
                              "condition": "[equals(toLower(parameters(\u0027type\u0027)), toLower(\u0027Microsoft.Compute/virtualMachines\u0027))]",
                              "apiVersion": "2019-07-01",
                              "name": "[concat(parameters(\u0027vmName\u0027), \u0027/AzurePolicyforWindows\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "publisher": "Microsoft.GuestConfiguration",
                                "type": "ConfigurationforWindows",
                                "typeHandlerVersion": "1.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[concat(\u0027Microsoft.Compute/virtualMachines/\u0027,parameters(\u0027vmName\u0027),\u0027/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/\u0027,parameters(\u0027configurationName\u0027))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/437a1f8f-8552-47a8-8b12-a2fee3269dd5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "437a1f8f-8552-47a8-8b12-a2fee3269dd5"
          },
          {
            "properties": {
              "displayName": "Azure Machine Learning workspaces should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that the machine learning workspaces aren\u0027t exposed on the public internet. You can limit exposure of your workspaces by creating private endpoints instead. Learn more at: https://aka.ms/privateendpoints.",
              "metadata": {
                "version": "1.0.0",
                "category": "Machine Learning"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/438c38d2-3772-465a-a9cc-7a6666a275ce",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "438c38d2-3772-465a-a9cc-7a6666a275ce"
          },
          {
            "properties": {
              "displayName": "Windows machines should meet requirements for \u0027System Audit Policies - Account Logon\u0027",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Windows machines should have the specified Group Policy settings in the category \u0027System Audit Policies - Account Logon\u0027 for auditing credential validation and other account logon events. This policy requires that the Guest Configuration prerequisites have been deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
              "metadata": {
                "category": "Guest Configuration",
                "version": "2.0.0",
                "requiredProviders": [
                  "Microsoft.GuestConfiguration"
                ],
                "guestConfiguration": {
                  "name": "AzureBaseline_SystemAuditPoliciesAccountLogon",
                  "version": "1.*",
                  "configurationParameter": {
                    "AuditCredentialValidation": "Audit Credential Validation;ExpectedValue"
                  }
                }
              },
              "parameters": {
                "IncludeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "false"
                },
                "AuditCredentialValidation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Audit Credential Validation",
                    "description": "Specifies whether audit events are generated when credentials are submitted for a user account logon request.  This setting is especially useful for monitoring unsuccessful attempts, to find brute-force attacks, account enumeration, and potential account compromise events on domain controllers."
                  },
                  "allowedValues": [
                    "No Auditing",
                    "Success",
                    "Failure",
                    "Success and Failure"
                  ],
                  "defaultValue": "Success and Failure"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of this policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "in": [
                                "esri",
                                "incredibuild",
                                "MicrosoftDynamicsAX",
                                "MicrosoftSharepoint",
                                "MicrosoftVisualStudio",
                                "MicrosoftWindowsDesktop",
                                "MicrosoftWindowsServerHPCPack"
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftSQLServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-dsvm"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "dsvm-windows"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-ads"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "standard-data-science-vm",
                                    "windows-data-science-vm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "batch"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "rendering-windows2016"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "center-for-internet-security-inc"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "cis-windows-server-201*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "pivotal"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "bosh-windows-server*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "cloud-infrastructure-services"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "like": "ad*"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                      "exists": "true"
                                    },
                                    {
                                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                      "like": "Windows*"
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "exists": "false"
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "notLike": "2008*"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "notLike": "SQL2008*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters(\u0027IncludeArcMachines\u0027)]",
                          "equals": "true"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "field": "Microsoft.HybridCompute/imageOffer",
                          "like": "windows*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                    "name": "AzureBaseline_SystemAuditPoliciesAccountLogon",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                          "equals": "Compliant"
                        },
                        {
                          "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                          "equals": "[base64(concat(\u0027Audit Credential Validation;ExpectedValue\u0027, \u0027=\u0027, parameters(\u0027AuditCredentialValidation\u0027)))]"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/43bb60fe-1d7e-4b82-9e93-496bfc99e7d5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "43bb60fe-1d7e-4b82-9e93-496bfc99e7d5"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1544 - Risk Assessment",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Risk Assessment control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1544"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/43ced7c9-cd53-456b-b0da-2522649a4271",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "43ced7c9-cd53-456b-b0da-2522649a4271"
          },
          {
            "properties": {
              "displayName": "Configure Azure HDInsight clusters to use private DNS zones",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use private DNS zones to override the DNS resolution for a private endpoint. A private DNS zone links to your virtual network to resolve to Azure HDInsight clusters. Learn more at: https://aka.ms/hdi.pl.",
              "metadata": {
                "version": "1.0.0",
                "category": "HDInsight"
              },
              "parameters": {
                "privateDnsZoneId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone ID for Azure HDInsight clusters",
                    "description": "The private DNS zone name required for Azure HDInsight clusters to resolve a private DNS Zone.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "groupId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Group ID",
                    "description": "Target group id (sub resource type) for the private endpoint."
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                              "contains": "Microsoft.HDInsight/clusters"
                            },
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "[parameters(\u0027groupId\u0027)]"
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027privateEndpointName\u0027), \u0027/deployedByPolicy\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "hdinsightCluster-privateDnsZone",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId\u0027)]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId": {
                            "value": "[parameters(\u0027privateDnsZoneId\u0027)]"
                          },
                          "privateEndpointName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/43d6e3bd-fc6a-4b44-8b4d-2151d8736a11",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "43d6e3bd-fc6a-4b44-8b4d-2151d8736a11"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1398 - Controlled Maintenance",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Maintenance control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1398"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/443e8f3d-b51a-45d8-95a7-18b0e42f4dc4",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "443e8f3d-b51a-45d8-95a7-18b0e42f4dc4"
          },
          {
            "properties": {
              "displayName": "Configure Azure Defender for open-source relational databases to be enabled",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Azure Defender for open-source relational databases detects anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. Learn more about the capabilities of Azure Defender for open-source relational databases at https://aka.ms/AzDforOpenSourceDBsDocu. Important: Enabling this plan will result in charges for protecting your open-source relational databases. Learn about the pricing on Security Center\u0027s pricing page: https://aka.ms/pricing-security-center",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/pricings",
                    "name": "OpenSourceRelationalDatabases",
                    "deploymentScope": "subscription",
                    "existenceScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ],
                    "existenceCondition": {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    },
                    "deployment": {
                      "location": "westeurope",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {},
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {},
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Security/pricings",
                              "apiVersion": "2018-06-01",
                              "name": "OpenSourceRelationalDatabases",
                              "properties": {
                                "pricingTier": "Standard"
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "44433aa3-7ec2-4002-93ea-65c65ff0310a"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Monitor permissive network access in Azure Security Center",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Network Security Groups with too permissive rules will be monitored by Azure Security Center as recommendations",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "permissiveNetworkAccess",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "44452482-524f-4bf4-b852-0bff7cc4a3ed"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1066 - Remote Access | Disconnect / Disable Access",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1066"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4455c2e8-c65d-4acf-895e-304916f90b36",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4455c2e8-c65d-4acf-895e-304916f90b36"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1720 - Spam Protection",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1720"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/44b9a7cd-f36a-491a-a48b-6d04ae7c4221",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "44b9a7cd-f36a-491a-a48b-6d04ae7c4221"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1334 - Authenticator Management | Pki-Based Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1334"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/44bfdadc-8c2e-4c30-9c99-f005986fabcd",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "44bfdadc-8c2e-4c30-9c99-f005986fabcd"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1604 - Developer Security Testing And Evaluation",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1604"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/44dbba23-0b61-478e-89c7-b3084667782f",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "44dbba23-0b61-478e-89c7-b3084667782f"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1712 - Software, Firmware, And Information Integrity",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Information Integrity control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1712"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/44e543aa-41db-42aa-98eb-8a5eb1db53f0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "44e543aa-41db-42aa-98eb-8a5eb1db53f0"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1310 - Device Identification And Authentication",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1310"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/450d7ede-823d-4931-a99d-57f6a38807dc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "450d7ede-823d-4931-a99d-57f6a38807dc"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1559 - System And Services Acquisition Policy And Procedures",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1559"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/45692294-f074-42bd-ac54-16f1a3c07554",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "45692294-f074-42bd-ac54-16f1a3c07554"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1578 - Acquisition Process | Functions / Ports / Protocols / Services In Use",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1578"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/45b7b644-5f91-498e-9d89-7402532d3645",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "45b7b644-5f91-498e-9d89-7402532d3645"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1565 - System Development Life Cycle",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this System and Services Acquisition control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1565"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/45ce2396-5c76-4654-9737-f8792ab3d26b",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "45ce2396-5c76-4654-9737-f8792ab3d26b"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1337 - Authenticator Management | In-Person Or Trusted Third-Party Registration",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1337"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/463e5220-3f79-4e24-a63f-343e4096cd22",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "463e5220-3f79-4e24-a63f-343e4096cd22"
          },
          {
            "properties": {
              "displayName": "Azure SignalR Service should use a Private Link enabled SKU",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination which protect your resources against public data leakage risks. The policy limits you to Private Link enabled SKUs for Azure SignalR Service. Learn more about private link at: https://aka.ms/asrs/privatelink.",
              "metadata": {
                "version": "1.0.0",
                "category": "SignalR"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.SignalRService/SignalR"
                    },
                    {
                      "field": "Microsoft.SignalRService/SignalR/sku.tier",
                      "equals": "Free"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/464a1620-21b5-448d-8ce6-d4ac6d1bc49a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "464a1620-21b5-448d-8ce6-d4ac6d1bc49a"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Require SQL Server version 12.0",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy ensures all SQL servers use version 12.0. This policy is deprecated because it is no longer possible to create an Azure SQL server with any version other than 12.0.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "SQL",
                "deprecated": true
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "not": {
                        "field": "Microsoft.Sql/servers/version",
                        "equals": "12.0"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "Deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/464dbb85-3d5f-4a1d-bb09-95a9b5dd19cf",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "464dbb85-3d5f-4a1d-bb09-95a9b5dd19cf"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1346 - Identification And Authentication (Non-Organizational Users)",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Identification and Authentication control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1346"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/464dc8ce-2200-4720-87a5-dc5952924cc6",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "464dc8ce-2200-4720-87a5-dc5952924cc6"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Audit Web Applications that are not using latest supported Python Framework",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use the latest supported Python version for the latest security classes. Using older classes and types can make your application vulnerable.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allof": [
                    {
                      "field": "type",
                      "equals": "microsoft.Web/sites"
                    },
                    {
                      "anyof": [
                        {
                          "field": "kind",
                          "equals": "app"
                        },
                        {
                          "field": "kind",
                          "equals": "WebApp"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/complianceResults",
                    "name": "UseLatestPython",
                    "existenceCondition": {
                      "field": "Microsoft.Security/complianceResults/resourceStatus",
                      "in": [
                        "OffByPolicy",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/46544d7b-1f0d-46f5-81da-5c1351de1b06",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "46544d7b-1f0d-46f5-81da-5c1351de1b06"
          },
          {
            "properties": {
              "displayName": "Require automatic OS image patching on Virtual Machine Scale Sets",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy enforces enabling automatic OS image patching on Virtual Machine Scale Sets to always keep Virtual Machines secure by safely applying latest security patches every month.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "Microsoft.Compute/VirtualMachineScaleSets/upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade",
                      "notEquals": "True"
                    },
                    {
                      "field": "Microsoft.Compute/VirtualMachineScaleSets/upgradePolicy.automaticOSUpgrade",
                      "notEquals": "True"
                    }
                  ]
                },
                "then": {
                  "effect": "deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/465f0161-0087-490a-9ad9-ad6217f4f43a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "465f0161-0087-490a-9ad9-ad6217f4f43a"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1368 - Incident Handling | Correlation With External Organizations",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1368"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/465f32da-0ace-4603-8d1b-7be5a3a702de",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "465f32da-0ace-4603-8d1b-7be5a3a702de"
          },
          {
            "properties": {
              "displayName": "Cognitive Services accounts should use customer owned storage",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer owned storage to control the data stored at rest in Cognitive Services. To learn more about customer owned storage, visit https://aka.ms/cogsvc-cmk.",
              "metadata": {
                "version": "2.0.0",
                "category": "Cognitive Services"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "count": {
                        "field": "Microsoft.CognitiveServices/accounts/userOwnedStorage[*]"
                      },
                      "less": 1
                    },
                    {
                      "count": {
                        "field": "Microsoft.CognitiveServices/accounts/capabilities[*]",
                        "where": {
                          "field": "Microsoft.CognitiveServices/accounts/capabilities[*].name",
                          "equals": "CustomerManagedStorage"
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/46aa9b05-0e60-4eae-a88b-1e9d374fa515",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "46aa9b05-0e60-4eae-a88b-1e9d374fa515"
          },
          {
            "properties": {
              "displayName": "[Preview]: IoT Hub device provisioning service data should be encrypted using customer-managed keys (CMK)",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer-managed keys to manage the encryption at rest of your IoT Hub device provisioning service. The data is automatically encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. Learn more about CMK encryption at https://aka.ms/dps/CMK.",
              "metadata": {
                "version": "1.0.0-preview",
                "category": "Internet of Things",
                "preview": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Devices/provisioningServices"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Devices/provisioningServices/encryption.keyVaultProperties[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Devices/provisioningServices/encryption.keyVaultProperties[*].keyIdentifier",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Devices/provisioningServices/encryption.keyVaultProperties[*].keyIdentifier",
                              "notequals": ""
                            }
                          ]
                        }
                      },
                      "less": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/47031206-ce96-41f8-861b-6a915f3de284",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "47031206-ce96-41f8-861b-6a915f3de284"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1062 - Remote Access | Protection Of Confidentiality / Integrity Using Encryption",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Access Control control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1062"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4708723f-e099-4af1-bbf9-b6df7642e444",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4708723f-e099-4af1-bbf9-b6df7642e444"
          },
          {
            "properties": {
              "displayName": "Azure Cache for Redis should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that the Azure Cache for Redis isn\u0027t exposed on the public internet. You can limit exposure of your Azure Cache for Redis by creating private endpoints instead. Learn more at: https://docs.microsoft.com/azure/azure-cache-for-redis/cache-private-link.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cache"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Cache/Redis"
                    },
                    {
                      "field": "Microsoft.Cache/Redis/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/470baccb-7e51-4549-8b1a-3e5be069f663",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "470baccb-7e51-4549-8b1a-3e5be069f663"
          },
          {
            "properties": {
              "displayName": "Storage accounts should have infrastructure encryption",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Enable infrastructure encryption for higher level of assurance that the data is secure. When infrastructure encryption is enabled, data in a storage account is encrypted twice.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the audit policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/encryption.requireInfrastructureEncryption",
                      "notEquals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4733ea7b-a883-42fe-8cac-97454c2a9e4a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4733ea7b-a883-42fe-8cac-97454c2a9e4a"
          },
          {
            "properties": {
              "displayName": "Azure Cosmos DB key based metadata write access should be disabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy enables you to ensure all Azure Cosmos DB accounts disable key based metadata write access.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cosmos DB"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DocumentDB/databaseAccounts"
                    },
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/disableKeyBasedMetadataWriteAccess",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "append",
                  "details": [
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/disableKeyBasedMetadataWriteAccess",
                      "value": true
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/4750c32b-89c0-46af-bfcb-2e4541a818d5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "4750c32b-89c0-46af-bfcb-2e4541a818d5"
          },
          {
            "properties": {
              "displayName": "Auto provisioning of the Log Analytics agent should be enabled on your subscription",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "To monitor for security vulnerabilities and threats, Azure Security Center collects data from your Azure virtual machines. Data is collected by the Log Analytics agent, formerly known as the Microsoft Monitoring Agent (MMA), which reads various security-related configurations and event logs from the machine and copies the data to your Log Analytics workspace for analysis. We recommend enabling auto provisioning to automatically deploy the agent to all supported Azure VMs and any new ones that are created.",
              "metadata": {
                "version": "1.0.1",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/autoProvisioningSettings",
                    "existenceCondition": {
                      "field": "Microsoft.Security/autoProvisioningSettings/autoProvision",
                      "equals": "On"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/475aae12-b88a-4572-8b36-9b712b2b3a17",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "475aae12-b88a-4572-8b36-9b712b2b3a17"
          },
          {
            "properties": {
              "displayName": "Adaptive application controls for defining safe applications should be enabled on your machines",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Enable application controls to define the list of known-safe applications running on your machines, and alert you when other applications run. This helps harden your machines against malware. To simplify the process of configuring and maintaining your rules, Security Center uses machine learning to analyze the applications running on each machine and suggest the list of known-safe applications.",
              "metadata": {
                "version": "3.0.0",
                "category": "Security Center"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Security/assessments",
                    "name": "35f45c95-27cf-4e52-891f-8390d1de5828",
                    "existenceCondition": {
                      "field": "Microsoft.Security/assessments/status.code",
                      "in": [
                        "NotApplicable",
                        "Healthy"
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "47a6b606-51aa-4496-8bb7-64b11cf66adc"
          },
          {
            "properties": {
              "displayName": "Configure Cognitive Services accounts to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for your Cognitive Services resource so that it\u0027s not accessible over the public internet. This can reduce data leakage risks. Learn more at: https://go.microsoft.com/fwlink/?linkid=2129800.",
              "metadata": {
                "version": "2.0.0",
                "category": "Cognitive Services"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Disabled",
                    "Modify"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "field": "Microsoft.CognitiveServices/accounts/publicNetworkAccess",
                      "notEquals": "Disabled"
                    },
                    {
                      "count": {
                        "field": "Microsoft.CognitiveServices/accounts/capabilities[*]",
                        "where": {
                          "field": "Microsoft.CognitiveServices/accounts/capabilities[*].name",
                          "equals": "VirtualNetworks"
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "condition": "[greaterOrEquals(requestContext().apiVersion, \u00272017-04-18\u0027)]",
                        "operation": "addOrReplace",
                        "field": "Microsoft.CognitiveServices/accounts/publicNetworkAccess",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/47ba1dd7-28d9-4b07-a8d5-9813bed64e0c",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "47ba1dd7-28d9-4b07-a8d5-9813bed64e0c"
          },
          {
            "properties": {
              "displayName": "Microsoft Managed Control 1359 - Incident Response Testing | Coordination With Related Plans",
              "policyType": "Static",
              "mode": "Indexed",
              "description": "Microsoft implements this Incident Response control",
              "metadata": {
                "version": "1.0.0",
                "category": "Regulatory Compliance",
                "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/ACF1359"
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Resources/subscriptions",
                        "Microsoft.Resources/subscriptions/resourceGroups"
                      ]
                    },
                    {
                      "value": "false",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/47bc7ea0-7d13-4f7c-a154-b903f7194253",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "47bc7ea0-7d13-4f7c-a154-b903f7194253"
          }
        ],
        "nextLink": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions?api-version=2021-06-01\u0026$skiptoken=eyJuZXh0UG9saWN5U3RvcmUiOiJDb250cm9sUGxhbmVCdWlsdEluRGVmaW5pdGlvbiIsImNhY2hlU2tpcFRva2VuIjp7Im5leHRJbmRleCI6NTAwLCJuZXh0UG9saWN5TmFtZSI6IjQ3ZTEwOTE2LTZjOWUtNDQ2Yi1iMGJkLWZmNWZkNDM5ZDc5ZCIsImNhY2hlTGVuZ3RoIjoxNzQzfX0%3D"
      }
    }
  ],
  "Variables": {}
}
