// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armweb

import (
	"context"
	"net/http"
	"time"
)

// APIKVReferenceCollectionResponse is the response envelope for operations that return a APIKVReferenceCollection type.
type APIKVReferenceCollectionResponse struct {
	APIKVReferenceCollection *APIKVReferenceCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIKVReferenceResponse is the response envelope for operations that return a APIKVReference type.
type APIKVReferenceResponse struct {
	// Description of site key vault references.
	APIKVReference *APIKVReference

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AddressResponseResponse is the response envelope for operations that return a AddressResponse type.
type AddressResponseResponse struct {
	// Describes main public IP address and any extra virtual IPs.
	AddressResponse *AddressResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AnalysisDefinitionResponse is the response envelope for operations that return a AnalysisDefinition type.
type AnalysisDefinitionResponse struct {
	// Definition of Analysis
	AnalysisDefinition *AnalysisDefinition

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceCertificateCollectionResponse is the response envelope for operations that return a AppServiceCertificateCollection type.
type AppServiceCertificateCollectionResponse struct {
	// Collection of certificate order certificates.
	AppServiceCertificateCollection *AppServiceCertificateCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceCertificateOrderCollectionResponse is the response envelope for operations that return a AppServiceCertificateOrderCollection type.
type AppServiceCertificateOrderCollectionResponse struct {
	// Collection of certificate orders.
	AppServiceCertificateOrderCollection *AppServiceCertificateOrderCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceCertificateOrderPollerResponse is the response envelope for operations that asynchronously return a AppServiceCertificateOrder type.
type AppServiceCertificateOrderPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (AppServiceCertificateOrderResponse, error)

	// Poller contains an initialized poller.
	Poller AppServiceCertificateOrderPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceCertificateOrderResponse is the response envelope for operations that return a AppServiceCertificateOrder type.
type AppServiceCertificateOrderResponse struct {
	// SSL certificate purchase order.
	AppServiceCertificateOrder *AppServiceCertificateOrder

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceCertificateResourcePollerResponse is the response envelope for operations that asynchronously return a AppServiceCertificateResource type.
type AppServiceCertificateResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (AppServiceCertificateResourceResponse, error)

	// Poller contains an initialized poller.
	Poller AppServiceCertificateResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceCertificateResourceResponse is the response envelope for operations that return a AppServiceCertificateResource type.
type AppServiceCertificateResourceResponse struct {
	// Key Vault container ARM resource for a certificate that is purchased through Azure.
	AppServiceCertificateResource *AppServiceCertificateResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceEnvironmentCollectionResponse is the response envelope for operations that return a AppServiceEnvironmentCollection type.
type AppServiceEnvironmentCollectionResponse struct {
	// Collection of App Service Environments.
	AppServiceEnvironmentCollection *AppServiceEnvironmentCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceEnvironmentResourcePollerResponse is the response envelope for operations that asynchronously return a AppServiceEnvironmentResource type.
type AppServiceEnvironmentResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (AppServiceEnvironmentResourceResponse, error)

	// Poller contains an initialized poller.
	Poller AppServiceEnvironmentResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServiceEnvironmentResourceResponse is the response envelope for operations that return a AppServiceEnvironmentResource type.
type AppServiceEnvironmentResourceResponse struct {
	// App Service Environment ARM resource.
	AppServiceEnvironmentResource *AppServiceEnvironmentResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServicePlanCollectionResponse is the response envelope for operations that return a AppServicePlanCollection type.
type AppServicePlanCollectionResponse struct {
	// Collection of App Service plans.
	AppServicePlanCollection *AppServicePlanCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServicePlanPollerResponse is the response envelope for operations that asynchronously return a AppServicePlan type.
type AppServicePlanPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (AppServicePlanResponse, error)

	// Poller contains an initialized poller.
	Poller AppServicePlanPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppServicePlanResponse is the response envelope for operations that return a AppServicePlan type.
type AppServicePlanResponse struct {
	// App Service plan.
	AppServicePlan *AppServicePlan

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationStackCollectionResponse is the response envelope for operations that return a ApplicationStackCollection type.
type ApplicationStackCollectionResponse struct {
	// Collection of Application Stacks
	ApplicationStackCollection *ApplicationStackCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AppserviceGithubTokenResponse is the response envelope for operations that return a AppserviceGithubToken type.
type AppserviceGithubTokenResponse struct {
	// Github access token for Appservice CLI github integration.
	AppserviceGithubToken *AppserviceGithubToken

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AseV3NetworkingConfigurationResponse is the response envelope for operations that return a AseV3NetworkingConfiguration type.
type AseV3NetworkingConfigurationResponse struct {
	// Full view of networking configuration for an ASE.
	AseV3NetworkingConfiguration *AseV3NetworkingConfiguration

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AzureStoragePropertyDictionaryResourceResponse is the response envelope for operations that return a AzureStoragePropertyDictionaryResource type.
type AzureStoragePropertyDictionaryResourceResponse struct {
	// AzureStorageInfo dictionary resource.
	AzureStoragePropertyDictionaryResource *AzureStoragePropertyDictionaryResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupItemCollectionResponse is the response envelope for operations that return a BackupItemCollection type.
type BackupItemCollectionResponse struct {
	// Collection of backup items.
	BackupItemCollection *BackupItemCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupItemResponse is the response envelope for operations that return a BackupItem type.
type BackupItemResponse struct {
	// Backup description.
	BackupItem *BackupItem

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupRequestResponse is the response envelope for operations that return a BackupRequest type.
type BackupRequestResponse struct {
	// Description of a backup which will be performed.
	BackupRequest *BackupRequest

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BillingMeterCollectionResponse is the response envelope for operations that return a BillingMeterCollection type.
type BillingMeterCollectionResponse struct {
	// Collection of Billing Meters
	BillingMeterCollection *BillingMeterCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CapabilityArrayResponse is the response envelope for operations that return a []*Capability type.
type CapabilityArrayResponse struct {
	// Array of Capability
	CapabilityArray []*Capability

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateCollectionResponse is the response envelope for operations that return a CertificateCollection type.
type CertificateCollectionResponse struct {
	// Collection of certificates.
	CertificateCollection *CertificateCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateEmailArrayResponse is the response envelope for operations that return a []*CertificateEmail type.
type CertificateEmailArrayResponse struct {
	// Array of CertificateEmail
	CertificateEmailArray []*CertificateEmail

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateOrderActionArrayResponse is the response envelope for operations that return a []*CertificateOrderAction type.
type CertificateOrderActionArrayResponse struct {
	// Array of CertificateOrderAction
	CertificateOrderActionArray []*CertificateOrderAction

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateResponse is the response envelope for operations that return a Certificate type.
type CertificateResponse struct {
	// SSL certificate for an app.
	Certificate *Certificate

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ConnectionStringDictionaryResponse is the response envelope for operations that return a ConnectionStringDictionary type.
type ConnectionStringDictionaryResponse struct {
	// String dictionary resource.
	ConnectionStringDictionary *ConnectionStringDictionary

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContinuousWebJobCollectionResponse is the response envelope for operations that return a ContinuousWebJobCollection type.
type ContinuousWebJobCollectionResponse struct {
	// Collection of Kudu continuous web job information elements.
	ContinuousWebJobCollection *ContinuousWebJobCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContinuousWebJobResponse is the response envelope for operations that return a ContinuousWebJob type.
type ContinuousWebJobResponse struct {
	// Continuous Web Job Information.
	ContinuousWebJob *ContinuousWebJob

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CsmOperationCollectionResponse is the response envelope for operations that return a CsmOperationCollection type.
type CsmOperationCollectionResponse struct {
	// Collection of Azure resource manager operation metadata.
	CsmOperationCollection *CsmOperationCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CsmPublishingCredentialsPoliciesEntityResponse is the response envelope for operations that return a CsmPublishingCredentialsPoliciesEntity type.
type CsmPublishingCredentialsPoliciesEntityResponse struct {
	// Publishing Credentials Policies parameters.
	CsmPublishingCredentialsPoliciesEntity *CsmPublishingCredentialsPoliciesEntity

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CsmUsageQuotaCollectionResponse is the response envelope for operations that return a CsmUsageQuotaCollection type.
type CsmUsageQuotaCollectionResponse struct {
	// Collection of CSM usage quotas.
	CsmUsageQuotaCollection *CsmUsageQuotaCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomHostnameAnalysisResultResponse is the response envelope for operations that return a CustomHostnameAnalysisResult type.
type CustomHostnameAnalysisResultResponse struct {
	// Custom domain analysis.
	CustomHostnameAnalysisResult *CustomHostnameAnalysisResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeletedSiteResponse is the response envelope for operations that return a DeletedSite type.
type DeletedSiteResponse struct {
	// A deleted app.
	DeletedSite *DeletedSite

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeletedWebAppCollectionResponse is the response envelope for operations that return a DeletedWebAppCollection type.
type DeletedWebAppCollectionResponse struct {
	// Collection of deleted apps.
	DeletedWebAppCollection *DeletedWebAppCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentCollectionResponse is the response envelope for operations that return a DeploymentCollection type.
type DeploymentCollectionResponse struct {
	// Collection of app deployments.
	DeploymentCollection *DeploymentCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentLocationsResponse is the response envelope for operations that return a DeploymentLocations type.
type DeploymentLocationsResponse struct {
	// List of available locations (regions or App Service Environments) for
	// deployment of App Service resources.
	DeploymentLocations *DeploymentLocations

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentResponse is the response envelope for operations that return a Deployment type.
type DeploymentResponse struct {
	// User credentials used for publishing activity.
	Deployment *Deployment

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DetectorDefinitionResponse is the response envelope for operations that return a DetectorDefinition type.
type DetectorDefinitionResponse struct {
	// Class representing detector definition
	DetectorDefinition *DetectorDefinition

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DetectorResponseCollectionResponse is the response envelope for operations that return a DetectorResponseCollection type.
type DetectorResponseCollectionResponse struct {
	// Collection of detector responses
	DetectorResponseCollection *DetectorResponseCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DetectorResponseResponse is the response envelope for operations that return a DetectorResponse type.
type DetectorResponseResponse struct {
	// Class representing Response from Detector
	DetectorResponse *DetectorResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticAnalysisCollectionResponse is the response envelope for operations that return a DiagnosticAnalysisCollection type.
type DiagnosticAnalysisCollectionResponse struct {
	// Collection of Diagnostic Analyses
	DiagnosticAnalysisCollection *DiagnosticAnalysisCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticAnalysisResponse is the response envelope for operations that return a DiagnosticAnalysis type.
type DiagnosticAnalysisResponse struct {
	// Class representing a diagnostic analysis done on an application
	DiagnosticAnalysis *DiagnosticAnalysis

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticCategoryCollectionResponse is the response envelope for operations that return a DiagnosticCategoryCollection type.
type DiagnosticCategoryCollectionResponse struct {
	// Collection of Diagnostic Categories
	DiagnosticCategoryCollection *DiagnosticCategoryCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticCategoryResponse is the response envelope for operations that return a DiagnosticCategory type.
type DiagnosticCategoryResponse struct {
	// Class representing detector definition
	DiagnosticCategory *DiagnosticCategory

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticDetectorCollectionResponse is the response envelope for operations that return a DiagnosticDetectorCollection type.
type DiagnosticDetectorCollectionResponse struct {
	// Collection of Diagnostic Detectors
	DiagnosticDetectorCollection *DiagnosticDetectorCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticDetectorResponseResponse is the response envelope for operations that return a DiagnosticDetectorResponse type.
type DiagnosticDetectorResponseResponse struct {
	// Class representing Response from Diagnostic Detectors
	DiagnosticDetectorResponse *DiagnosticDetectorResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainAvailabilityCheckResultResponse is the response envelope for operations that return a DomainAvailabilityCheckResult type.
type DomainAvailabilityCheckResultResponse struct {
	// Domain availability check result.
	DomainAvailabilityCheckResult *DomainAvailabilityCheckResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainCollectionResponse is the response envelope for operations that return a DomainCollection type.
type DomainCollectionResponse struct {
	// Collection of domains.
	DomainCollection *DomainCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainControlCenterSsoRequestResponse is the response envelope for operations that return a DomainControlCenterSsoRequest type.
type DomainControlCenterSsoRequestResponse struct {
	// Single sign-on request information for domain management.
	DomainControlCenterSsoRequest *DomainControlCenterSsoRequest

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainOwnershipIdentifierCollectionResponse is the response envelope for operations that return a DomainOwnershipIdentifierCollection type.
type DomainOwnershipIdentifierCollectionResponse struct {
	// Collection of domain ownership identifiers.
	DomainOwnershipIdentifierCollection *DomainOwnershipIdentifierCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainOwnershipIdentifierResponse is the response envelope for operations that return a DomainOwnershipIdentifier type.
type DomainOwnershipIdentifierResponse struct {
	// Domain ownership Identifier.
	DomainOwnershipIdentifier *DomainOwnershipIdentifier

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainPollerResponse is the response envelope for operations that asynchronously return a Domain type.
type DomainPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DomainResponse, error)

	// Poller contains an initialized poller.
	Poller DomainPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DomainResponse is the response envelope for operations that return a Domain type.
type DomainResponse struct {
	// Information about a domain.
	Domain *Domain

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// FunctionAppStackCollectionResponse is the response envelope for operations that return a FunctionAppStackCollection type.
type FunctionAppStackCollectionResponse struct {
	// Collection of Function app Stacks
	FunctionAppStackCollection *FunctionAppStackCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// FunctionEnvelopeCollectionResponse is the response envelope for operations that return a FunctionEnvelopeCollection type.
type FunctionEnvelopeCollectionResponse struct {
	// Collection of Kudu function information elements.
	FunctionEnvelopeCollection *FunctionEnvelopeCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// FunctionEnvelopePollerResponse is the response envelope for operations that asynchronously return a FunctionEnvelope type.
type FunctionEnvelopePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (FunctionEnvelopeResponse, error)

	// Poller contains an initialized poller.
	Poller FunctionEnvelopePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// FunctionEnvelopeResponse is the response envelope for operations that return a FunctionEnvelope type.
type FunctionEnvelopeResponse struct {
	// Function information.
	FunctionEnvelope *FunctionEnvelope

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// FunctionSecretsResponse is the response envelope for operations that return a FunctionSecrets type.
type FunctionSecretsResponse struct {
	// Function secrets.
	FunctionSecrets *FunctionSecrets

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GeoRegionCollectionResponse is the response envelope for operations that return a GeoRegionCollection type.
type GeoRegionCollectionResponse struct {
	// Collection of geographical regions.
	GeoRegionCollection *GeoRegionCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HostKeysResponse is the response envelope for operations that return a HostKeys type.
type HostKeysResponse struct {
	// Functions host level keys.
	HostKeys *HostKeys

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HostNameBindingCollectionResponse is the response envelope for operations that return a HostNameBindingCollection type.
type HostNameBindingCollectionResponse struct {
	// Collection of hostname bindings.
	HostNameBindingCollection *HostNameBindingCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HostNameBindingResponse is the response envelope for operations that return a HostNameBinding type.
type HostNameBindingResponse struct {
	// A hostname binding object.
	HostNameBinding *HostNameBinding

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HostingEnvironmentDiagnosticsArrayResponse is the response envelope for operations that return a []*HostingEnvironmentDiagnostics type.
type HostingEnvironmentDiagnosticsArrayResponse struct {
	// Array of HostingEnvironmentDiagnostics
	HostingEnvironmentDiagnosticsArray []*HostingEnvironmentDiagnostics

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HostingEnvironmentDiagnosticsResponse is the response envelope for operations that return a HostingEnvironmentDiagnostics type.
type HostingEnvironmentDiagnosticsResponse struct {
	// Diagnostics for an App Service Environment.
	HostingEnvironmentDiagnostics *HostingEnvironmentDiagnostics

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HybridConnectionCollectionResponse is the response envelope for operations that return a HybridConnectionCollection type.
type HybridConnectionCollectionResponse struct {
	// Collection of hostname bindings.
	HybridConnectionCollection *HybridConnectionCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HybridConnectionKeyResponse is the response envelope for operations that return a HybridConnectionKey type.
type HybridConnectionKeyResponse struct {
	// Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.
	HybridConnectionKey *HybridConnectionKey

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HybridConnectionLimitsResponse is the response envelope for operations that return a HybridConnectionLimits type.
type HybridConnectionLimitsResponse struct {
	// Hybrid Connection limits contract. This is used to return the plan limits of Hybrid Connections.
	HybridConnectionLimits *HybridConnectionLimits

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HybridConnectionResponse is the response envelope for operations that return a HybridConnection type.
type HybridConnectionResponse struct {
	// Hybrid Connection contract. This is used to configure a Hybrid Connection.
	HybridConnection *HybridConnection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentifierCollectionResponse is the response envelope for operations that return a IdentifierCollection type.
type IdentifierCollectionResponse struct {
	// Collection of identifiers.
	IdentifierCollection *IdentifierCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentifierResponse is the response envelope for operations that return a Identifier type.
type IdentifierResponse struct {
	// A domain specific resource identifier.
	Identifier *Identifier

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// InboundEnvironmentEndpointCollectionResponse is the response envelope for operations that return a InboundEnvironmentEndpointCollection type.
type InboundEnvironmentEndpointCollectionResponse struct {
	// Collection of Inbound Environment Endpoints
	InboundEnvironmentEndpointCollection *InboundEnvironmentEndpointCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// KeyInfoResponse is the response envelope for operations that return a KeyInfo type.
type KeyInfoResponse struct {
	// Function key info.
	KeyInfo *KeyInfo

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// KubeEnvironmentCollectionResponse is the response envelope for operations that return a KubeEnvironmentCollection type.
type KubeEnvironmentCollectionResponse struct {
	// Collection of Kubernetes Environments
	KubeEnvironmentCollection *KubeEnvironmentCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// KubeEnvironmentPollerResponse is the response envelope for operations that asynchronously return a KubeEnvironment type.
type KubeEnvironmentPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (KubeEnvironmentResponse, error)

	// Poller contains an initialized poller.
	Poller KubeEnvironmentPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// KubeEnvironmentResponse is the response envelope for operations that return a KubeEnvironment type.
type KubeEnvironmentResponse struct {
	// A Kubernetes cluster specialized for web workloads by Azure App Service
	KubeEnvironment *KubeEnvironment

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MSDeployLogResponse is the response envelope for operations that return a MSDeployLog type.
type MSDeployLogResponse struct {
	// MSDeploy log
	MSDeployLog *MSDeployLog

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MSDeployStatusPollerResponse is the response envelope for operations that asynchronously return a MSDeployStatus type.
type MSDeployStatusPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (MSDeployStatusResponse, error)

	// Poller contains an initialized poller.
	Poller MSDeployStatusPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MSDeployStatusResponse is the response envelope for operations that return a MSDeployStatus type.
type MSDeployStatusResponse struct {
	// MSDeploy ARM response
	MSDeployStatus *MSDeployStatus

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MigrateMySQLStatusResponse is the response envelope for operations that return a MigrateMySQLStatus type.
type MigrateMySQLStatusResponse struct {
	// MySQL migration status.
	MigrateMySQLStatus *MigrateMySQLStatus

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NameIdentifierCollectionResponse is the response envelope for operations that return a NameIdentifierCollection type.
type NameIdentifierCollectionResponse struct {
	// Collection of domain name identifiers.
	NameIdentifierCollection *NameIdentifierCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NetworkFeaturesResponse is the response envelope for operations that return a NetworkFeatures type.
type NetworkFeaturesResponse struct {
	// Full view of network features for an app (presently VNET integration and Hybrid Connections).
	NetworkFeatures *NetworkFeatures

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NetworkTraceArrayPollerResponse is the response envelope for operations that asynchronously return a []*NetworkTrace type.
type NetworkTraceArrayPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (NetworkTraceArrayResponse, error)

	// Poller contains an initialized poller.
	Poller NetworkTraceArrayPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NetworkTraceArrayResponse is the response envelope for operations that return a []*NetworkTrace type.
type NetworkTraceArrayResponse struct {
	// Array of NetworkTrace
	NetworkTraceArray []*NetworkTrace

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ObjectPollerResponse is the response envelope for operations that asynchronously return a map[string]interface{} type.
type ObjectPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ObjectResponse, error)

	// Poller contains an initialized poller.
	Poller ObjectPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ObjectResponse is the response envelope for operations that return a map[string]interface{} type.
type ObjectResponse struct {
	// Any object
	Object map[string]interface{}

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationArrayResponse is the response envelope for operations that return a []*Operation type.
type OperationArrayResponse struct {
	// Array of Operation
	OperationArray []*Operation

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationPollerResponse is the response envelope for operations that asynchronously return a Operation type.
type OperationPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (OperationResponse, error)

	// Poller contains an initialized poller.
	Poller OperationPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationResponse is the response envelope for operations that return a Operation type.
type OperationResponse struct {
	// An operation on a resource.
	Operation *Operation

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OutboundEnvironmentEndpointCollectionResponse is the response envelope for operations that return a OutboundEnvironmentEndpointCollection type.
type OutboundEnvironmentEndpointCollectionResponse struct {
	// Collection of Outbound Environment Endpoints
	OutboundEnvironmentEndpointCollection *OutboundEnvironmentEndpointCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PerfMonCounterCollectionResponse is the response envelope for operations that return a PerfMonCounterCollection type.
type PerfMonCounterCollectionResponse struct {
	// Collection of performance monitor counters.
	PerfMonCounterCollection *PerfMonCounterCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PremierAddOnOfferCollectionResponse is the response envelope for operations that return a PremierAddOnOfferCollection type.
type PremierAddOnOfferCollectionResponse struct {
	// Collection of premier add-on offers.
	PremierAddOnOfferCollection *PremierAddOnOfferCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PremierAddOnResponse is the response envelope for operations that return a PremierAddOn type.
type PremierAddOnResponse struct {
	// Premier add-on.
	PremierAddOn *PremierAddOn

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateAccessResponse is the response envelope for operations that return a PrivateAccess type.
type PrivateAccessResponse struct {
	// Description of the parameters of Private Access for a Web Site.
	PrivateAccess *PrivateAccess

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionCollectionResponse is the response envelope for operations that return a PrivateEndpointConnectionCollection type.
type PrivateEndpointConnectionCollectionResponse struct {
	PrivateEndpointConnectionCollection *PrivateEndpointConnectionCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourcesWrapperResponse is the response envelope for operations that return a PrivateLinkResourcesWrapper type.
type PrivateLinkResourcesWrapperResponse struct {
	// Wrapper for a collection of private link resources
	PrivateLinkResourcesWrapper *PrivateLinkResourcesWrapper

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProcessInfoCollectionResponse is the response envelope for operations that return a ProcessInfoCollection type.
type ProcessInfoCollectionResponse struct {
	// Collection of Kudu process information elements.
	ProcessInfoCollection *ProcessInfoCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProcessInfoResponse is the response envelope for operations that return a ProcessInfo type.
type ProcessInfoResponse struct {
	// Process Information.
	ProcessInfo *ProcessInfo

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProcessModuleInfoCollectionResponse is the response envelope for operations that return a ProcessModuleInfoCollection type.
type ProcessModuleInfoCollectionResponse struct {
	// Collection of Kudu thread information elements.
	ProcessModuleInfoCollection *ProcessModuleInfoCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProcessModuleInfoResponse is the response envelope for operations that return a ProcessModuleInfo type.
type ProcessModuleInfoResponse struct {
	// Process Module Information.
	ProcessModuleInfo *ProcessModuleInfo

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProcessThreadInfoCollectionResponse is the response envelope for operations that return a ProcessThreadInfoCollection type.
type ProcessThreadInfoCollectionResponse struct {
	// Collection of Kudu thread information elements.
	ProcessThreadInfoCollection *ProcessThreadInfoCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PublicCertificateCollectionResponse is the response envelope for operations that return a PublicCertificateCollection type.
type PublicCertificateCollectionResponse struct {
	// Collection of public certificates
	PublicCertificateCollection *PublicCertificateCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PublicCertificateResponse is the response envelope for operations that return a PublicCertificate type.
type PublicCertificateResponse struct {
	// Public certificate object
	PublicCertificate *PublicCertificate

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PublishingCredentialsPoliciesCollectionResponse is the response envelope for operations that return a PublishingCredentialsPoliciesCollection type.
type PublishingCredentialsPoliciesCollectionResponse struct {
	// Publishing Credentials Policies entity collection ARM resource.
	PublishingCredentialsPoliciesCollection *PublishingCredentialsPoliciesCollection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PushSettingsResponse is the response envelope for operations that return a PushSettings type.
type PushSettingsResponse struct {
	// Push settings for the App.
	PushSettings *PushSettings

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecommendationCollectionResponse is the response envelope for operations that return a RecommendationCollection type.
type RecommendationCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of recommendations.
	RecommendationCollection *RecommendationCollection
}

// RecommendationRuleResponse is the response envelope for operations that return a RecommendationRule type.
type RecommendationRuleResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Represents a recommendation rule that the recommendation engine can perform.
	RecommendationRule *RecommendationRule
}

// RelayServiceConnectionEntityResponse is the response envelope for operations that return a RelayServiceConnectionEntity type.
type RelayServiceConnectionEntityResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Hybrid Connection for an App Service app.
	RelayServiceConnectionEntity *RelayServiceConnectionEntity
}

// RemotePrivateEndpointConnectionARMResourcePollerResponse is the response envelope for operations that asynchronously return a RemotePrivateEndpointConnectionARMResource
// type.
type RemotePrivateEndpointConnectionARMResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (RemotePrivateEndpointConnectionARMResourceResponse, error)

	// Poller contains an initialized poller.
	Poller RemotePrivateEndpointConnectionARMResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RemotePrivateEndpointConnectionARMResourceResponse is the response envelope for operations that return a RemotePrivateEndpointConnectionARMResource type.
type RemotePrivateEndpointConnectionARMResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Remote Private Endpoint Connection ARM resource.
	RemotePrivateEndpointConnectionARMResource *RemotePrivateEndpointConnectionARMResource
}

// ResourceCollectionResponse is the response envelope for operations that return a ResourceCollection type.
type ResourceCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of resources.
	ResourceCollection *ResourceCollection
}

// ResourceHealthMetadataCollectionResponse is the response envelope for operations that return a ResourceHealthMetadataCollection type.
type ResourceHealthMetadataCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of resource health metadata.
	ResourceHealthMetadataCollection *ResourceHealthMetadataCollection
}

// ResourceHealthMetadataResponse is the response envelope for operations that return a ResourceHealthMetadata type.
type ResourceHealthMetadataResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Used for getting ResourceHealthCheck settings.
	ResourceHealthMetadata *ResourceHealthMetadata
}

// ResourceMetricDefinitionCollectionResponse is the response envelope for operations that return a ResourceMetricDefinitionCollection type.
type ResourceMetricDefinitionCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of metric definitions.
	ResourceMetricDefinitionCollection *ResourceMetricDefinitionCollection
}

// ResourceNameAvailabilityResponse is the response envelope for operations that return a ResourceNameAvailability type.
type ResourceNameAvailabilityResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Information regarding availability of a resource name.
	ResourceNameAvailability *ResourceNameAvailability
}

// RestoreRequestResponse is the response envelope for operations that return a RestoreRequest type.
type RestoreRequestResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Description of a restore request.
	RestoreRequest *RestoreRequest
}

// SKUInfoCollectionResponse is the response envelope for operations that return a SKUInfoCollection type.
type SKUInfoCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of SKU information.
	SKUInfoCollection *SKUInfoCollection
}

// SKUInfosResponse is the response envelope for operations that return a SKUInfos type.
type SKUInfosResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of SKU information.
	SKUInfos *SKUInfos
}

// SiteAuthSettingsResponse is the response envelope for operations that return a SiteAuthSettings type.
type SiteAuthSettingsResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Configuration settings for the Azure App Service Authentication / Authorization feature.
	SiteAuthSettings *SiteAuthSettings
}

// SiteAuthSettingsV2Response is the response envelope for operations that return a SiteAuthSettingsV2 type.
type SiteAuthSettingsV2Response struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Configuration settings for the Azure App Service Authentication / Authorization V2 feature.
	SiteAuthSettingsV2 *SiteAuthSettingsV2
}

// SiteCloneabilityResponse is the response envelope for operations that return a SiteCloneability type.
type SiteCloneabilityResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Represents whether or not an app is cloneable.
	SiteCloneability *SiteCloneability
}

// SiteConfigResourceCollectionResponse is the response envelope for operations that return a SiteConfigResourceCollection type.
type SiteConfigResourceCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of site configurations.
	SiteConfigResourceCollection *SiteConfigResourceCollection
}

// SiteConfigResourceResponse is the response envelope for operations that return a SiteConfigResource type.
type SiteConfigResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Web app configuration ARM resource.
	SiteConfigResource *SiteConfigResource
}

// SiteConfigurationSnapshotInfoCollectionResponse is the response envelope for operations that return a SiteConfigurationSnapshotInfoCollection type.
type SiteConfigurationSnapshotInfoCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of metadata for the app configuration snapshots that can be restored.
	SiteConfigurationSnapshotInfoCollection *SiteConfigurationSnapshotInfoCollection
}

// SiteExtensionInfoCollectionResponse is the response envelope for operations that return a SiteExtensionInfoCollection type.
type SiteExtensionInfoCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of Kudu site extension information elements.
	SiteExtensionInfoCollection *SiteExtensionInfoCollection
}

// SiteExtensionInfoPollerResponse is the response envelope for operations that asynchronously return a SiteExtensionInfo type.
type SiteExtensionInfoPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SiteExtensionInfoResponse, error)

	// Poller contains an initialized poller.
	Poller SiteExtensionInfoPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SiteExtensionInfoResponse is the response envelope for operations that return a SiteExtensionInfo type.
type SiteExtensionInfoResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Site Extension Information.
	SiteExtensionInfo *SiteExtensionInfo
}

// SiteLogsConfigResponse is the response envelope for operations that return a SiteLogsConfig type.
type SiteLogsConfigResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Configuration of App Service site logs.
	SiteLogsConfig *SiteLogsConfig
}

// SitePhpErrorLogFlagResponse is the response envelope for operations that return a SitePhpErrorLogFlag type.
type SitePhpErrorLogFlagResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Used for getting PHP error logging flag.
	SitePhpErrorLogFlag *SitePhpErrorLogFlag
}

// SitePollerResponse is the response envelope for operations that asynchronously return a Site type.
type SitePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SiteResponse, error)

	// Poller contains an initialized poller.
	Poller SitePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SiteResponse is the response envelope for operations that return a Site type.
type SiteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A web app, a mobile app backend, or an API app.
	Site *Site
}

// SiteSealResponse is the response envelope for operations that return a SiteSeal type.
type SiteSealResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Site seal
	SiteSeal *SiteSeal
}

// SiteSourceControlPollerResponse is the response envelope for operations that asynchronously return a SiteSourceControl type.
type SiteSourceControlPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SiteSourceControlResponse, error)

	// Poller contains an initialized poller.
	Poller SiteSourceControlPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SiteSourceControlResponse is the response envelope for operations that return a SiteSourceControl type.
type SiteSourceControlResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Source control configuration for an app.
	SiteSourceControl *SiteSourceControl
}

// SlotConfigNamesResourceResponse is the response envelope for operations that return a SlotConfigNamesResource type.
type SlotConfigNamesResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Slot Config names azure resource.
	SlotConfigNamesResource *SlotConfigNamesResource
}

// SlotDifferenceCollectionResponse is the response envelope for operations that return a SlotDifferenceCollection type.
type SlotDifferenceCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of slot differences.
	SlotDifferenceCollection *SlotDifferenceCollection
}

// SnapshotArrayResponse is the response envelope for operations that return a []*Snapshot type.
type SnapshotArrayResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Array of Snapshot
	SnapshotArray []*Snapshot
}

// SnapshotCollectionResponse is the response envelope for operations that return a SnapshotCollection type.
type SnapshotCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of snapshots which can be used to revert an app to a previous time.
	SnapshotCollection *SnapshotCollection
}

// SourceControlCollectionResponse is the response envelope for operations that return a SourceControlCollection type.
type SourceControlCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of source controls.
	SourceControlCollection *SourceControlCollection
}

// SourceControlResponse is the response envelope for operations that return a SourceControl type.
type SourceControlResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The source control OAuth token.
	SourceControl *SourceControl
}

// StampCapacityCollectionResponse is the response envelope for operations that return a StampCapacityCollection type.
type StampCapacityCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of stamp capacities.
	StampCapacityCollection *StampCapacityCollection
}

// StaticSiteARMResourcePollerResponse is the response envelope for operations that asynchronously return a StaticSiteARMResource type.
type StaticSiteARMResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (StaticSiteARMResourceResponse, error)

	// Poller contains an initialized poller.
	Poller StaticSiteARMResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StaticSiteARMResourceResponse is the response envelope for operations that return a StaticSiteARMResource type.
type StaticSiteARMResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Static Site ARM resource.
	StaticSiteARMResource *StaticSiteARMResource
}

// StaticSiteBuildARMResourceResponse is the response envelope for operations that return a StaticSiteBuildARMResource type.
type StaticSiteBuildARMResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Static Site Build ARM resource.
	StaticSiteBuildARMResource *StaticSiteBuildARMResource
}

// StaticSiteBuildCollectionResponse is the response envelope for operations that return a StaticSiteBuildCollection type.
type StaticSiteBuildCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of static site builds.
	StaticSiteBuildCollection *StaticSiteBuildCollection
}

// StaticSiteCollectionResponse is the response envelope for operations that return a StaticSiteCollection type.
type StaticSiteCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of static sites.
	StaticSiteCollection *StaticSiteCollection
}

// StaticSiteCustomDomainOverviewARMResourcePollerResponse is the response envelope for operations that asynchronously return a StaticSiteCustomDomainOverviewARMResource
// type.
type StaticSiteCustomDomainOverviewARMResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (StaticSiteCustomDomainOverviewARMResourceResponse, error)

	// Poller contains an initialized poller.
	Poller StaticSiteCustomDomainOverviewARMResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StaticSiteCustomDomainOverviewARMResourceResponse is the response envelope for operations that return a StaticSiteCustomDomainOverviewARMResource type.
type StaticSiteCustomDomainOverviewARMResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Static Site Custom Domain Overview ARM resource.
	StaticSiteCustomDomainOverviewARMResource *StaticSiteCustomDomainOverviewARMResource
}

// StaticSiteCustomDomainOverviewCollectionResponse is the response envelope for operations that return a StaticSiteCustomDomainOverviewCollection type.
type StaticSiteCustomDomainOverviewCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of static site custom domains.
	StaticSiteCustomDomainOverviewCollection *StaticSiteCustomDomainOverviewCollection
}

// StaticSiteFunctionOverviewCollectionResponse is the response envelope for operations that return a StaticSiteFunctionOverviewCollection type.
type StaticSiteFunctionOverviewCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of static site functions.
	StaticSiteFunctionOverviewCollection *StaticSiteFunctionOverviewCollection
}

// StaticSiteUserARMResourceResponse is the response envelope for operations that return a StaticSiteUserARMResource type.
type StaticSiteUserARMResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Static Site User ARM resource.
	StaticSiteUserARMResource *StaticSiteUserARMResource
}

// StaticSiteUserCollectionResponse is the response envelope for operations that return a StaticSiteUserCollection type.
type StaticSiteUserCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of static site custom users.
	StaticSiteUserCollection *StaticSiteUserCollection
}

// StaticSiteUserInvitationResponseResourceResponse is the response envelope for operations that return a StaticSiteUserInvitationResponseResource type.
type StaticSiteUserInvitationResponseResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Static sites user roles invitation link resource.
	StaticSiteUserInvitationResponseResource *StaticSiteUserInvitationResponseResource
}

// StaticSiteUserProvidedFunctionAppARMResourcePollerResponse is the response envelope for operations that asynchronously return a StaticSiteUserProvidedFunctionAppARMResource
// type.
type StaticSiteUserProvidedFunctionAppARMResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (StaticSiteUserProvidedFunctionAppARMResourceResponse, error)

	// Poller contains an initialized poller.
	Poller StaticSiteUserProvidedFunctionAppARMResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StaticSiteUserProvidedFunctionAppARMResourceResponse is the response envelope for operations that return a StaticSiteUserProvidedFunctionAppARMResource
// type.
type StaticSiteUserProvidedFunctionAppARMResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Static Site User Provided Function App ARM resource.
	StaticSiteUserProvidedFunctionAppARMResource *StaticSiteUserProvidedFunctionAppARMResource
}

// StaticSiteUserProvidedFunctionAppsCollectionResponse is the response envelope for operations that return a StaticSiteUserProvidedFunctionAppsCollection
// type.
type StaticSiteUserProvidedFunctionAppsCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of static site user provided function apps.
	StaticSiteUserProvidedFunctionAppsCollection *StaticSiteUserProvidedFunctionAppsCollection
}

// StaticSitesWorkflowPreviewResponse is the response envelope for operations that return a StaticSitesWorkflowPreview type.
type StaticSitesWorkflowPreviewResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Preview for the Static Site Workflow to be generated
	StaticSitesWorkflowPreview *StaticSitesWorkflowPreview
}

// StorageMigrationResponsePollerResponse is the response envelope for operations that asynchronously return a StorageMigrationResponse type.
type StorageMigrationResponsePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (StorageMigrationResponseResponse, error)

	// Poller contains an initialized poller.
	Poller StorageMigrationResponsePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StorageMigrationResponseResponse is the response envelope for operations that return a StorageMigrationResponse type.
type StorageMigrationResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Response for a migration of app content request.
	StorageMigrationResponse *StorageMigrationResponse
}

// StringDictionaryResponse is the response envelope for operations that return a StringDictionary type.
type StringDictionaryResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// String dictionary resource.
	StringDictionary *StringDictionary
}

// StringListResponse is the response envelope for operations that return a StringList type.
type StringListResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// String list resource.
	StringList *StringList
}

// StringResponse is the response envelope for operations that return a string type.
type StringResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
	Value       *string
}

// SwiftVirtualNetworkResponse is the response envelope for operations that return a SwiftVirtualNetwork type.
type SwiftVirtualNetworkResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
	SwiftVirtualNetwork *SwiftVirtualNetwork
}

// TldLegalAgreementCollectionResponse is the response envelope for operations that return a TldLegalAgreementCollection type.
type TldLegalAgreementCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of top-level domain legal agreements.
	TldLegalAgreementCollection *TldLegalAgreementCollection
}

// TopLevelDomainCollectionResponse is the response envelope for operations that return a TopLevelDomainCollection type.
type TopLevelDomainCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of Top-level domains.
	TopLevelDomainCollection *TopLevelDomainCollection
}

// TopLevelDomainResponse is the response envelope for operations that return a TopLevelDomain type.
type TopLevelDomainResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A top level domain object.
	TopLevelDomain *TopLevelDomain
}

// TriggeredJobHistoryCollectionResponse is the response envelope for operations that return a TriggeredJobHistoryCollection type.
type TriggeredJobHistoryCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of Kudu continuous web job information elements.
	TriggeredJobHistoryCollection *TriggeredJobHistoryCollection
}

// TriggeredJobHistoryResponse is the response envelope for operations that return a TriggeredJobHistory type.
type TriggeredJobHistoryResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Triggered Web Job History. List of Triggered Web Job Run Information elements.
	TriggeredJobHistory *TriggeredJobHistory
}

// TriggeredWebJobCollectionResponse is the response envelope for operations that return a TriggeredWebJobCollection type.
type TriggeredWebJobCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of Kudu continuous web job information elements.
	TriggeredWebJobCollection *TriggeredWebJobCollection
}

// TriggeredWebJobResponse is the response envelope for operations that return a TriggeredWebJob type.
type TriggeredWebJobResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Triggered Web Job Information.
	TriggeredWebJob *TriggeredWebJob
}

// UsageCollectionResponse is the response envelope for operations that return a UsageCollection type.
type UsageCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of usages.
	UsageCollection *UsageCollection
}

// UserPollerResponse is the response envelope for operations that asynchronously return a User type.
type UserPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (UserResponse, error)

	// Poller contains an initialized poller.
	Poller UserPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserResponse is the response envelope for operations that return a User type.
type UserResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// User credentials used for publishing activity.
	User *User
}

// ValidateResponseResponse is the response envelope for operations that return a ValidateResponse type.
type ValidateResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes the result of resource validation.
	ValidateResponse *ValidateResponse
}

// VnetGatewayResponse is the response envelope for operations that return a VnetGateway type.
type VnetGatewayResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.
	VnetGateway *VnetGateway
}

// VnetInfoArrayResponse is the response envelope for operations that return a []*VnetInfo type.
type VnetInfoArrayResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Array of VnetInfo
	VnetInfoArray []*VnetInfo
}

// VnetInfoResponse is the response envelope for operations that return a VnetInfo type.
type VnetInfoResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Virtual Network information contract.
	VnetInfo *VnetInfo
}

// VnetRouteArrayResponse is the response envelope for operations that return a []*VnetRoute type.
type VnetRouteArrayResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Array of VnetRoute
	VnetRouteArray []*VnetRoute
}

// VnetRouteResponse is the response envelope for operations that return a VnetRoute type.
type VnetRouteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Virtual Network route contract used to pass routing information for a Virtual Network.
	VnetRoute *VnetRoute
}

// VnetValidationFailureDetailsResponse is the response envelope for operations that return a VnetValidationFailureDetails type.
type VnetValidationFailureDetailsResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A class that describes the reason for a validation failure.
	VnetValidationFailureDetails *VnetValidationFailureDetails
}

// WebAppCollectionPagerPollerResponse is the response envelope for operations that asynchronously return a WebAppCollectionPager type.
type WebAppCollectionPagerPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (WebAppCollectionPager, error)

	// Poller contains an initialized poller.
	Poller WebAppCollectionPagerPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// WebAppCollectionResponse is the response envelope for operations that return a WebAppCollection type.
type WebAppCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of App Service apps.
	WebAppCollection *WebAppCollection
}

// WebAppInstanceStatusCollectionResponse is the response envelope for operations that return a WebAppInstanceStatusCollection type.
type WebAppInstanceStatusCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of app instances.
	WebAppInstanceStatusCollection *WebAppInstanceStatusCollection
}

// WebAppStackCollectionResponse is the response envelope for operations that return a WebAppStackCollection type.
type WebAppStackCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of Web app Stacks
	WebAppStackCollection *WebAppStackCollection
}

// WebJobCollectionResponse is the response envelope for operations that return a WebJobCollection type.
type WebJobCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of Kudu web job information elements.
	WebJobCollection *WebJobCollection
}

// WebJobResponse is the response envelope for operations that return a WebJob type.
type WebJobResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Web Job Information.
	WebJob *WebJob
}

// WebSiteInstanceStatusResponse is the response envelope for operations that return a WebSiteInstanceStatus type.
type WebSiteInstanceStatusResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse           *http.Response
	WebSiteInstanceStatus *WebSiteInstanceStatus
}

// WorkerPoolCollectionResponse is the response envelope for operations that return a WorkerPoolCollection type.
type WorkerPoolCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of worker pools.
	WorkerPoolCollection *WorkerPoolCollection
}

// WorkerPoolResourcePollerResponse is the response envelope for operations that asynchronously return a WorkerPoolResource type.
type WorkerPoolResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (WorkerPoolResourceResponse, error)

	// Poller contains an initialized poller.
	Poller WorkerPoolResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// WorkerPoolResourceResponse is the response envelope for operations that return a WorkerPoolResource type.
type WorkerPoolResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Worker pool of an App Service Environment ARM resource.
	WorkerPoolResource *WorkerPoolResource
}
