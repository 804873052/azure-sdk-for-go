trigger: none

pr: none

schedules:
  - cron: "0 1 * * *"
    displayName: Daily release
    branches:
      include:
      - main
    always: true

stages:
  - stage: 
    jobs:
    - job: 
      displayName: Go Auto Release
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '16.16.0'
            checkLatest: true
        
        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'install -g autorest@latest'
            
        - task: GoTool@0
          inputs:
            version: '1.18.2'

        - template: /eng/pipelines/templates/steps/create-go-workspace.yml
            
        - script: |
            echo $GO_WORKSPACE_PATH
            echo $GO_PATH
            echo $(azuresdk-github-pat)
            exit

            sudo ln -s /usr/bin/pwsh /usr/bin/pwsh.exe
            
            rm -rf $GO_WORKSPACE_PATH
            cd $(system.defaultWorkingDirectory)/../go/src/github.com/Azure
            pwd

            git config --global user.email "ReleaseHelper"
            git config --global user.name "ReleaseHelper"

            # cd ../
            git clone https://github.com/Azure/azure-sdk-for-go.git
            git clone https://github.com/Azure/azure-rest-api-specs.git
            ls -a
            cd azure-sdk-for-go
            git remote add fork https://Alancere:$(azuresdk-github-pat)@github.com/Alancere/azure-sdk-for-go.git
            git remote -v
            cd ../

            # use Alancere generator
            mkdir Alancere
            cd Alancere
            git clone https://github.com/Alancere/azure-sdk-for-go.git
            cd azure-sdk-for-go
            git fetch origin auto_sdk_release
            git checkout auto_sdk_release
            cd ./eng/tools/generator
            go install .
            cd $GO_WORKSPACE_PATH
            cd ../
            ########################

            # go install github.com/Azure/azure-sdk-for-go/eng/tools/generator@latest

            generator issue -t $(azuresdk-github-pat) > sdk-release.json
            cat sdk-release.json

            ###
            # echo '{"track2Requests": {"specification/netapp/resource-manager/readme.md": [{"targetDate": "2022-07-22T00:00:00Z", "requestLink": "https://github.com/Azure/sdk-release-request/issues/2965", "packageFlag": "package-netapp-2022-03-01"}]}, "refresh": {}, "additionalOptions": ["--enum-prefix"]}' > sdk-release.json
            # cat sdk-release.json
            ###
          

            file_size=`du -b ./sdk-release.json |awk '{print $1}'`
            echo "file size:" ${file_size}
            if [ ${file_size} -le 70 ]; then
              echo "There are no services that need to be released"
            else
              echo "run genertor release-v2..."
              generator release-v2 ./azure-sdk-for-go ./azure-rest-api-specs ./sdk-release.json -t $(azuresdk-github-pat)
            fi